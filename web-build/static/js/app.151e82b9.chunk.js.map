{"version":3,"sources":["web-build/register-service-worker.js","public/logo/LOGO.png","public/img/background.jpg","src/components/Login/styles.js","src/types/auth.js","src/reducers/auth.js","src/reducers/index.js","src/actions/auth.js","src/modules/validate.js","src/components/spinner/index.js","src/components/Login/index.js","src/components/Header/styles.js","src/components/Header/index.js","src/components/AppState/styles.js","src/components/BodyContent/styles.js","src/components/SignUp/styles.js","src/components/SignUp/index.js","src/components/BodyContent/index.js","src/components/AppState/index.js","src/localStorage.js","src/modules/parser.js","src/sagas/auth.js","src/sagas/index.js","App.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","error","console","module","exports","styles","Dimensions","get","width","StyleSheet","create","login","alignItems","flexDirection","justifyContent","padding","flexWrap","user","minWidth","backgroundColor","borderRadius","fontSize","marginRight","marginTop","password","button","borderWidth","borderColor","errorText","color","section","text","document","marginBottom","fontWeight","sectionText","LOGOUT","isAuthenticating","combineReducers","state","action","type","payload","form","types","signup","auth","token","reducer","getAuthToken","authSelectors","getError","getIsLogging","getIsSigning","startLogin","username","email","completeLogin","failLogin","validateEmail","test","String","toLowerCase","override","Spinner","props","loading","className","css","size","this","React","Component","connect","Message","undefined","loginSatus","dispatch","onSubmit","actions","useState","changeEmail","changePassword","View","style","TextInput","placeholder","value","autoCompleteType","e","target","secureTextEntry","onChangeText","onChange","Button","title","onPress","Text","height","container","paddingBottom","paddingLeft","paddingRight","paddingTop","container2","logo","log","isLogged","Image","source","require","flex","image","marginLeft","body","alignSelf","textContainer","signUp","inputShort","input","inputLarge","subSection","subSection2","subSection3","textSmall","textVerySmall","container3","signInStatus","name","lastname","age","sex","passwordConfirm","gender","firstname","role","changeUser","changePasswordComfirm","changeName","changeLastname","changeAge","changesex","keyboardType","Switch","onValueChange","previousState","BodyContent","MyApp","ImageBackground","imageStyle","opacity","ScrollView","contentContainerStyle","loadState","a","AsyncStorage","getItem","serializedState","JSON","parse","saveState","stringify","setItem","bodyParser","dic","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","watchLoginStarted","watchSignUpStarted","API_BASE_URL","call","fetch","method","headers","response","status","json","put","message","takeEvery","data","msg","mainSaga","all","fork","persistedState","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","subscribe","throttle","getState","Platform","select","ios","android","App","registerRootComponent"],"mappings":"oHAEI,kBAAmBA,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,qCAAsC,CAAEC,MAAO,iBACxDC,MAAK,SAASC,OAFjB,OAKS,SAASC,GACdC,QAAQF,KAAK,oCAAqCC,U,oBCV1DE,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,+LCGvCC,GAFUC,IAAWC,IAAI,UAAUC,MAE1BC,IAAWC,OAAO,CAC3BC,MAAO,CACHC,WAAY,WACZC,cAAe,MACfC,eAAgB,SAChBC,QAAS,EACTC,SAAU,QAEdC,KAAM,CACFC,SAAU,IACVC,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,EACXR,QAAS,IAEbS,SAAS,CACLN,SAAU,IACVC,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,EACXR,QAAS,IAEbU,OAAO,CACHN,gBAAiB,UACjBC,aAAc,GACdM,YAAa,EACbC,YAAa,UACbnB,MAAO,KAEXoB,UAAU,CACND,YAAa,MACbE,MAAO,QACPR,SAAU,IAEdS,QAAQ,CACJjB,cAAe,SACfD,WAAW,UAEfmB,KAAK,CACDF,MAAO,cACPR,SAAU,OAGK,qBAAbW,WACN3B,EAASI,IAAWC,OAAO,CACvBC,MAAO,CACHE,cAAe,SACfC,eAAgB,aAChBF,WAAY,SACZG,QAAS,EACTQ,UAAW,IACXP,SAAU,QAEdC,KAAM,CACFC,SAAU,IACVC,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,GACXR,QAAS,IAEbS,SAAS,CACLN,SAAU,IACVC,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,GACXU,aAAa,GACblB,QAAS,IAEbU,OAAO,CACHN,gBAAiB,UACjBQ,YAAa,UACbP,aAAc,GACdM,YAAa,EACblB,MAAO,IACPe,UAAW,GACXU,aAAc,IAElBL,UAAU,CACNC,MAAO,MACPR,SAAU,IAEdU,KAAK,CACDF,MAAO,QACPR,SAAU,GACVE,UAAW,GACXW,WAAY,QAEhBC,YAAY,CACRZ,UAAW,GACXX,WAAY,UAEhBkB,QAAQ,CACJjB,cAAe,SACfD,WAAW,aAIRP,Q,QCxGF+B,EAAS,SC+FhBC,EAAmBC,YAAgB,CACvC3B,MA1EY,WAA2B,IAA1B4B,EAAyB,uDAAjB,KAAMC,EAAW,uCACtC,OAAOA,EAAOC,MAEZ,ID7BkC,yBC8BhC,OAAO,EAET,ID7BgC,uBCgChC,IDlCoC,2BCmClC,OAAO,KAET,IDpCiC,wBCqC/B,OAA6B,IAAtBD,EAAOE,QAAQC,MAEnB,KAEL,KAAKC,EACH,OAAO,KAGX,OAAOL,GAsDPM,OAnDa,WAAyB,IAAxBN,EAAuB,uDAAjB,KAAMC,EAAW,uCACrC,OAAOA,EAAOC,MAEZ,IDrDkC,yBCsDhC,OAAO,KAET,IDrDgC,uBCsD9B,OAAO,EAET,ID1DoC,2BC2DlC,OAAO,KAET,ID5DiC,wBC6D/B,OAA6B,IAAtBD,EAAOE,QAAQC,MAEnB,KAEL,KAAKC,EACH,OAAO,KAGX,OAAOL,KAuCMO,EANFR,YAAgB,CAC3BS,MArGY,WAA2B,IAA1BR,EAAyB,uDAAjB,KAAMC,EAAW,uCACtC,OAAQA,EAAOC,MAEb,IDPkC,yBCUlC,IDPgC,uBCQ9B,OAAO,KAET,IDZoC,2BCalC,OAAOD,EAAOE,QAAQK,MAExB,IDdiC,wBCiBjC,KAAKH,EACH,OAAO,KAGX,OAAOL,GAmFPF,mBACApC,MA9BY,WAA2B,IAA1BsC,EAAyB,uDAAjB,KAAMC,EAAW,uCACtC,OAAQA,EAAOC,MAEb,IDhFkC,yBCmFlC,IDhFgC,uBCmFhC,IDrFoC,2BCsFlC,OAAO,KAET,IDvFiC,wBCwF/B,OAAOD,EAAOE,QAAQzC,MAExB,KAAK2C,EACH,OAAO,KAGX,OAAOL,KCxFMS,EAJCV,YAAgB,CAC9BQ,SAKWG,EAAe,SAAAV,GAAK,ODsGL,SAAAA,GAAK,OAAIA,EAAMQ,MCtGNG,CAA2BX,EAAMO,OAIzDK,EAAW,SAAAZ,GAAK,ODqGL,SAAAA,GAAK,OAAIA,EAAMtC,MCrGNiD,CAAuBX,EAAMO,OACjDM,EAAe,SAAAb,GAAK,ODqGL,SAAAA,GAAK,OAAKA,EAAMF,iBAAiB1B,MCrGxBuC,CAA2BX,EAAMO,OACzDO,EAAe,SAAAd,GAAK,ODqGL,SAAAA,GAAK,OAAIA,EAAMF,iBAAiBQ,OCrGvBK,CAA2BX,EAAMO,OCdzDQ,EAAa,SAACC,EAAU/B,GAAX,MAAyB,CACjDiB,KHHoC,yBGIpCC,QAAS,CAAEc,MAAOD,EAAW/B,cAgBlBiC,EAAgB,SAAAV,GAAK,MAAK,CACrCN,KHpBsC,2BGqBtCC,QAAS,CAAEK,WAGAW,EAAY,SAACzD,EAAM0C,GAAP,MAAiB,CACxCF,KHxBmC,wBGyBnCC,QAAS,CAAEzC,QAAO0C,UC3Bb,SAASgB,EAAcH,GAE1B,MADS,0JACCI,KAAKC,OAAOL,GAAOM,e,8WCGjC,IAAMC,EAAQ,uEA4BCC,E,uLArBb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,IACD1B,MAAQ,CACX2B,SAAS,GAHM,E,6CAQjB,OACE,yBAAKC,UAAU,eACb,kBAAC,IAAD,CACEC,IAAKL,EACLM,KAAM,GACNxC,MAAO,UACPqC,QAASI,KAAK/B,MAAM2B,e,GAfRK,IAAMC,WC2CbC,eACX,SAAAlC,GAAK,MAAK,CACNmC,QAAgC,OAAtBtB,EAAab,GACjBa,EAAab,GACV,aACAY,EAASZ,QACboC,EACLC,WAAYxB,EAAab,OAE7B,SAAAsC,GAAQ,MAAK,CACTC,SADS,SACAtB,EAAMhC,GACRgC,GAAShC,EACLmC,EAAcH,GACbqB,EAASE,EAAmBvB,EAAMhC,IAGlCqD,EAASE,EAAkB,sBAAsB,IAIhDvB,EAGAhC,GACLqD,EAASE,EAAkB,mCAAmC,IAH9DF,EAASE,EAAkB,gCAAgC,QArB5DN,EA7CD,SAAC,GAAqC,IAAD,EAAnCC,EAAmC,EAAnCA,QAASI,EAA0B,EAA1BA,SAAUF,EAAgB,EAAhBA,WAAgB,EACnBI,mBAAS,IADU,WACxCxB,EADwC,KAClCyB,EADkC,OAEbD,mBAAS,IAFI,WAExCxD,EAFwC,KAE/B0D,EAF+B,KAG/C,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAO/E,EAAOyB,SAChB,kBAACqD,EAAA,EAAD,CAAMC,MAAO/E,EAAOM,OAChB,kBAAC0E,EAAA,GAAD,GACAD,MAAO/E,EAAOY,KACdkD,UAAU,OACV1B,KAAK,OACL6C,YAAY,QACZC,MAAO/B,EACPgC,iBAAiB,SANjB,cAOOhC,GAPP,qBAQc,iBARd,qBAScyB,GATd,kBAUU,SAAAQ,GAAC,OAAIR,EAAYQ,EAAEC,OAAOH,UAVpC,IAYA,kBAACF,EAAA,EAAD,CACID,MAAO/E,EAAOmB,SACd2C,UAAU,WACV1B,KAAK,WACLkD,iBAAiB,EACjBL,YAAY,WACZC,MAAO/D,EACPoE,aAAcV,EACdW,SAAU,SAAAJ,GAAC,OAAEP,EAAeO,EAAEC,OAAOH,UAEpCX,EAAa,kBAAC,EAAD,MAEd,kBAACO,EAAA,EAAD,CAAMC,MAAO/E,EAAOoB,QAChB,kBAACqE,EAAA,EAAD,CAAQ3B,UAAU,eAAetC,MAAM,UAAWkE,MAAO,QAAStD,KAAK,SAASuD,QAC5E,kBAAMlB,EAAStB,EAAMhC,QAKrC,kBAACyE,EAAA,EAAD,CAAMb,MAAO/E,EAAOuB,WAAY8C,GAChC,kBAACS,EAAA,EAAD,CAAMC,MAAO/E,EAAO8B,aAChB,kBAAC8D,EAAA,EAAD,CAAMb,MAAO/E,EAAO0B,MAApB,2BC/CVvB,EAAQF,IAAWC,IAAI,UAAUC,MAGnCH,GAFSC,IAAWC,IAAI,UAAU2F,OAEzBzF,IAAWC,OAAO,CAC3ByF,UAAW,CACTvF,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChBsF,cAAe,GACfC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZ/F,MAAOA,GAETgG,WAAY,CACVN,OAAQ,EACR3E,UAAW,GAEbkF,KAAM,CACJP,OAAQ,GACR1F,MAAO,GACPc,YAAa,KAEfG,OAAO,CACLN,gBAAiB,UACjBC,aAAc,GACdM,YAAa,EACbC,YAAa,UACbnB,MAAO,QAGY,qBAAbwB,WACN3B,EAASI,IAAWC,OAAO,CACvByF,UAAU,CACRvF,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBK,gBAAiB,UACjBQ,YAAa,UACbZ,QAAS,GACTP,MAAOA,GAETgG,WAAY,CACVrF,gBAAiB,UACjB+E,OAAQ,EACR3E,UAAW,GAEbkF,KAAM,CACJlF,UAAW,IACX2E,OAAQ,GACR1F,MAAO,IAETiB,OAAO,CACLN,gBAAiB,UACjBQ,YAAa,UACbP,aAAc,GACdM,YAAa,EACblB,MAAO,IACPe,UAAW,GACXU,aAAc,OAKT5B,SCrCFoE,gBACX,SAAAlC,GAEE,OADArC,QAAQwG,IAAInE,GACL,CACLoE,SAA+B,MAArB1D,EAAaV,OAG3B,SAAAsC,GAAQ,MAAK,CACTC,SADS,WAELD,ELPiB,CAC3BpC,KAAMG,QKHO6B,EApBA,SAAC,GAAD,IAAEkC,EAAF,EAAEA,SAAU7B,EAAZ,EAAYA,SAAZ,OACX,kBAACK,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAMC,MAAO/E,GAAO8F,WAChB,kBAACS,EAAA,EAAD,CAAOxB,MAAO/E,GAAOoG,KAAMI,OAAQC,EAAQ,OAEtCH,EACG,kBAACxB,EAAA,EAAD,CAAMC,MAAO/E,GAAOoB,QAChB,kBAACqE,EAAA,EAAD,CAAQ3B,UAAU,eAAetC,MAAM,UAAWkE,MAAO,UAAWtD,KAAK,SAASuD,QAC9E,kBAAMlB,QAId,kBAAC,EAAD,OAIZ,kBAACK,EAAA,EAAD,CAAMC,MAAO/E,GAAOmG,iBCtBtBN,IADQ5F,IAAWC,IAAI,UAAUC,MACxBF,IAAWC,IAAI,UAAU2F,QAgCzB7F,GA9BAI,IAAWC,OAAO,CAC7ByF,UAAW,CACTY,KAAM,EACNlG,cAAe,SACfqF,OAAQA,IAEVM,WAAY,CACVO,KAAM,EACNlG,cAAe,SACfD,WAAY,UAEdoG,MAAO,CACLpG,WAAY,SACZmG,KAAM,EACNb,OAAQA,IAEVnE,KAAM,CACJR,UAAW,IACXM,MAAO,QACPR,SAAU,IACVa,WAAY,OACZ+E,WAAY,KAEdC,KAAM,CACJ/F,gBAAiB,QACjB+E,OAAQA,MC1BV7F,IAFUC,IAAWC,IAAI,UAAUC,MAE1BC,IAAWC,OAAO,CAC3ByF,UAAW,CACT5E,UAAW,IACXX,WAAY,aACZuG,UAAW,UACXtG,cAAe,MACfC,eAAgB,SAChBwF,aAAc,IACdD,YAAa,KAEftE,KAAM,CACFF,MAAO,QACPR,SAAU,KAEd+F,cAAgB,CACd7F,UAAW,GACXf,MAAO,QAGU,qBAAbwB,WACV3B,GAASI,IAAWC,OAAO,CACvByF,UAAW,CACTvF,WAAY,SACZuG,UAAW,UACXtG,cAAe,SACfC,eAAgB,SAChBuF,YAAa,GACbC,aAAc,IAEhBvE,KAAM,CACFF,MAAO,QACPR,SAAU,IAEd+F,cAAgB,CACZ5G,MAAO,IACPe,UAAU,GACVU,aAAc,GACdX,YAAa,OAKNjB,U,UC1CXA,IAFUC,IAAWC,IAAI,UAAUC,MAE1BC,IAAWC,OAAO,CAC3B2G,OAAQ,CACJzG,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBY,YAAa,EACbC,YAAa,UACbZ,QAAS,GACTkB,aAAc,KAElBqF,WAAY,CACR9G,MAAO,GACP0F,OAAQ,GACR/E,gBAAiB,UACjBC,aAAc,GACdC,SAAU,EACVC,YAAa,GACb2F,WAAY,GACZlG,QAAS,IAEbwG,MAAO,CACH/G,MAAO,IACPW,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,GACXR,QAAS,IAEbyG,WAAY,CACRhH,MAAO,IACPW,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,GACXR,QAAS,IAEbS,SAAS,CACLhB,MAAO,IACPW,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,GACXR,QAAS,IAEbU,OAAO,CACHN,gBAAiB,UACjBC,aAAc,GACdM,YAAa,EACbC,YAAa,UACbnB,MAAO,IACPe,UAAW,IAEfQ,KAAM,CACFF,MAAO,QACPR,SAAU,GACVY,aAAc,IAElBwF,WAAY,CACR7G,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBC,QAAS,EACTC,SAAU,QAEd0G,YAAa,CACT9G,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChBC,QAAS,EACTQ,UAAW,GACXP,SAAU,QAEd2G,YAAa,CACT/G,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBC,QAAS,EACTC,SAAU,QAEd4G,UAAU,CACN/F,MAAO,QACPR,SAAU,IAEdwG,cAAc,CACVhG,MAAO,QACPR,SAAU,IAEdO,UAAU,CACNC,MAAO,QACPR,SAAU,OAGK,qBAAbW,WACN3B,GAASI,IAAWC,OAAO,CACvB2G,OAAQ,CACJzG,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBY,YAAa,EACbC,YAAa,UACbZ,QAAS,IAEbuG,WAAY,CACR9G,MAAO,GACP0F,OAAQ,GACR/E,gBAAiB,UACjBC,aAAc,GACdC,SAAU,EACVC,YAAa,GACb2F,WAAY,GACZlG,QAAS,IAEbwG,MAAO,CACH/G,MAAO,IACPW,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,EACXR,QAAS,IAEbyG,WAAY,CACRhH,MAAO,IACPW,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,EACXR,QAAS,IAEbS,SAAS,CACLhB,MAAO,IACPW,gBAAiB,UACjBC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,EACXR,QAAS,IAEbU,OAAO,CACHN,gBAAiB,UACjBC,aAAc,GACdM,YAAa,EACbC,YAAa,UACbnB,MAAO,IACPyB,aAAc,GACdV,UAAW,IAEfQ,KAAM,CACFF,MAAO,QACPR,SAAU,GACVY,aAAc,GACdV,UAAW,IAEfkG,WAAY,CACR7G,WAAY,WACZC,cAAe,SACfC,eAAgB,SAChBE,SAAU,QAEd0G,YAAa,CACT9G,WAAY,WACZC,cAAe,MACfC,eAAgB,gBAChBC,QAAS,EACTQ,UAAW,GACXP,SAAU,QAEd2G,YAAa,CACT/G,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBC,QAAS,EACTC,SAAU,QAEd4G,UAAU,CACN/F,MAAO,QACPR,SAAU,IAEdwG,cAAc,CACVhG,MAAO,QACPR,SAAU,GAEdO,UAAU,CACNC,MAAO,QACPR,SAAU,IAEdmF,WAAY,CACRN,OAAQ,EACRjE,aAAc,GAElB6F,WAAY,CACR5B,OAAQ,EACR3E,UAAW,EACXU,aAAc,OAKX5B,UC/EAoE,gBACX,SAAAlC,GAAK,MAAK,CACNmC,QAAgC,OAAtBrB,EAAad,GACjBc,EAAad,GACV,aACAY,EAASZ,QACboC,EACLoD,aAAc1E,EAAad,OAE/B,SAAAsC,GAAQ,MAAK,CACTC,SADS,SACAkD,EAAKC,EAAShH,EAAKuC,EAAMhC,EAAS0G,EAAIC,EAAKC,GAC7CnH,GAAQO,GAAYyG,GAAYD,GAAQxE,GAAS0E,EAC7C1G,GAAU4G,EACNF,EAAI,IAAMA,EACNvE,EAAcH,GACbqB,ETtID,SAACmD,EAAMC,EAAU1E,EAAUC,EAAOhC,EAAU0G,EAAKG,GAAjD,MAA6D,CACtF5F,KHLkC,uBGMlCC,QAAS,CACP4F,UAAWN,EACXC,WACA1E,WACAC,QACAhC,WACA0G,MACAG,SACAE,KAAK,IS4H4BxD,CAAoBiD,EAAKC,EAAShH,EAAKuC,EAAMhC,EAAS0G,EAAKC,EAAK,EAAE,IAG3EtD,EAASE,EAAkB,sBAAsB,IAIrDF,EAASE,EAAkB,oBAAoB,IAInDF,EAASE,EAAkB,uBAAuB,IAGjD9D,EAGAO,EAGAwG,EAGAC,EAGAzE,EAGA0E,GACLrD,EAASE,EAAkB,8BAA8B,IAHzDF,EAASE,EAAkB,gCAAgC,IAH3DF,EAASE,EAAkB,mCAAmC,IAH9DF,EAASE,EAAkB,+BAA+B,IAH1DF,EAASE,EAAkB,mCAAmC,IAH9DF,EAASE,EAAkB,+BAA+B,QA9B3DN,EApHA,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,QAASI,EAA4B,EAA5BA,SAAUiD,EAAkB,EAAlBA,aAAkB,EACxB/C,mBAAS,IADe,WAC3C/D,EAD2C,KACtCuH,EADsC,OAEhBxD,mBAAS,IAFO,WAE3CxD,EAF2C,KAElC0D,EAFkC,OAGFF,mBAAS,IAHP,WAG3CoD,EAH2C,KAG3BK,EAH2B,OAItBzD,mBAAS,IAJa,WAI3CxB,EAJ2C,KAIrCyB,EAJqC,OAKxBD,mBAAS,IALe,WAK3CgD,EAL2C,KAKtCU,EALsC,OAMhB1D,mBAAS,IANO,WAM3CiD,EAN2C,KAMlCU,EANkC,OAO1B3D,mBAAS,GAPiB,WAO3CkD,EAP2C,KAOvCU,EAPuC,OAQ1B5D,oBAAS,GARiB,WAQ3CmD,EAR2C,KAQvCU,EARuC,KAWlD,OACI,kBAAC,WAAD,KACA,kBAAC1D,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAMC,MAAO/E,GAAOmG,aACpB,kBAACrB,EAAA,EAAD,CAAMC,MAAO/E,GAAOgH,QAChB,kBAACpB,EAAA,EAAD,CAAMb,MAAO/E,GAAO0B,MAApB,cACA,kBAACsD,EAAA,EAAD,CACID,MAAO/E,GAAOmH,WACdrD,UAAU,aACV1B,KAAK,OACL6C,YAAY,YACZC,MAAOtE,EACP2E,aAAc4C,EACd3C,SAAU,SAAAJ,GAAC,OAAI+C,EAAW/C,EAAEC,OAAOH,UAEvC,kBAACF,EAAA,EAAD,CACID,MAAO/E,GAAOmH,WACdrD,UAAU,QACV1B,KAAK,QACL6C,YAAY,SACZE,iBAAiB,QACjBD,MAAO/B,EACPsF,aAAc,gBACdlD,aAAcX,EACdY,SAAU,SAAAJ,GAAC,OAAER,EAAYQ,EAAEC,OAAOH,UAEtC,kBAACJ,EAAA,EAAD,CAAMC,MAAO/E,GAAOoH,YAChB,kBAACpC,EAAA,EAAD,CACID,MAAO/E,GAAOkH,MACdjC,YAAY,QACZC,MAAOyC,EACPpC,aAAc8C,EACd7C,SAAU,SAAAJ,GAAC,OAAEiD,EAAWjD,EAAEC,OAAOH,UAErC,kBAACF,EAAA,EAAD,CACID,MAAO/E,GAAOkH,MACdhC,MAAO0C,EACP3C,YAAY,YACZM,aAAc+C,EACd9C,SAAU,SAAAJ,GAAC,OAAEkD,EAAelD,EAAEC,OAAOH,WAG7C,kBAACJ,EAAA,EAAD,CAAMC,MAAO/E,GAAOoH,YAChB,kBAACpC,EAAA,EAAD,CACID,MAAO/E,GAAOmB,SACd2C,UAAU,iBACV1B,KAAK,WACLkD,iBAAiB,EACjBL,YAAY,YACZC,MAAO/D,EACPoE,aAAcV,EACdW,SAAU,SAAAJ,GAAC,OAAEP,EAAeO,EAAEC,OAAOH,UAEzC,kBAACF,EAAA,EAAD,CACID,MAAO/E,GAAOmB,SACd2C,UAAU,kBACV1B,KAAK,WACLkD,iBAAiB,EACjBL,YAAY,yBACZC,MAAO6C,EACPxC,aAAc6C,EACd5C,SAAU,SAAAJ,GAAC,OAAEgD,EAAsBhD,EAAEC,OAAOH,WAGpD,kBAACJ,EAAA,EAAD,CAAMC,MAAO/E,GAAOqH,aAChB,kBAACvC,EAAA,EAAD,CAAMC,MAAO/E,GAAOsH,aAChB,kBAAC1B,EAAA,EAAD,CAAMb,MAAO/E,GAAOuH,WAApB,SACA,kBAACvC,EAAA,EAAD,CACID,MAAO/E,GAAOiH,WACdhC,YAAY,MACZC,MAAO2C,EACPY,aAAc,UACdlD,aAAcgD,EACd/C,SAAU,SAAAJ,GAAC,OAAEmD,EAAUnD,EAAEC,OAAOH,WAGxC,kBAACJ,EAAA,EAAD,CAAMC,MAAO/E,GAAOsH,aAChB,kBAAC1B,EAAA,EAAD,CAAMb,MAAO/E,GAAOuH,WAApB,UACA,kBAACzC,EAAA,EAAD,CAAMC,MAAO/E,GAAOsH,aAChB,kBAAC1B,EAAA,EAAD,CAAMb,MAAO/E,GAAOwH,eAApB,OACA,kBAACkB,GAAA,EAAD,CACIC,cAnFP,kBAAMH,GAAU,SAAAI,GAAa,OAAKA,MAoF3B1D,MAAO4C,IAEX,kBAAClC,EAAA,EAAD,CAAMb,MAAO/E,GAAOwH,eAApB,WAIZ,kBAAC5B,EAAA,EAAD,CAAMb,MAAO/E,GAAOuB,WAAY8C,GAE5BqD,EAAe,kBAAC,EAAD,MACf,kBAAC5C,EAAA,EAAD,CAAMC,MAAO/E,GAAOoB,QAChB,kBAACqE,EAAA,EAAD,CAAQrD,KAAK,SAASZ,MAAM,UAAUkE,MAAM,UACxCX,MAAO/E,GAAOoB,OAAQuE,QACtB,kBAAMlB,EAASkD,EAAKC,EAAShH,EAAKuC,EAAMhC,EAAS0G,EAAIC,EAAKC,QAK1E,kBAACjD,EAAA,EAAD,CAAMC,MAAO/E,GAAOyH,kBCxGjBoB,GAVK,kBAChB,kBAAC/D,EAAA,EAAD,CAAMC,MAAO/E,GAAO8F,WAChB,kBAAChB,EAAA,EAAD,CAAMC,MAAO/E,GAAO+G,eAChB,kBAACnB,EAAA,EAAD,CAAMb,MAAO/E,GAAO0B,MAApB,yBAEJ,kBAAC,GAAD,QCHFoH,GAAQ,SAAC,GAAD,IAAExC,EAAF,EAAEA,SAAF,OACZ,kBAACxB,EAAA,EAAD,CAAMC,MAAO/E,GAAO6G,MAClB,kBAACkC,EAAA,EAAD,CAAiBvC,OAAQC,EAAQ,KAAuC1B,MAAO/E,GAAO2G,MAAOqC,WAAY,CAACC,QAAQ,MAE7G3C,EACC,kBAACxB,EAAA,EAAD,KACE,kBAAC,GAAD,MACA,kBAACc,EAAA,EAAD,CAAMb,MAAO/E,GAAO0B,MAApB,qBAGF,kBAACoD,EAAA,EAAD,CAAMC,MAAO/E,GAAOmG,YAClB,kBAAC,GAAD,MACA,kBAAC,GAAD,UAyBG/B,gBACb,SAAAlC,GAEE,OADArC,QAAQwG,IAAInE,GACL,CACLoE,SAA+B,MAArB1D,EAAaV,WAG3BoC,EAPaF,EAhBE,SAAC,GAAgB,IAAfkC,EAAc,EAAdA,SACjB,MAAuB,oBAAZ3E,SAGP,kBAACmD,EAAA,EAAD,CAAMC,MAAO/E,GAAO8F,WAClB,kBAAC,GAAD,CAAOQ,SAAUA,KAKrB,kBAAC4C,EAAA,EAAD,CAAYnE,MAAO/E,GAAO8F,UAAWqD,sBAAuB,CAAC5I,WAAW,WACtE,kBAAC,GAAD,CAAO+F,SAAUA,Q,iDCtCV8C,GAAS,iCAAG,6BAAAC,EAAA,+EAESC,KAAaC,QAAQ,SAF9B,UAGA,QADfC,EAFe,sDAIVlF,GAJU,gCAMdmF,KAAKC,MAAMF,IANG,8DASZlF,GATY,yDAAH,qDAaTqF,GAAS,iCAAG,WAAOzH,GAAP,gBAAAmH,EAAA,sEAEfG,EAAkBC,KAAKG,UAAU1H,GAFlB,SAGfoH,KAAaO,QAAQ,QAAQL,GAHd,sDAMnB3J,QAAQwG,IAAR,MANmB,wDAAH,sD,wCCfTyD,I,OAAa,SAACC,GACvB,IAAIC,EAAW,GACf,IAAK,IAAIC,KAAYF,EAAK,CACtB,IAAIG,EAAaC,mBAAmBF,GAChCG,EAAeD,mBAAmBJ,EAAIE,IAC1CD,EAASK,KAAKH,EAAa,IAAME,GAGrC,OADAJ,EAAWA,EAASM,KAAK,O,aCYnBhK,I,aA4BOiK,I,aAQP/H,I,aA8BOgI,IArEXC,GAAe,oDAGrB,SAAUnK,GAAM6B,GAAhB,gFAGqB,OAHrB,kBAG2BuI,aACrBC,MADyB,UAEtBF,GAFsB,YAGzB,CACEG,OAAQ,OACR/D,KAAMiD,GAAW3H,EAAOE,SACxBwI,QAAS,CACP,eAAgB,uCAV1B,UAc4B,OAXlBC,EAHV,QAciBC,OAdjB,iBAewB,OAfxB,SAe8BD,EAASE,OAfvC,OAgBM,OAhBN,SAectI,EAfd,EAecA,MAfd,UAgBYuI,aAAIvG,EAAsBhC,IAhBtC,gCAkB0B,OAlB1B,UAkBgCoI,EAASE,OAlBzC,QAmBM,OAnBN,SAkBcE,EAlBd,EAkBcA,QAlBd,UAmBYD,aAAIvG,EAAkBwG,EAAQ,IAnB1C,gCAuBI,OAvBJ,oCAuBUD,aAAIvG,EAAkB,oBAAoB,IAvBpD,uDA4BO,SAAU6F,KAAV,kEACL,OADK,SACCY,ajBhD8B,yBiBkDlC7K,IAHG,wCAQP,SAAUkC,GAAOL,GAAjB,gFAEqB,OAFrB,kBAE2BuI,aACrBC,MADyB,UAEtBF,GAFsB,YAGzB,CACEG,OAAQ,OACR/D,KAAM4C,KAAKG,UAAUzH,EAAOE,SAC5BwI,QAAS,CACP,eAAgB,sBAT1B,aAEUC,EAFV,QAaiBC,QAAU,KAAOD,EAASC,QAAU,KAbrD,iBAeQ,OAfR,EAcoC5I,EAAOE,QAA3Bc,EAdhB,EAcgBA,MAAOhC,EAdvB,EAcuBA,SAdvB,SAec8J,aAAIvG,EAAmBvB,EAAOhC,IAf5C,oCAgBe2J,EAASC,QAAU,KAAOD,EAASC,QAAU,KAhB5D,iBAiBQ,OAjBR,UAiBcE,aAAIvG,EAAkB,8BAA8B,IAjBlE,gCAmBmB,OAnBnB,UAmByBoG,EAASE,OAnBlC,QAoBM,OADMI,EAnBZ,iBAoBYH,aAAIvG,EAAkB0G,EAAK,GAAGC,IAAI,IApB9C,gCAyBI,OAzBJ,0BAwBIxL,QAAQwG,IAAR,MAxBJ,UAyBU4E,aAAIvG,EAAkB,oBAAoB,IAzBpD,uDA8BO,SAAU8F,KAAV,kEACL,OADK,SACCW,ajBnF4B,uBiBqFhC3I,IAHG,wC,iBCjFG8I,IAAV,SAAUA,KAAV,kEACE,OADF,SACQC,aAAI,CACRC,aAAKjB,IACLiB,aAAKhB,MAHT,wCAQec,UCCTG,GAAiBrC,KACjBsC,GAAiBC,eACjBC,GAAQC,YAAYlJ,EAAQ8I,GAAeK,YAAgBJ,KACjEA,GAAeK,IAAIT,IACnBM,GAAMI,UAAUC,MAAS,WACvBtC,GAAUiC,GAAMM,eACf,KAEkBC,IAASC,OAAO,CACnCC,IAAI,sDACJC,QAAQ,sFAFV,IAYeC,GAPH,kBACV,kBAAC,IAAD,CAAUX,MAAOA,IACf,kBAAC,GAAD,QCrBJY,YAAsBD,M","file":"static/js/app.151e82b9.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/InsideMaps/expo-service-worker.js', { scope: '/InsideMaps/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/LOGO.00516d3e.png\";","module.exports = __webpack_public_path__ + \"static/media/background.e21b441d.jpg\";","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    login: {\n        alignItems: \"baseline\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    user: {\n        minWidth: 150,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 5,\n        padding: 10\n    },\n    password:{\n        minWidth: 150,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 5,\n        padding: 10,\n    },\n    button:{\n        backgroundColor: '#540A08',\n        borderRadius: 50,\n        borderWidth: 6,\n        borderColor: '#540A08',\n        width: 150\n    },\n    errorText:{\n        borderColor: \"red\",\n        color: \"white\",\n        fontSize: 15,\n    },\n    section:{\n        flexDirection: \"column\",\n        alignItems:\"center\"\n    },\n    text:{\n        color: \"transparent\",\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined'){\n    styles = StyleSheet.create({\n        login: {\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            padding: 5,\n            marginTop: 150,\n            flexWrap: 'wrap'\n        },\n        user: {\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            padding: 10\n        },\n        password:{\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            marginBottom:50,\n            padding: 10,\n        },\n        button:{\n            backgroundColor: '#540A08',\n            borderColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        errorText:{\n            color: \"red\",\n            fontSize: 12,\n        },\n        text:{\n            color: 'white',\n            fontSize: 12,\n            marginTop: 15,\n            fontWeight: \"bold\"\n        },\n        sectionText:{\n            marginTop: 50,\n            alignItems: \"center\"\n        },\n        section:{\n            flexDirection: \"column\",\n            alignItems:\"center\"\n        }\n})}\n\nexport default styles","export const AUTHENTICATION_STARTED = 'AUTHENTICATION_STARTED';\nexport const AUTHENTICATION_COMPLETED = 'AUTHENTICATION_COMPLETED';\nexport const AUTHENTICATION_FAILED = 'AUTHENTICATION_FAILED'; \nexport const REGISTRATION_STARTED = 'REGISTRATION_STARTED';\nexport const LOGOUT = 'LOGOUT';\n","import { combineReducers } from 'redux';\n\nimport * as types from '../types/auth';\n\nconst token = (state = null, action) => {\n  switch (action.type) {\n\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return action.payload.token;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return null;\n    }\n    case types.LOGOUT: {\n      return null;\n    }\n  }\n  return state;\n};\n\nconst login = (state = null, action) => {\n  switch(action.type){\n    \n    case types.AUTHENTICATION_STARTED: {\n      return true;\n    }\n    case types.REGISTRATION_STARTED:{\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return(action.payload.form===0)?\n        (false):\n        (null);\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state\n}\n\nconst signup = (state=null, action) => {\n  switch(action.type){\n    \n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED:{\n      return true;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return(action.payload.form===1)?\n        (false):\n        (null);\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state;\n\n}\n\n\n\nconst error = (state = null, action) => {\n  switch (action.type) {\n\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return action.payload.error;\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state;\n};\n\nconst isAuthenticating = combineReducers({\n  login,\n  signup,\n});\n\nconst auth = combineReducers({\n  token,\n  isAuthenticating,\n  error\n});\n\nexport default auth;\n\nexport const getAuthToken = state => state.token;\nexport const getIsAuthenticating = state => state.isAuthenticating;\nexport const getIsAuthenticatingError = state => state.error;\nexport const getError = state => state.error;\nexport const getIsLogging = state =>  state.isAuthenticating.login;\nexport const getIsSigning = state => state.isAuthenticating.signup;\n","import { combineReducers } from 'redux';\n\nimport auth, * as authSelectors from './auth';\n\nconst reducer = combineReducers({\n  auth\n});\n\nexport default reducer;\n\nexport const getAuthToken = state => authSelectors.getAuthToken(state.auth);\nexport const getIsAuthenticating = state => authSelectors.getIsAuthenticating(state.auth);\nexport const getIsAuthenticatingError = state => authSelectors.getIsAuthenticatingError(state.auth);\nexport const isAuthenticated = state => getAuthToken(state.auth) != null;\nexport const getError = state => authSelectors.getError(state.auth);\nexport const getIsLogging = state => authSelectors.getIsLogging(state.auth);\nexport const getIsSigning = state => authSelectors.getIsSigning(state.auth);\n\n\n//como se ve nuestro estado\n\n/* \n\nstate:{\n\n  auth: {\n    token: null,\n    isAuthenticating:{\n      login:null, \n      signin:false\n    },\n    error:null\n  },\n\n}\n\n*/ ","import * as types from '../types/auth';\n\nexport const startLogin = (username, password) => ({\n  type: types.AUTHENTICATION_STARTED,\n  payload: { email: username,  password},             \n});\n\nexport const startSignUp = (name, lastname, username, email, password, age, gender) => ({\n  type: types.REGISTRATION_STARTED,\n  payload: { \n    firstname: name, \n    lastname, \n    username, \n    email, \n    password, \n    age, \n    gender,\n    role:1},\n});\n\nexport const completeLogin = token => ({\n  type: types.AUTHENTICATION_COMPLETED,\n  payload: { token },\n});\n\nexport const failLogin = (error,form) => ({\n  type: types.AUTHENTICATION_FAILED,\n  payload: { error, form },\n});\n\nexport const logout = () => ({\n  type: types.LOGOUT,\n})","export function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/PulseLoader\";\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n \nclass Spinner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n \n  render() {\n    return (\n      <div className=\"skew-loader\">\n        <ClipLoader\n          css={override}\n          size={10}\n          color={\"#540A08\"}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Spinner;\n\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { View, TextInput, Button, Text } from \"react-native\";\nimport styles from './styles'\nimport { getError, getIsLogging, getIsSigning } from '../../reducers'\nimport * as actions from '../../actions/auth'\nimport { validateEmail } from  '../../modules/validate'\nimport  Spinner  from '../spinner';\n\nconst Login = ({Message ,onSubmit, loginSatus}) => {\n    const [email,changeEmail] = useState('')\n    const [password,changePassword] = useState('')\n    return (\n        <View style={styles.section}>\n            <View style={styles.login}>\n                <TextInput\n                style={styles.user}\n                className=\"user\"\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                autoCompleteType='email'\n                value={email}\n                keyboardType={'email-address'}    \n                onChangeText={changeEmail}\n                onChange={e => changeEmail(e.target.value)}\n                />\n                <TextInput\n                    style={styles.password}\n                    className=\"password\"\n                    type=\"password\"\n                    secureTextEntry={true}\n                    placeholder=\"password\"\n                    value={password}\n                    onChangeText={changePassword}\n                    onChange={e=>changePassword(e.target.value)}\n                />\n                   { loginSatus ? <Spinner />:\n                    \n                    <View style={styles.button}>\n                        <Button className=\"login_button\" color='#540A08'  title={'LOGIN'} type=\"submit\" onPress={\n                            () => onSubmit(email,password)\n                        }/>\n                    </View>\n                }\n            </View>\n            <Text style={styles.errorText}>{Message}</Text>\n            <View style={styles.sectionText}>\n                <Text style={styles.text}>Scroll Down ↓</Text>\n            </View>\n        </View>\n    )\n}\n\nexport default connect(\n    state => ({\n        Message: (getIsLogging(state)!==null)?\n            ((getIsLogging(state))?\n                ('LOADING...'):\n                (getError(state))):\n            (undefined) ,\n        loginSatus: getIsLogging(state)\n    }),\n    dispatch => ({\n        onSubmit(email,password){\n            if(email && password){\n                if(validateEmail(email)){\n                    dispatch(actions.startLogin(email,password))\n                }\n                else{\n                    dispatch(actions.failLogin('WRITE A VALID EMAIL',0))\n                }\n                \n            }    \n            else if(!email){\n                dispatch(actions.failLogin('EMAIL FIELD MUST NOT BE EMPTY',0))\n            }\n            else if(!password){\n                dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',0))\n            }\n        }\n    })\n)(Login)\n\n","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;  // when its in phone, its bigger side will be de heigh\nlet height = Dimensions.get('window').height;  \n\nlet styles = StyleSheet.create({\n    container: {\n      alignItems: \"center\",\n      flexDirection: \"row\",\n      justifyContent: 'space-between',\n      paddingBottom: 15,\n      paddingLeft: 20,\n      paddingRight: 20,\n      paddingTop: 15,\n      width :width\n    },\n    container2: {\n      height: 4,\n      marginTop: 2    \n    },\n    logo: {\n      height: 85,\n      width: 85,\n      marginRight: 170\n    },\n    button:{\n      backgroundColor: '#540A08',\n      borderRadius: 50,\n      borderWidth: 6,\n      borderColor: '#540A08',\n      width: 150\n  },\n  });\n  if(typeof document === 'undefined'){\n      styles = StyleSheet.create({\n          container:{\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            backgroundColor: '#02121B',\n            borderColor: '#FFFFFF',\n            padding: 50,\n            width: width,\n          },\n          container2: {\n            backgroundColor: '#02121B',\n            height: 2,\n            marginTop: 1,\n          },\n          logo: {\n            marginTop: 100,\n            height: 85,\n            width: 85,\n          },\n          button:{\n            backgroundColor: '#540A08',\n            borderColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        });\n  }\n  \n  export default styles","import React from \"react\";\nimport { View, Image, Button } from \"react-native\";\nimport Login from \"../Login\";\nimport styles from './styles';\nimport { connect } from 'react-redux';\nimport { getAuthToken } from '../../reducers';\nimport { logout } from '../../actions/auth';\n\nconst Header = ({isLogged, onSubmit}) => (\n    <View>\n        <View style={styles.container}>\n            <Image style={styles.logo} source={require('../../../public/logo/LOGO.png')} ></Image>\n            {\n                (isLogged)?(\n                    <View style={styles.button}>\n                        <Button className=\"login_button\" color='#540A08'  title={'LOG OUT'} type=\"submit\" onPress={\n                            () => onSubmit()\n                        }/>\n                    </View>\n                ):(\n                    <Login></Login>\n                )\n            }\n        </View>\n        <View style={styles.container2}></View>\n    </View>\n);\n\nexport default connect(\n    state => {\n      console.log(state)\n      return({\n        isLogged: getAuthToken(state)!=null\n      })\n    },\n    dispatch => ({\n        onSubmit(){\n            dispatch(logout())\n        }\n    })\n  )(Header)","import {StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;  // when its in phone, its bigger side will be de heigh\nconst height = Dimensions.get('window').height;  \n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: \"column\",\n      height: height,\n    },\n    container2: {\n      flex: 1,\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    image: {\n      alignItems: 'center',\n      flex: 1,\n      height: height,\n    },\n    text: {\n      marginTop: 100,\n      color: \"white\",\n      fontSize: 100,\n      fontWeight: \"bold\",\n      marginLeft: 150\n    },\n    body: {\n      backgroundColor: \"black\",\n      height: height,\n    }\n  });\n  \n\nexport default styles","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    container: {\n      marginTop: 100,\n      alignItems: \"flex-start\",\n      alignSelf: 'stretch',\n      flexDirection: \"row\",\n      justifyContent: 'center',\n      paddingRight: 150,\n      paddingLeft: 150\n    },\n    text: {\n        color: \"white\",\n        fontSize: 110,\n      },\n    textContainer:  {\n      marginTop: 90,  \n      width: 700\n    }\n  });\nif(typeof document === 'undefined'){\nstyles = StyleSheet.create({\n    container: {\n      alignItems: \"center\",\n      alignSelf: 'stretch',\n      flexDirection: \"column\",\n      justifyContent: 'center',\n      paddingLeft: 20,\n      paddingRight: 20,\n    },\n    text: {\n        color: \"white\",\n        fontSize: 55,\n      },\n    textContainer:  {\n        width: 300,\n        marginTop:80,\n        marginBottom: 80,\n        marginRight: 50\n    }\n  });\n}\n\nexport default styles","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    signUp: {\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        borderWidth: 3,\n        borderColor: '#FFFFFF',\n        padding: 60,\n        marginBottom: 120\n    },\n    inputShort: {\n        width: 70,\n        height: 30,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 9,\n        marginRight: 15,\n        marginLeft: 15,\n        padding: 10,\n    },\n    input: {\n        width: 200,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10\n    },\n    inputLarge: {\n        width: 420,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10\n    },\n    password:{\n        width: 200,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10,\n    },\n    button:{\n        backgroundColor: '#540A08',\n        borderRadius: 50,\n        borderWidth: 6,\n        borderColor: '#540A08',\n        width: 150,\n        marginTop: 50\n    },\n    text: {\n        color: \"white\",\n        fontSize: 40,\n        marginBottom: 60\n    },\n    subSection: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    subSection2: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: 'space-between',\n        padding: 5,\n        marginTop: 12,\n        flexWrap: 'wrap'\n    },\n    subSection3: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    textSmall:{\n        color: \"white\",\n        fontSize: 15,\n    },\n    textVerySmall:{\n        color: \"white\",\n        fontSize: 11    ,\n    },\n    errorText:{\n        color: \"white\",\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined'){\n    styles = StyleSheet.create({\n        signUp: {\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            borderWidth: 1,\n            borderColor: '#FFFFFF',\n            padding: 30,\n        },\n        inputShort: {\n            width: 70,\n            height: 30,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 9,\n            marginRight: 15,\n            marginLeft: 15,\n            padding: 10,\n        },\n        input: {\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15\n        },\n        inputLarge: {\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15\n        },\n        password:{\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15,\n        },\n        button:{\n            backgroundColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            borderColor: '#540A08',\n            width: 150,\n            marginBottom: 20,\n            marginTop: 50\n        },\n        text: {\n            color: \"white\",\n            fontSize: 35,\n            marginBottom: 60,\n            marginTop: 10\n        },\n        subSection: {\n            alignItems: \"baseline\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            flexWrap: 'wrap'\n        },\n        subSection2: {\n            alignItems: \"baseline\",\n            flexDirection: \"row\",\n            justifyContent: 'space-between',\n            padding: 5,\n            marginTop: 12,\n            flexWrap: 'wrap'\n        },\n        subSection3: {\n            alignItems: \"center\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            padding: 5,\n            flexWrap: 'wrap'\n        },\n        textSmall:{\n            color: \"white\",\n            fontSize: 10,\n        },\n        textVerySmall:{\n            color: \"white\",\n            fontSize: 7    ,\n        },\n        errorText:{\n            color: \"white\",\n            fontSize: 15,\n        },\n        container2: {\n            height: 2,\n            marginBottom: 1,\n        },\n        container3: {\n            height: 2,\n            marginTop: 1,\n            marginBottom: 20\n        },\n    });\n}\n\nexport default styles","import React, {useState, Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport { View, TextInput, Button, Text, Switch } from \"react-native\";\nimport styles from './styles'\nimport { getError, getIsSigning } from '../../reducers'\nimport * as actions from '../../actions/auth'\nimport { validateEmail } from  '../../modules/validate'\nimport { getIsLogging } from '../../reducers/auth';\nimport Spinner from '../spinner';\n\nconst SignUp = ({Message, onSubmit, signInStatus}) => {\n    const [user,changeUser] = useState('')\n    const [password,changePassword] = useState('')\n    const [passwordConfirm,changePasswordComfirm] = useState('')\n    const [email,changeEmail] = useState('')\n    const [name,changeName] = useState('')\n    const [lastname,changeLastname] = useState('')\n    const [age,changeAge] = useState(0)\n    const [sex,changesex] = useState(true)\n    const toggleSwitch = () => changesex(previousState => !previousState);\n    \n    return (\n        <Fragment>\n        <View>\n            <View style={styles.container2}></View>\n            <View style={styles.signUp}>\n                <Text style={styles.text}>START NOW </Text>\n                <TextInput\n                    style={styles.inputLarge}\n                    className=\"userSignUp\"\n                    type=\"text\"\n                    placeholder=\"username*\"\n                    value={user}\n                    onChangeText={changeUser}\n                    onChange={e => changeUser(e.target.value)}\n                />\n                <TextInput\n                    style={styles.inputLarge}\n                    className=\"email\"\n                    type=\"email\"\n                    placeholder=\"email*\"\n                    autoCompleteType='email'\n                    value={email}\n                    keyboardType={'email-address'}    \n                    onChangeText={changeEmail}    \n                    onChange={e=>changeEmail(e.target.value)}\n                />\n                <View style={styles.subSection}>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Name*\"\n                        value={name}\n                        onChangeText={changeName}\n                        onChange={e=>changeName(e.target.value)}\n                    />\n                    <TextInput\n                        style={styles.input}\n                        value={lastname}\n                        placeholder=\"Lastname*\"\n                        onChangeText={changeLastname}\n                        onChange={e=>changeLastname(e.target.value)}\n                    />\n                </View>\n                <View style={styles.subSection}>\n                    <TextInput\n                        style={styles.password}\n                        className=\"passwordSignUp\"\n                        type=\"password\"\n                        secureTextEntry={true}\n                        placeholder=\"password*\"\n                        value={password}\n                        onChangeText={changePassword}\n                        onChange={e=>changePassword(e.target.value)}\n                    />\n                    <TextInput\n                        style={styles.password}\n                        className=\"passwordConfirm\"\n                        type=\"password\"\n                        secureTextEntry={true}\n                        placeholder=\"password confirmation*\"\n                        value={passwordConfirm}\n                        onChangeText={changePasswordComfirm}\n                        onChange={e=>changePasswordComfirm(e.target.value)}\n                    />\n                </View>\n                <View style={styles.subSection2}>\n                    <View style={styles.subSection3}>\n                        <Text style={styles.textSmall}>AGE: </Text>\n                        <TextInput\n                            style={styles.inputShort}\n                            placeholder=\"AGE\"\n                            value={age}\n                            keyboardType={'numeric'}\n                            onChangeText={changeAge}\n                            onChange={e=>changeAge(e.target.value)}\n                        />\n                    </View>\n                    <View style={styles.subSection3}>\n                        <Text style={styles.textSmall}>SEX:  </Text>\n                        <View style={styles.subSection3}>\n                            <Text style={styles.textVerySmall}>M  </Text>\n                            <Switch\n                                onValueChange={toggleSwitch}\n                                value={sex}\n                            />\n                            <Text style={styles.textVerySmall}>   F</Text>\n                        </View>\n                    </View>\n                </View>\n                <Text style={styles.errorText}>{Message}</Text>\n                {\n                    signInStatus ? <Spinner/> :\n                    <View style={styles.button}>\n                        <Button type=\"submit\" color='#540A08' title='SIGN UP' \n                            style={styles.button} onPress={\n                            () => onSubmit(name,lastname,user,email,password,age,sex, passwordConfirm)\n                        }/>\n                    </View>\n                }\n            </View>\n            <View style={styles.container3}></View>\n        </View>\n        </Fragment>\n    )\n}\n\nexport default connect(\n    state => ({\n        Message: (getIsSigning(state)!==null)?\n            ((getIsSigning(state))?\n                ('LOADING...'):\n                (getError(state))):\n            (undefined) ,\n        signInStatus: getIsSigning(state)\n    }),\n    dispatch => ({\n        onSubmit(name,lastname,user,email,password,age,sex, passwordConfirm){\n            if(user && password && lastname && name && email && age){\n                if(password==passwordConfirm){\n                    if(age>0 || !age){\n                        if(validateEmail(email)){\n                            dispatch(actions.startSignUp(name,lastname,user,email,password,age,(sex)?0:1));\n                        }\n                        else{\n                            dispatch(actions.failLogin('WRITE A VALID EMAIL',1));\n                        }\n                    }\n                    else{\n                        dispatch(actions.failLogin('WRITE A VALID AGE',1));\n                    }\n                }\n                else{\n                    dispatch(actions.failLogin('PASSWORDS MUST MATCH',1));\n                }\n            }    \n            else if(!user){\n                dispatch(actions.failLogin('USER FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!password){\n                dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!name){\n                dispatch(actions.failLogin('NAME FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!lastname){\n                dispatch(actions.failLogin('LASTNAME FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!email){\n                dispatch(actions.failLogin('EMAIL FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!age){\n                dispatch(actions.failLogin('AGE FIELD MUST NOT BE EMPTY',1));\n            }\n        }\n    })\n)(SignUp)","import React from \"react\";\nimport { View, Image, Text } from \"react-native\";\nimport Login from \"../Login\";\nimport styles from './styles'\nimport SignUp from \"../SignUp\";\n\nconst BodyContent = () => (\n    <View style={styles.container}>\n        <View style={styles.textContainer}>\n            <Text style={styles.text}>GET INDOORS LOCATION</Text>    \n        </View>\n        <SignUp></SignUp>\n    </View>\n);\n\n\nexport default BodyContent","import React from \"react\";\nimport { ImageBackground, ScrollView, View, Text } from \"react-native\";\nimport Header from \"../Header\";\nimport styles from './styles'\nimport BodyContent from \"../BodyContent\";\nimport { connect } from 'react-redux'\nimport { getAuthToken } from '../../reducers/index'\n\nconst MyApp = ({isLogged}) => (\n  <View style={styles.body}>\n    <ImageBackground source={require('../../../public/img/background.jpg')} style={styles.image} imageStyle={{opacity:0.45}}>\n      {\n        (isLogged)?(\n          <View>\n            <Header></Header>\n            <Text style={styles.text}> YOU ARE LOGGED </Text>\n          </View>\n        ):(\n          <View style={styles.container2}>\n            <Header></Header>\n            <BodyContent></BodyContent>\n          </View>\n        )\n      }\n      \n    </ImageBackground>\n  </View>\n)\n\nconst AppState = ({isLogged}) => {\n  if (typeof document != 'undefined') {\n    // I'm on the web!\n    return (\n      <View style={styles.container} >\n        <MyApp isLogged={isLogged}></MyApp>\n      </View>\n    );\n  }\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={{alignItems:\"center\"}}>\n      <MyApp isLogged={isLogged}></MyApp>\n    </ScrollView>\n  )\n}; \n\nexport default connect(\n  state => {\n    console.log(state)\n    return({\n      isLogged: getAuthToken(state)!=null\n    })\n  },\n  undefined\n)(AppState)","import {AsyncStorage} from 'react-native';\n\nexport const loadState = async () => {\n  try{\n    const serializedState = await AsyncStorage.getItem('state');\n    if(serializedState===null){\n        return undefined\n    }\n    return JSON.parse(serializedState);\n  }\n  catch (err){\n      return undefined\n  }\n};\n\nexport const saveState = async (state) => {\n  try{\n    const serializedState = JSON.stringify(state);\n    await AsyncStorage.setItem('state',serializedState)\n  }\n  catch(err){\n      console.log(err)\n  }\n};","export const bodyParser = (dic) => {\n    let formBody = [];\n    for (let property in dic) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(dic[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    return formBody\n}","import {\n  call,\n  takeEvery,\n  put,\n  // race,\n  // all,\n  delay,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/auth';\nimport * as types from '../types/auth';\nimport axios from 'axios';\nimport { bodyParser } from '../modules/parser';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* login(action) {\n\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signin/`,\n      {\n        method: 'POST',\n        body: bodyParser(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,0));   //0 because is in login form\n    }\n\n  } catch (error) {\n    yield put(actions.failLogin('CONNECTION FAILED',0));   //0 because is in login form\n  }\n}\n\n\nexport function* watchLoginStarted() {\n  yield takeEvery(\n    types.AUTHENTICATION_STARTED,\n    login,\n  );\n}\n\n\nfunction* signup(action) {\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signup/`,\n      {\n        method: 'POST',\n        body: JSON.stringify(action.payload),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n    if (response.status >= 200 && response.status <= 300) {\n        const { email, password } = action.payload;\n        yield put(actions.startLogin(email, password));\n    } else if (response.status >= 500 && response.status <= 600){\n        yield put(actions.failLogin('Email is already registered',1));\n    } else {\n      const data = yield response.json(); \n      yield put(actions.failLogin(data[0].msg,1));   //1 because is in signup form\n    }\n\n  } catch (error) {\n    console.log(error)\n    yield put(actions.failLogin('CONNECTION FAILED',1));   //1 because is in signup form\n  }\n  \n}\n\nexport function* watchSignUpStarted() {\n  yield takeEvery(\n    types.REGISTRATION_STARTED,\n    signup,\n  );\n}","import { fork, all } from 'redux-saga/effects';\n\nimport { watchLoginStarted, watchSignUpStarted } from './auth';\n\nfunction* mainSaga() {\n  yield all([\n    fork(watchLoginStarted),\n    fork(watchSignUpStarted)\n  ]);\n}\n\n\nexport default mainSaga;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom' \nimport { Platform } from 'react-native';\nimport AppState from './src/components/AppState'\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './src/reducers';\nimport { loadState, saveState } from './src/localStorage'\nimport throttle from 'lodash/throttle'\nimport createSagaMiddleware from 'redux-saga';\nimport mainSaga from './src/sagas';\n\n//localStorage.clear();\nconst persistedState = loadState()\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer,persistedState,applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mainSaga);\nstore.subscribe(throttle(()=>{\n  saveState(store.getState());\n}),1000)\n\nconst instructions = Platform.select({\n  ios: `Press Cmd+R to reload,\\nCmd+D or shake for dev menu`,\n  android: `Double tap R on your keyboard to reload,\\nShake or press menu button for dev menu`,\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <AppState></AppState>\n  </Provider>\n);\n\n\nexport default App;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}
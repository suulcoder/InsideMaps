{"version":3,"sources":["web-build/register-service-worker.js","public/logo/LOGO.png","public/img/indoor-map.jpg","public/img/indoor.jpg","src/components/Login/styles.js","src/types/auth.js","src/reducers/auth.js","src/reducers/map.js","src/types/map.js","src/reducers/index.js","src/actions/auth.js","src/modules/validate.js","src/components/spinner/index.js","src/components/Login/index.js","src/components/Header/styles.js","src/components/Header/index.js","src/components/AppState/styles.js","src/components/BodyContent/styles.js","src/components/SignUp/styles.js","src/components/SignUp/index.js","src/components/createMapForm/styles.js","src/actions/map.js","src/components/createMapForm/index.js","src/components/MapCard/styles.js","src/components/MapCard/index.js","src/components/MapBoard/styles.js","src/components/MapBoard/index.js","src/components/BodyContent/index.js","src/components/AppState/index.js","src/modules/parser.js","src/sagas/auth.js","src/sagas/map.js","src/sagas/index.js","App.js","src/localStorage.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","error","console","module","exports","width","Dimensions","get","styles","StyleSheet","create","login","alignItems","flexDirection","justifyContent","padding","flexWrap","user","minWidth","backgroundColor","borderRadius","fontSize","marginRight","marginTop","password","button","borderWidth","borderColor","errorText","color","section","text","document","marginBottom","fontWeight","sectionText","LOGOUT","isAuthenticating","combineReducers","state","action","type","payload","form","types","signup","auth","token","byId","log","newState","_id","isConfirmed","oldId","map","omit","entities","order","forEach","id","isFetching","getMap","reducer","maps","getAuthToken","authSelectors","getIsAuthenticating","getError","getIsLogging","getIsSigning","getMaps","mapSelectors","getCreateError","startLogin","username","email","completeLogin","failLogin","validateEmail","test","String","toLowerCase","override","Spinner","View","className","css","size","loading","connect","Message","undefined","loginSatus","dispatch","onSubmit","actions","useState","changeEmail","changePassword","style","TextInput","placeholder","value","e","target","secureTextEntry","onChangeText","onChange","Button","title","onPress","Text","height","container","paddingBottom","paddingLeft","paddingRight","paddingTop","container2","logo","isLogged","Image","source","require","flex","image","marginLeft","overflowX","textContainer","alignSelf","signUp","borderLeftWidth","inputShort","input","inputLarge","subSection","subSection2","subSection3","textSmall","textVerySmall","container3","signInStatus","name","lastname","age","sex","passwordConfirm","gender","firstname","role","changeUser","changePasswordComfirm","changeName","changeLastname","changeAge","changesex","keyboardType","Switch","onValueChange","previousState","display","direction","textAlign","flexGrow","inputTxt","boxShadow","completeCreatingMap","failCreatingMap","isAuthenticated","selectors","onCreate","description","id_place","level","map_filename","qr_code","uuidv4","year","changeDescription","changeId","changeLevel","changeFile","changeQr","length","card","margin","MapCard","key","MyApp","ImageBackground","imageStyle","opacity","AppState","ScrollView","contentContainerStyle","bodyParser","dic","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","watchLoginStarted","watchSignUpStarted","API_BASE_URL","call","fetch","method","body","headers","response","status","json","put","message","takeEvery","JSON","stringify","data","msg","createMap","watchCreateMap","select","Accept","result","mainSaga","all","fork","persistedState","serializedState","localStorage","getItem","parse","err","loadState","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","subscribe","throttle","AsyncStorage","setItem","saveState","getState","Platform","ios","android","App","url","registerRootComponent"],"mappings":"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","file":"static/js/app.e3260954.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/InsideMaps/expo-service-worker.js', { scope: '/InsideMaps/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/LOGO.00516d3e.png\";","module.exports = __webpack_public_path__ + \"static/media/indoor-map.debcb37d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/indoor.9b58729f.jpg\";","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    login: {\n        alignItems: \"baseline\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    user: {\n        minWidth: 150,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 5,\n        padding: 10\n    },\n    password:{\n        minWidth: 150,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 5,\n        padding: 10,\n    },\n    button:{\n        backgroundColor: '#2580f5',\n        borderRadius: 50,\n        borderWidth: 6,\n        borderColor: '#2580f5',\n        width: 150\n    },\n    errorText:{\n        borderColor: \"red\",\n        color: \"white\",\n        fontSize: 15,\n    },\n    section:{\n        flexDirection: \"column\",\n        alignItems:\"center\"\n    },\n    text:{\n        color: \"transparent\",\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined' || width<900){\n    styles = StyleSheet.create({\n        login: {\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            padding: 5,\n            marginTop: 150,\n            flexWrap: 'wrap'\n        },\n        user: {\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            padding: 10\n        },\n        password:{\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            marginBottom:50,\n            padding: 10,\n        },\n        button:{\n            backgroundColor: '#2580f5',\n            borderColor: '#2580f5',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        errorText:{\n            color: \"red\",\n            fontSize: 12,\n        },\n        text:{\n            color: 'white',\n            fontSize: 12,\n            marginTop: 15,\n            fontWeight: \"bold\"\n        },\n        sectionText:{\n            marginTop: 50,\n            alignItems: \"center\"\n        },\n        section:{\n            flexDirection: \"column\",\n            alignItems:\"center\"\n        }\n})}\n\nexport default styles","export const AUTHENTICATION_STARTED = 'AUTHENTICATION_STARTED';\nexport const AUTHENTICATION_COMPLETED = 'AUTHENTICATION_COMPLETED';\nexport const AUTHENTICATION_FAILED = 'AUTHENTICATION_FAILED'; \nexport const REGISTRATION_STARTED = 'REGISTRATION_STARTED';\nexport const LOGOUT = 'LOGOUT';\n","import { combineReducers } from 'redux';\n\nimport * as types from '../types/auth';\n\nconst token = (state = null, action) => {\n  switch (action.type) {\n\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return action.payload.token;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return null;\n    }\n    case types.LOGOUT: {\n      return null;\n    }\n  }\n  return state;\n};\n\nconst login = (state = null, action) => {\n  switch(action.type){\n    \n    case types.AUTHENTICATION_STARTED: {\n      return true;\n    }\n    case types.REGISTRATION_STARTED:{\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return(action.payload.form===0)?\n        (false):\n        (null);\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state\n}\n\nconst signup = (state=null, action) => {\n  switch(action.type){\n    \n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED:{\n      return true;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return(action.payload.form===1)?\n        (false):\n        (null);\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state;\n\n}\n\n\n\nconst error = (state = null, action) => {\n  switch (action.type) {\n\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return action.payload.error;\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state;\n};\n\nconst isAuthenticating = combineReducers({\n  login,\n  signup,\n});\n\nconst auth = combineReducers({\n  token,\n  isAuthenticating,\n  error\n});\n\nexport default auth;\n\nexport const getAuthToken = state => state.token;\nexport const getIsAuthenticating = state => state.isAuthenticating;\nexport const getIsAuthenticatingError = state => state.error;\nexport const getError = state => state.error;\nexport const getIsLogging = state =>  state.isAuthenticating.login;\nexport const getIsSigning = state => state.isAuthenticating.signup;\n","import { combineReducers } from 'redux';\nimport omit from 'lodash/omit';\n\nimport * as types from '../types/map';\n\n\nconst byId = (state = {}, action) => {\n  switch(action.type){\n    case types.CREATE_MAP_STARTED: {\n      console.log(\"SI entro mucha!!!!!!!!\")\n      const newState = {...state};\n      newState[action.payload._id] = {\n        ...action.payload,\n        isConfirmed: false,\n      }\n      return newState;\n    }\n    case types.CREATE_MAP_COMPLETED: {\n      const { oldId, map } = action.payload;\n      const newState = omit(state, oldId);\n      newState[map._id] = {\n        ...map, \n        isConfirmed: true,\n      }\n      return newState;\n    }\n    case types.FETCH_MAP_COMPLETED : {\n      const { entities, order } = action.payload;\n      const newState = {...state};\n      order.forEach(id => {\n        newState[id] = {\n          ...entities[id],\n          isConfirmed: true,\n        };\n      });\n      return newState;\n    }\n\n  }\n  return state;\n};\n\nconst order = (state=[], action) => {\n  switch(action.type){\n    case types.CREATE_MAP_STARTED: {\n      return [...state, action.payload._id];\n    }\n    case types.CREATE_MAP_COMPLETED: {\n      const { oldId, map } = action.payload;\n      return state.map(id => id === oldId ? map._id : id);\n    }\n    case types.FETCH_MAP_COMPLETED: {\n      return [...state, action.payload.order];\n    }\n  }\n  return state;\n};\n\nconst isFetching = (state=false, action) => {\n  switch(action.type){\n    case types.FETCH_MAP_STARTED: {\n      return true;\n    }\n    case types.FETCH_MAP_COMPLETED: {\n      return false;\n    }\n    case types.FETCH_MAP_FAILED: {\n      return false;\n    }\n  }\n  return state;\n  };\n\n\nconst error = (state=null, action) => {\n  switch(action.type){\n    case types.CREATE_MAP_FAILED: {\n      return action.payload.error;\n    }\n    case types.FETCH_MAP_FAILED: {\n      return action.payload.error;\n    }\n    default:{\n      return state;\n    }\n  }\n\n};\n\nexport default combineReducers({\n  byId,\n  order,\n  isFetching,\n  error,\n});\n\n\nexport const getMap = (state, id) => state.byId[id];\nexport const getMaps = state => state.order.map(id => getMap(state, id));\nexport const getCreateError = state => state.error;\n\n","export const CREATE_MAP_STARTED = 'CREATE_MAP_STARTED';\nexport const CREATE_MAP_COMPLETED = 'CREATE_MAP_COMPLETED';\nexport const CREATE_MAP_FAILED = 'CREATE_MAP_FAILED';\n\nexport const FETCH_MAP_STARTED = 'FETCH_MAP_STARTED';\nexport const FETCH_MAP_COMPLETED = 'FETCH_MAP_COMPLETED';\nexport const FETCH_MAP_FAILED = 'FETCH_MAP_FAILED';\n\n\n","import { combineReducers } from 'redux';\n\nimport auth, * as authSelectors from './auth';\nimport maps, * as mapSelectors from './map';\n\nconst reducer = combineReducers({\n  auth,\n  maps,\n});\n\nexport default reducer;\n\nexport const getAuthToken = state => authSelectors.getAuthToken(state.auth);\nexport const getIsAuthenticating = state => authSelectors.getIsAuthenticating(state.auth);\nexport const getIsAuthenticatingError = state => authSelectors.getIsAuthenticatingError(state.auth);\nexport const isAuthenticated = state => {getAuthToken(state.auth) != null};\nexport const getError = state => authSelectors.getError(state.auth);\nexport const getIsLogging = state => authSelectors.getIsLogging(state.auth);\nexport const getIsSigning = state => authSelectors.getIsSigning(state.auth);\n\nexport const getMap = (state, id) => mapSelectors.getMap(state.maps, id);\nexport const getMaps = state => mapSelectors.getMaps(state.maps);\nexport const getCreateError = state => mapSelectors.getCreateError(state.maps);\n\n//como se ve nuestro estado\n\n/* \n\nstate:{\n\n  auth: {\n    token: null,\n    isAuthenticating:{\n      login:null, \n      signin:false\n    },\n    error:null\n  },\n  maps:\n\n}\n\n*/ ","import * as types from '../types/auth';\n\nexport const startLogin = (username, password) => ({\n  type: types.AUTHENTICATION_STARTED,\n  payload: { email: username,  password},             \n});\n\nexport const startSignUp = (name, lastname, username, email, password, age, gender) => ({\n  type: types.REGISTRATION_STARTED,\n  payload: { \n    firstname: name, \n    lastname, \n    username, \n    email, \n    password, \n    age, \n    gender,\n    role:1},\n});\n\nexport const completeLogin = token => ({\n  type: types.AUTHENTICATION_COMPLETED,\n  payload: { token },\n});\n\nexport const failLogin = (error,form) => ({\n  type: types.AUTHENTICATION_FAILED,\n  payload: { error, form },\n});\n\nexport const logout = () => ({\n  type: types.LOGOUT,\n})","export function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/PulseLoader\";\nimport { View } from \"react-native\";\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst Spinner = () => (\n  <View className=\"skew-loader\">\n    <ClipLoader\n      css={override}\n      size={10}\n      color={\"#540A08\"}\n      loading={true}\n    />\n  </View>\n)\n\nexport default Spinner\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { View, TextInput, Button, Text } from \"react-native\";\nimport styles from './styles'\nimport { getError, getIsLogging, getIsSigning } from '../../reducers'\nimport * as actions from '../../actions/auth'\nimport { validateEmail } from  '../../modules/validate'\nimport  Spinner  from '../spinner';\n\nconst Login = ({Message ,onSubmit, loginSatus}) => {\n    const [email,changeEmail] = useState('')\n    const [password,changePassword] = useState('')\n    return (\n        <View style={styles.section}>\n            <View style={styles.login}>\n                <TextInput\n                style={styles.user}\n                className=\"user\"\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                value={email}\n                keyboardType={'email-address'}    \n                onChangeText={changeEmail}\n                onChange={e => changeEmail(e.target.value)}\n                />\n                <TextInput\n                    style={styles.password}\n                    className=\"password\"\n                    type=\"password\"\n                    secureTextEntry={true}\n                    placeholder=\"password\"\n                    value={password}\n                    onChangeText={changePassword}\n                    onChange={e=>changePassword(e.target.value)}\n                />\n                   { loginSatus ? <Spinner />:\n                    <View style={styles.button}>\n                        <Button className=\"login_button\" color='#2580f5'  title={'LOGIN'} type=\"submit\" onPress={\n                            () => onSubmit(email,password)\n                        }/>\n                    </View>\n                }\n            </View>\n            <Text style={styles.errorText}>{Message}</Text>\n            <View style={styles.sectionText}>\n                <Text style={styles.text}>Scroll Down ↓</Text>\n            </View>\n        </View>\n    )\n}\n\nexport default connect(\n    state => ({\n        Message: (getIsLogging(state)!==null)?\n            ((getIsLogging(state))?\n                ('LOADING...'):\n                (getError(state))):\n            (undefined) ,\n        loginSatus: getIsLogging(state)\n    }),\n    dispatch => ({\n        onSubmit(email,password){\n            if(email && password){\n                if(validateEmail(email)){\n                    dispatch(actions.startLogin(email,password))\n                }\n                else{\n                    dispatch(actions.failLogin('WRITE A VALID EMAIL',0))\n                }\n                \n            }    \n            else if(!email){\n                dispatch(actions.failLogin('EMAIL FIELD MUST NOT BE EMPTY',0))\n            }\n            else if(!password){\n                dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',0))\n            }\n        }\n    })\n)(Login)\n\n","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;  // when its in phone, its bigger side will be de heigh\nlet height = Dimensions.get('window').height;  \n\nlet styles = StyleSheet.create({\n    container: {\n      alignItems: \"center\",\n      flexDirection: \"row\",\n      justifyContent: 'space-between',\n      paddingBottom: 15,\n      paddingLeft: 20,\n      paddingRight: 20,\n      paddingTop: 15,\n      width :width\n    },\n    container2: {\n      height: 4,\n      marginTop: 2    \n    },\n    logo: {\n      height: 85,\n      width: 85,\n      marginRight: 170\n    },\n    button:{\n      backgroundColor: '#2580f5',\n      borderRadius: 50,\n      borderWidth: 6,\n      borderColor: '#2580f5',\n      width: 150\n  },\n  });\n  if(typeof document === 'undefined' || width<900){\n      styles = StyleSheet.create({\n          container:{\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            backgroundColor: '#02121B',\n            borderColor: '#FFFFFF',\n            padding: 50,\n            width: width,\n          },\n          container2: {\n            backgroundColor: '#02121B',\n            height: 2,\n            marginTop: 1,\n            width: width,\n          },\n          logo: {\n            marginTop: 100,\n            height: 85,\n            width: 85,\n          },\n          button:{\n            backgroundColor: '#540A08',\n            borderColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        });\n  }\n  \n  export default styles","import React from \"react\";\nimport { View, Image, Button } from \"react-native\";\nimport Login from \"../Login\";\nimport styles from './styles';\nimport { connect } from 'react-redux';\nimport { getAuthToken } from '../../reducers';\nimport { logout } from '../../actions/auth';\n\nconst Header = ({isLogged, onSubmit}) => (\n    <View>\n        <View style={styles.container}>\n            <Image style={styles.logo} source={require('../../../public/logo/LOGO.png')} ></Image>\n            {\n                (isLogged)?(\n                    <View style={styles.button}>\n                        <Button className=\"login_button\" color='#2580f5'  title={'LOG OUT'} type=\"submit\" onPress={\n                            () => onSubmit()\n                        }/>\n                    </View>\n                ):(\n                    <Login></Login>\n                )\n            }\n        </View>\n        <View style={styles.container2}></View>\n    </View>\n);\n\nexport default connect(\n    state => {\n      console.log(state)\n      return({\n        isLogged: getAuthToken(state)!=null\n      })\n    },\n    dispatch => ({\n        onSubmit(){\n            dispatch(logout())\n        }\n    })\n  )(Header)","import {StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;  // when its in phone, its bigger side will be de heigh\nconst height = Dimensions.get('window').height;  \n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: \"column\",\n      backgroundColor: \"black\",\n    },\n    container2: {\n      flex: 1,\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    image: {\n      alignItems: 'center',\n      flex: 1,\n    },\n    text: {\n      marginTop: 100,\n      color: \"white\",\n      fontSize: 100,\n      fontWeight: \"bold\",\n      marginLeft: 150\n    }\n  });\n  \n\nexport default styles","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    container: {\n      overflowX: \"hidden\",\n      marginTop: 50,\n      alignItems: \"flex-start\",\n      //alignSelf: 'stretch',\n      flexDirection: \"row\",\n      justifyContent: 'space-around',\n      paddingRight: 0,\n      paddingLeft: 0,\n      flexWrap: 'wrap',\n      width: width\n    },\n\n\n\n    text: {\n        color: \"white\",\n        fontSize: 80,\n        marginBottom: 150\n      },\n    textContainer:  {\n      marginLeft:-80,\n      marginTop: 90,  \n      width: 530\n    }\n  });\nif(typeof document === 'undefined' || width<900 ){\nstyles = StyleSheet.create({\n    container: {\n      alignItems: \"center\",\n      alignSelf: 'stretch',\n      flexDirection: \"column\",\n      justifyContent: 'center',\n      paddingLeft: 20,\n      paddingRight: 20,\n    },\n    text: {\n        color: \"white\",\n        fontSize: 55,\n        marginRight: 50\n      },\n    textContainer:  {\n        width: 300,\n        marginTop:80,\n        marginBottom: 80,\n        marginRight: 50\n    }\n  });\n}\n\nexport default styles","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    signUp: {\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        borderLeftWidth: 5,\n        borderColor: '#FFFFFF',\n        padding: 60,\n        marginBottom: 120\n    },\n    inputShort: {\n        width: 70,\n        height: 30,\n        borderRadius: 20,\n        backgroundColor: '#FFFFFF',\n        fontSize: 9,\n        marginRight: 15,\n        marginLeft: 15,\n        padding: 10,\n    },\n    input: {\n        width: 200,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10\n    },\n    inputLarge: {\n        width: 420,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10\n    },\n    password:{\n        width: 200,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10,\n    },\n    button:{\n        backgroundColor: '#2580f5',\n        borderRadius: 50,\n        borderWidth: 6,\n        borderColor: '#2580f5',\n        width: 150,\n        marginTop: 50\n    },\n    text: {\n        color: \"white\",\n        fontSize: 40,\n        marginBottom: 60\n    },\n    subSection: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    subSection2: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: 'space-between',\n        padding: 5,\n        marginTop: 12,\n        flexWrap: 'wrap'\n    },\n    subSection3: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    textSmall:{\n        color: \"white\",\n        fontSize: 15,\n    },\n    textVerySmall:{\n        color: \"white\",\n        fontSize: 11    ,\n    },\n    errorText:{\n        color: \"white\",\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined' || width<900){\n    styles = StyleSheet.create({\n        signUp: {\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            borderWidth: 1,\n            borderColor: '#FFFFFF',\n            padding: 30,\n        },\n        inputShort: {\n            width: 70,\n            height: 30,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 9,\n            marginRight: 15,\n            marginLeft: 15,\n            padding: 10,\n        },\n        input: {\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15\n        },\n        inputLarge: {\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15\n        },\n        password:{\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15,\n        },\n        button:{\n            backgroundColor: '#2580f5',\n            borderRadius: 50,\n            borderWidth: 6,\n            borderColor: '#2580f5',\n            width: 150,\n            marginBottom: 20,\n            marginTop: 50\n        },\n        text: {\n            color: \"white\",\n            fontSize: 35,\n            marginBottom: 60,\n            marginTop: 10\n        },\n        subSection: {\n            alignItems: \"baseline\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            flexWrap: 'wrap'\n        },\n        subSection2: {\n            alignItems: \"baseline\",\n            flexDirection: \"row\",\n            justifyContent: 'space-between',\n            padding: 5,\n            marginTop: 12,\n            flexWrap: 'wrap'\n        },\n        subSection3: {\n            alignItems: \"center\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            padding: 5,\n            flexWrap: 'wrap'\n        },\n        textSmall:{\n            color: \"white\",\n            fontSize: 10,\n        },\n        textVerySmall:{\n            color: \"white\",\n            fontSize: 7    ,\n        },\n        errorText:{\n            color: \"white\",\n            fontSize: 15,\n        },\n        container2: {\n            height: 2,\n            marginBottom: 1,\n        },\n        container3: {\n            height: 2,\n            marginTop: 1,\n            marginBottom: 20\n        },\n    });\n}\n\nexport default styles","import React, {useState, Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport { View, TextInput, Button, Text, Switch } from \"react-native\";\nimport styles from './styles'\nimport { getError, getIsSigning } from '../../reducers'\nimport * as actions from '../../actions/auth'\nimport { validateEmail } from  '../../modules/validate'\nimport { getIsLogging } from '../../reducers/auth';\nimport Spinner from '../spinner';\n\nconst SignUp = ({Message, onSubmit, signInStatus}) => {\n    const [user,changeUser] = useState('')\n    const [password,changePassword] = useState('')\n    const [passwordConfirm,changePasswordComfirm] = useState('')\n    const [email,changeEmail] = useState('')\n    const [name,changeName] = useState('')\n    const [lastname,changeLastname] = useState('')\n    const [age,changeAge] = useState('0')\n    const [sex,changesex] = useState(true)\n    const toggleSwitch = () => changesex(previousState => !previousState);\n    \n    return (\n        <Fragment>\n        <View>\n            <View style={styles.container2}></View>\n            <View style={styles.signUp}>\n                <Text style={styles.text}>START NOW </Text>\n                <TextInput\n                    style={styles.inputLarge}\n                    className=\"userSignUp\"\n                    type=\"text\"\n                    placeholder=\"username*\"\n                    value={user}\n                    onChangeText={changeUser}\n                    onChange={e => changeUser(e.target.value)}\n                />\n                <TextInput\n                    style={styles.inputLarge}\n                    className=\"email\"\n                    type=\"email\"\n                    placeholder=\"email*\"\n                    value={email}\n                    keyboardType={'email-address'}    \n                    onChangeText={changeEmail}    \n                    onChange={e=>changeEmail(e.target.value)}\n                />\n                <View style={styles.subSection}>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Name*\"\n                        value={name}\n                        onChangeText={changeName}\n                        onChange={e=>changeName(e.target.value)}\n                    />\n                    <TextInput\n                        style={styles.input}\n                        value={lastname}\n                        placeholder=\"Lastname*\"\n                        onChangeText={changeLastname}\n                        onChange={e=>changeLastname(e.target.value)}\n                    />\n                </View>\n                <View style={styles.subSection}>\n                    <TextInput\n                        style={styles.password}\n                        className=\"passwordSignUp\"\n                        type=\"password\"\n                        secureTextEntry={true}\n                        placeholder=\"password*\"\n                        value={password}\n                        onChangeText={changePassword}\n                        onChange={e=>changePassword(e.target.value)}\n                    />\n                    <TextInput\n                        style={styles.password}\n                        className=\"passwordConfirm\"\n                        type=\"password\"\n                        secureTextEntry={true}\n                        placeholder=\"password confirmation*\"\n                        value={passwordConfirm}\n                        onChangeText={changePasswordComfirm}\n                        onChange={e=>changePasswordComfirm(e.target.value)}\n                    />\n                </View>\n                <View style={styles.subSection2}>\n                    <View style={styles.subSection3}>\n                        <Text style={styles.textSmall}>AGE: </Text>\n                        <TextInput\n                            style={styles.inputShort}\n                            placeholder=\"AGE\"\n                            value={age}\n                            keyboardType={'numeric'}\n                            onChangeText={changeAge}\n                            onChange={e=>changeAge(e.target.value)}\n                        />\n                    </View>\n                    <View style={styles.subSection3}>\n                        <Text style={styles.textSmall}>SEX:  </Text>\n                        <View style={styles.subSection3}>\n                            <Text style={styles.textVerySmall}>M  </Text>\n                            <Switch\n                                onValueChange={toggleSwitch}\n                                value={sex}\n                            />\n                            <Text style={styles.textVerySmall}>   F</Text>\n                        </View>\n                    </View>\n                </View>\n                <Text style={styles.errorText}>{Message}</Text>\n                {\n                    signInStatus ? <Spinner/> :\n                    <View style={styles.button}>\n                        <Button type=\"submit\" color='#2580f5' title='SIGN UP' \n                            style={styles.button} onPress={\n                            () => onSubmit(name,lastname,user,email,password,age,sex, passwordConfirm)\n                        }/>\n                    </View>\n                }\n            </View>\n            <View style={styles.container3}></View>\n        </View>\n        </Fragment>\n    )\n}\n\nexport default connect(\n    state => ({\n        Message: (getIsSigning(state)!==null)?\n            ((getIsSigning(state))?\n                ('LOADING...'):\n                (getError(state))):\n            (undefined) ,\n        signInStatus: getIsSigning(state)\n    }),\n    dispatch => ({\n        onSubmit(name,lastname,user,email,password,age,sex, passwordConfirm){\n            if(user && password && lastname && name && email && age){\n                if(password==passwordConfirm){\n                    if(age>0 || !age){\n                        if(validateEmail(email)){\n                            dispatch(actions.startSignUp(name,lastname,user,email,password,age,(sex)?0:1));\n                        }\n                        else{\n                            dispatch(actions.failLogin('WRITE A VALID EMAIL',1));\n                        }\n                    }\n                    else{\n                        dispatch(actions.failLogin('WRITE A VALID AGE',1));\n                    }\n                }\n                else{\n                    dispatch(actions.failLogin('PASSWORDS MUST MATCH',1));\n                }\n            }    \n            else if(!user){\n                dispatch(actions.failLogin('USER FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!password){\n                dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!name){\n                dispatch(actions.failLogin('NAME FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!lastname){\n                dispatch(actions.failLogin('LASTNAME FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!email){\n                dispatch(actions.failLogin('EMAIL FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!age){\n                dispatch(actions.failLogin('AGE FIELD MUST NOT BE EMPTY',1));\n            }\n        }\n    })\n)(SignUp)","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        direction: 'column',\n        backgroundColor: 'white',\n        textAlign: 'center',\n        padding: '50px',\n        borderRadius: '5px',\n        flexGrow : 1,\n        marginRight: '100px',\n        marginLeft: '100px'\n    },\n\n    inputTxt: {\n        alignItems: \"baseline\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap',\n        backgroundColor: 'white',\n        marginTop: '6px',\n        borderRadius: '5px',\n        borderWidth: 1,\n        borderColor: '#BFBFBF'\n    },\n  \n    button:{\n        backgroundColor: '#white',\n        borderRadius: 15,\n        boxShadow: '10px #000000',\n        marginTop: '20px'        \n\n\n    },\n\n    text:{\n        color: 'gray',\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined' || width<900){\n    styles = StyleSheet.create({\n        login: {\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            padding: 5,\n            marginTop: 150,\n            flexWrap: 'wrap'\n        },\n        user: {\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            padding: 10\n        },\n        password:{\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            marginBottom:50,\n            padding: 10,\n        },\n        button:{\n            backgroundColor: '#2580f5',\n            borderColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        errorText:{\n            color: \"red\",\n            fontSize: 12,\n        },\n        text:{\n            color: 'white',\n            fontSize: 12,\n            marginTop: 15,\n            fontWeight: \"bold\"\n        },\n        sectionText:{\n            marginTop: 50,\n            alignItems: \"center\"\n        },\n        section:{\n            flexDirection: \"column\",\n            alignItems:\"center\"\n        }\n})}\n\nexport default styles","import * as types from '../types/map';\n\nexport const startCreatingMap = map => ({ //map es un diccionario con todo lo que se debe agregar para crear un nuevo mapa\n  type: types.CREATE_MAP_STARTED,\n  payload: map,\n});\n\nexport const completeCreatingMap = (oldId, map) => ({ //igual este map es un dict y contiene un verdadero mapa (no es fachada)\n  type: types.CREATE_MAP_COMPLETED,\n  payload: {\n    oldId,\n    map,\n  }\n});\n\nexport const failCreatingMap = (oldId, error) => ({\n  type: types.CREATE_MAP_FAILED,\n  payload: {\n    oldId,\n    error,\n  },\n});\n\nexport const startFetchingMaps = () => ({\n  type: types.FETCH_MAP_STARTED,\n});\n\nexport const completeFetchingMaps = (entities, order) => ({\n  type: types.FETCH_MAP_COMPLETED,\n  payload: {\n    entities,\n    order\n  }\n});\n\nexport const failFetchingMaps = error => ({\n    type: types.FETCH_MAP_FAILED,\n    payload: {\n      error,\n    }\n});\n\n","import React, {useState, useEffect} from \"react\";\nimport styles from './styles'\n\nimport { View, Text, TextInput, Button } from 'react-native';\nimport { connect } from 'react-redux';\nimport * as selectors from '../../reducers';\nimport * as actions from '../../actions/map';\nimport { select } from \"redux-saga/effects\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst MapForm = ({isAuthenticated, onCreate}) => {\n  \n  const [name, changeName] = useState('');\n  const [description, changeDescription] = useState('');\n  const [id_place, changeId] = useState('');\n  const [level, changeLevel] = useState('');\n  const [map_filename, changeFile] = useState('');\n  const [qr_code, changeQr] = useState('');\n\n  return (\n    <View style={styles.container}>\n      <Text>Create Map</Text>\n      <TextInput\n        style={styles.inputTxt}\n        className=\"name\"\n        type=\"text\"\n        placeholder=\"Name\"\n        value={name}\n        onChange={e => changeName(e.target.value)}\n      />\n      {\n        name.length === 0 ? <Text style={styles.text}>Write a valid name</Text> : <Text></Text>\n      }\n      <TextInput\n        style={styles.inputTxt}\n        className=\"id\"\n        type=\"text\"\n        placeholder=\"Site id\"\n        value={id_place}\n        onChange={e => changeId(e.target.value)}\n      />\n      {\n        id_place.length === 0 ? <Text style={styles.text}>Write a valid id</Text> : <Text></Text>\n      }\n      <TextInput\n        style={styles.inputTxt}\n        className=\"description\"\n        type=\"text\"\n        placeholder=\"Description\"\n        value={description}\n        onChange={e => changeDescription(e.target.value)}\n      />\n      {\n        description.length === 0 ? <Text style={styles.text}>Write a valid description</Text> : <Text></Text>\n      }\n      <TextInput\n        style={styles.inputTxt}\n        className=\"level\"\n        type=\"text\"\n        placeholder=\"Level\"\n        value={level}\n        onChange={e => changeLevel(e.target.value)}\n      />\n      {\n        level.length === 0 ? <Text style={styles.text}>Write a valid level</Text> : <Text></Text>\n      }\n      <TextInput\n        style={styles.inputTxt}\n        className=\"fielName\"\n        type=\"text\"\n        placeholder=\"File Name\"\n        value={map_filename}\n        onChange={e => changeFile(e.target.value)}\n      />\n      {\n        map_filename.length === 0 ? <Text style={styles.text}>Write a valid file name</Text> : <Text></Text>\n      }\n      <TextInput\n        style={styles.inputTxt}\n        className=\"qrCode\"\n        type=\"text\"\n        placeholder=\"QR Code in here \"\n        value={qr_code} \n        onChange={e => changeQr(e.target.value)}\n      />\n      {\n        qr_code.length === 0 ? <Text style={styles.text}>Write a valid qr code</Text> : <Text></Text>\n      }\n      <View style={styles.button}>\n        <Button  style={styles.button} title={'Create'} type=\"submit\" onPress={\n          \n          () => {onCreate(name, description, id_place, level, map_filename,qr_code);\n                changeName('');\n                changeDescription('');\n                changeFile('');\n                changeId('');\n                changeLevel('');\n                changeQr('');\n          }\n        } />\n      </View>\n    </View>\n\n  );\n};\n\n\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.getIsAuthenticating(state),\n    error: selectors.getCreateError(state,)\n  }),\n  dispatch => ({\n    onCreate(name, description, id_place, level, map_filename,qr_code) {\n      const _id = uuidv4();\n      const map = {\n        _id,\n        name,\n        description, \n        id_place, \n        level, \n        year:10,\n        map_filename, \n        qr_code\n      };\n      console.log(\"Esti es se va: \", map);\n      dispatch(actions.startCreatingMap(map));\n    }\n  }),\n)(MapForm);\n//nombre, descripcion, id del lugar, nivel, nombre del archivo, codigoqr","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        direction: 'row',\n        backgroundColor: 'white',\n        textAlign: 'center',\n        padding: '50px',\n        borderRadius: '5px'\n    },\n\n    inputTxt: {\n        alignItems: \"baseline\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap',\n        backgroundColor: 'white',\n        marginTop: '6px',\n        borderRadius: '5px',\n        borderWidth: 1,\n        borderColor: '#BFBFBF'\n    },\n  \n    button:{\n        backgroundColor: '#white',\n        borderRadius: 15,\n        boxShadow: '10px #000000',\n        marginTop: '20px'        \n\n\n    },\n\n    card: {\n     borderRadius:'10px',\n     borderWidth:'1px',\n     borderColor: 'gray',\n     width: '200px',\n     margin: '10px'\n\n    },\n\n    text:{\n        color: 'gray',\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined' || width<900){\n    styles = StyleSheet.create({\n        login: {\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            padding: 5,\n            marginTop: 150,\n            flexWrap: 'wrap'\n        },\n        user: {\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            padding: 10\n        },\n        password:{\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            marginBottom:50,\n            padding: 10,\n        },\n        button:{\n            backgroundColor: '#2580f5',\n            borderColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        errorText:{\n            color: \"red\",\n            fontSize: 12,\n        },\n        text:{\n            color: 'white',\n            fontSize: 12,\n            marginTop: 15,\n            fontWeight: \"bold\"\n        },\n        sectionText:{\n            marginTop: 50,\n            alignItems: \"center\"\n        },\n        section:{\n            flexDirection: \"column\",\n            alignItems:\"center\"\n        }\n})}\n\nexport default styles","import React from 'react';\nimport { View, Image, Text } from \"react-native\";\nimport styles from './styles'\n\n\n\nconst MapCard = ({name, level, id}) => {\n  return (\n\n    <View id={id} style={styles.card}>\n      <Image source={require('../../../public/img/indoor-map.jpg')}/>\n      <Text>Name : {name}</Text>\n      <Text>Level : {level}</Text>\n      \n    </View>\n\n  );\n}\n\nexport default MapCard;","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        direction: 'row',\n        backgroundColor: 'white',\n        textAlign: 'center',\n        padding: '50px',\n        borderRadius: '5px',\n        flexGrow: 1,\n        marginLeft: '100px',\n        flexWrap: 'wrap'\n    },\n\n    inputTxt: {\n        alignItems: \"baseline\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap',\n        backgroundColor: 'white',\n        marginTop: '6px',\n        borderRadius: '5px',\n        borderWidth: 1,\n        borderColor: '#BFBFBF'\n    },\n  \n    button:{\n        backgroundColor: '#white',\n        borderRadius: 15,\n        boxShadow: '10px #000000',\n        marginTop: '20px'        \n\n\n    },\n\n    text:{\n        color: 'gray',\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined' || width<900){\n    styles = StyleSheet.create({\n        login: {\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            padding: 5,\n            marginTop: 150,\n            flexWrap: 'wrap'\n        },\n        user: {\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            padding: 10\n        },\n        password:{\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            marginBottom:50,\n            padding: 10,\n        },\n        button:{\n            backgroundColor: '#2580f5',\n            borderColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        errorText:{\n            color: \"red\",\n            fontSize: 12,\n        },\n        text:{\n            color: 'white',\n            fontSize: 12,\n            marginTop: 15,\n            fontWeight: \"bold\"\n        },\n        sectionText:{\n            marginTop: 50,\n            alignItems: \"center\"\n        },\n        section:{\n            flexDirection: \"column\",\n            alignItems:\"center\"\n        }\n})}\n\nexport default styles","import React from 'react';\nimport { View, Image, Text } from \"react-native\";\nimport { connect } from 'react-redux';\nimport MapCard from '../MapCard';\nimport * as selectors from '../../reducers';\nimport styles from '../MapBoard/styles';\n\nconst MapBoard = ({maps}) => {\n\nreturn (\n  <View style={styles.container}>\n  <Text>Mis mapitas: </Text>\n  {\n    maps.length === 0 ? <Text>No hay mapas aún, intenta agregar uno nuevo, ¡Comencemos!</Text> :\n  \n    maps.map(map => \n      <MapCard \n        key={map._id}\n        name={map.name} \n        id = {map._id}\n        level={map.level}\n      />)\n  }\n  </View>\n);\n\n}\n\nexport default connect(\n  state => ({\n    maps: selectors.getMaps(state),\n    \n  }),\n  undefined\n)(MapBoard);","import React from \"react\";\nimport { View, Image, Text } from \"react-native\";\nimport Login from \"../Login\";\nimport styles from './styles'\nimport SignUp from \"../SignUp\";\nimport { connect } from 'react-redux';\nimport { getAuthToken } from '../../reducers/index';\nimport MapForm from '../createMapForm';\nimport MapBoard from '../MapBoard';\n\n\nconst BodyContent = ({isLogged}) => (\n    <View style={styles.container}>\n        {(isLogged)?(\n            <View style={styles.container}>\n            <MapBoard />\n            <MapForm/>\n            </View>\n        ):(\n            <View style={styles.container}>\n                <View style={styles.textContainer}>\n                    <Text style={styles.text}>GET INDOORS LOCATION</Text>    \n                </View>\n                <SignUp></SignUp>\n            </View>\n        )\n        }\n        \n    </View>\n);\n\n\nexport default connect(\n    state => ({\n        isLogged: getAuthToken(state)!=null\n      }),\n    undefined\n  )(BodyContent)","import React from \"react\";\nimport { ImageBackground, ScrollView, View, Text } from \"react-native\";\nimport Header from \"../Header\";\nimport styles from './styles'\nimport BodyContent from \"../BodyContent\";\n\nconst MyApp = () => (\n    <ImageBackground source={require('../../../public/img/indoor.jpg')} style={styles.image} imageStyle={{opacity:0.45}}>\n      <View style={styles.container2}>\n            <Header></Header>\n            <BodyContent></BodyContent>\n      </View>\n    </ImageBackground>\n)\n\nconst AppState = ({isLogged}) => {\n  if (typeof document != 'undefined') {\n    // I'm on the web!\n    return (\n      <View style={styles.container} >\n        <MyApp isLogged={isLogged}></MyApp>\n      </View>\n    );\n  }\n  return (\n    <View style={{ flex: 1 }}>\n    <ScrollView style={styles.container} contentContainerStyle={{alignItems:\"center\", flexGrow: 1}}>\n      <MyApp ></MyApp>\n    </ScrollView>\n    </View>\n  )\n}; \n\nexport default AppState","export const bodyParser = (dic) => {\n    let formBody = [];\n    for (let property in dic) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(dic[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    return formBody\n}","import {\n  call,\n  takeEvery,\n  put,\n  // race,\n  // all,\n  delay,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/auth';\nimport * as types from '../types/auth';\nimport axios from 'axios';\nimport { bodyParser } from '../modules/parser';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* login(action) {\n\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signin/`,\n      {\n        method: 'POST',\n        body: bodyParser(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,0));   //0 because is in login form\n    }\n\n  } catch (error) {\n    yield put(actions.failLogin('CONNECTION FAILED',0));   //0 because is in login form\n  }\n}\n\n\nexport function* watchLoginStarted() {\n  yield takeEvery(\n    types.AUTHENTICATION_STARTED,\n    login,\n  );\n}\n\n\nfunction* signup(action) {\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signup/`,\n      {\n        method: 'POST',\n        body: JSON.stringify(action.payload),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n    if (response.status >= 200 && response.status <= 300) {\n        const { email, password } = action.payload;\n        yield put(actions.startLogin(email, password));\n    } else if (response.status >= 500 && response.status <= 600){\n        yield put(actions.failLogin('Email is already registered',1));\n    } else {\n      const data = yield response.json(); \n      yield put(actions.failLogin(data[0].msg,1));   //1 because is in signup form\n    }\n\n  } catch (error) {\n    console.log(error)\n    yield put(actions.failLogin('CONNECTION FAILED',1));   //1 because is in signup form\n  }\n  \n}\n\nexport function* watchSignUpStarted() {\n  yield takeEvery(\n    types.REGISTRATION_STARTED,\n    signup,\n  );\n}","import {\n  call,\n  takeEvery,\n  put,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/map';\nimport * as types from '../types/map';\nimport * as selectors from '../reducers';\nimport { bodyParser } from '../modules/parser';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/map/';\n\n\nfunction* createMap(action) {\n  const map  = action.payload;\n  const oldId = map._id;\n  console.log(\"Esto le mando desde el saga\", action.payload)\n  try {\n    //const isAuth = yield select(selectors.isAuthenticated)\n\n    if(true){\n\n      const token = yield select(selectors.getAuthToken);\n\n      const response = yield call(\n        fetch,\n        API_BASE_URL,\n        {\n          method: 'POST',\n          body: JSON.stringify(action.payload),\n          headers: {\n            //'Content-Type': 'application/x-www-form-urlencoded',\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${token}`,\n          },\n        }\n      );\n\n      if(response.status >= 200 && response.status <= 300){\n        const { result } = yield response.json();\n        const map = result;\n        yield put(actions.completeCreatingMap(oldId, map));\n        console.log(\"Se creo un nuevo mapa exitosamente!\", map); \n      } else {\n        console.log(\"Error en la respuesta!\");\n        console.log(\"llega el estatus\", response)\n      }\n\n    } else {\n      console.log('Error de autenticación');\n\n    }\n\n  } catch(error) {\n    console.log(error);\n    yield put(actions.failCreatingMap(oldId, error));\n  }\n}\n\nexport function* watchCreateMap() {\n  yield takeEvery(\n    types.CREATE_MAP_STARTED,\n    createMap,\n  );\n}","import { fork, all } from 'redux-saga/effects';\n\nimport { watchLoginStarted, watchSignUpStarted } from './auth';\nimport { watchCreateMap } from './map';\n\nfunction* mainSaga() {\n  yield all([\n    fork(watchLoginStarted),\n    fork(watchSignUpStarted),\n    fork(watchCreateMap),\n  ]);\n}\n\n\nexport default mainSaga;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom' \nimport { Platform } from 'react-native';\nimport AppState from './src/components/AppState'\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './src/reducers';\nimport { loadState, saveState } from './src/localStorage'\nimport throttle from 'lodash/throttle'\nimport createSagaMiddleware from 'redux-saga';\nimport mainSaga from './src/sagas';\nimport Favicon from 'react-favicon';\n \n//localStorage.clear();\nconst persistedState = loadState()\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer,persistedState,applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mainSaga);\nstore.subscribe(throttle(()=>{\n  saveState(store.getState());\n}),1000)\n\nconst instructions = Platform.select({\n  ios: `Press Cmd+R to reload,\\nCmd+D or shake for dev menu`,\n  android: `Double tap R on your keyboard to reload,\\nShake or press menu button for dev menu`,\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <Favicon url='../public/logo/favicon.ico' />\n    <AppState></AppState>\n  </Provider>\n);\n\n\nexport default App;","import {AsyncStorage} from 'react-native';\n\nexport const loadState = () => {\n  try{\n    const serializedState = localStorage.getItem('state');\n    if(serializedState===null){\n        return undefined\n    }\n    return JSON.parse(serializedState);\n  }\n  catch (err){\n      return undefined\n  }\n};\n\nexport const saveState = (state) => {\n  try{\n    const serializedState = JSON.stringify(state);\n    AsyncStorage.setItem('state',serializedState)\n  }\n  catch(err){\n      console.log(err)\n  }\n};","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}
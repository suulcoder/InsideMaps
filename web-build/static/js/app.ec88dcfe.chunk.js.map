{"version":3,"sources":["web-build/register-service-worker.js","public/logo/LOGO.png","public/img/background.jpg","src/components/Login/styles.js","src/types/auth.js","src/reducers/auth.js","src/reducers/index.js","src/actions/auth.js","src/modules/validate.js","src/components/spinner/index.js","src/components/Login/index.js","src/components/Header/styles.js","src/components/Header/index.js","src/components/AppState/styles.js","src/components/BodyContent/styles.js","src/components/SignUp/styles.js","src/components/SignUp/index.js","src/components/BodyContent/index.js","src/components/AppState/index.js","src/modules/parser.js","src/sagas/auth.js","src/types/map.js","src/actions/map.js","src/sagas/map.js","src/sagas/index.js","App.js","src/localStorage.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","error","console","module","exports","width","Dimensions","get","styles","StyleSheet","create","login","alignItems","flexDirection","justifyContent","padding","flexWrap","user","minWidth","backgroundColor","borderRadius","fontSize","marginRight","marginTop","password","button","borderWidth","borderColor","errorText","color","section","text","document","marginBottom","fontWeight","sectionText","LOGOUT","isAuthenticating","combineReducers","state","action","type","payload","form","types","signup","auth","token","reducer","getAuthToken","authSelectors","isAuthenticated","getError","getIsLogging","getIsSigning","startLogin","username","email","completeLogin","failLogin","validateEmail","test","String","toLowerCase","override","Spinner","View","className","css","size","loading","connect","Message","undefined","loginSatus","dispatch","onSubmit","actions","useState","changeEmail","changePassword","style","TextInput","placeholder","value","e","target","secureTextEntry","onChangeText","onChange","Button","title","onPress","Text","height","container","paddingBottom","paddingLeft","paddingRight","paddingTop","container2","logo","log","isLogged","Image","source","require","flex","image","marginLeft","alignSelf","textContainer","signUp","inputShort","input","inputLarge","subSection","subSection2","subSection3","textSmall","textVerySmall","container3","signInStatus","name","lastname","age","sex","passwordConfirm","gender","firstname","role","changeUser","changePasswordComfirm","changeName","changeLastname","changeAge","changesex","keyboardType","Switch","onValueChange","previousState","MyApp","ImageBackground","imageStyle","opacity","AppState","ScrollView","contentContainerStyle","flexGrow","bodyParser","dic","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","watchLoginStarted","watchSignUpStarted","API_BASE_URL","call","fetch","method","body","headers","response","status","json","put","message","takeEvery","JSON","stringify","data","msg","completeCreatingMap","oldId","map","failCreatingMap","createMap","watchCreateMap","id","select","selectors","newMap","mainSaga","all","fork","persistedState","serializedState","localStorage","getItem","parse","err","loadState","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","subscribe","throttle","AsyncStorage","setItem","saveState","getState","Platform","ios","android","App","url","registerRootComponent"],"mappings":"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","file":"static/js/app.ec88dcfe.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/InsideMaps/expo-service-worker.js', { scope: '/InsideMaps/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/LOGO.00516d3e.png\";","module.exports = __webpack_public_path__ + \"static/media/background.e21b441d.jpg\";","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    login: {\n        alignItems: \"baseline\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    user: {\n        minWidth: 150,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 5,\n        padding: 10\n    },\n    password:{\n        minWidth: 150,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 5,\n        padding: 10,\n    },\n    button:{\n        backgroundColor: '#540A08',\n        borderRadius: 50,\n        borderWidth: 6,\n        borderColor: '#540A08',\n        width: 150\n    },\n    errorText:{\n        borderColor: \"red\",\n        color: \"white\",\n        fontSize: 15,\n    },\n    section:{\n        flexDirection: \"column\",\n        alignItems:\"center\"\n    },\n    text:{\n        color: \"transparent\",\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined' || width<900){\n    styles = StyleSheet.create({\n        login: {\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            padding: 5,\n            marginTop: 150,\n            flexWrap: 'wrap'\n        },\n        user: {\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            padding: 10\n        },\n        password:{\n            minWidth: 250,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 10,\n            marginRight: 15,\n            marginTop: 10,\n            marginBottom:50,\n            padding: 10,\n        },\n        button:{\n            backgroundColor: '#540A08',\n            borderColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        errorText:{\n            color: \"red\",\n            fontSize: 12,\n        },\n        text:{\n            color: 'white',\n            fontSize: 12,\n            marginTop: 15,\n            fontWeight: \"bold\"\n        },\n        sectionText:{\n            marginTop: 50,\n            alignItems: \"center\"\n        },\n        section:{\n            flexDirection: \"column\",\n            alignItems:\"center\"\n        }\n})}\n\nexport default styles","export const AUTHENTICATION_STARTED = 'AUTHENTICATION_STARTED';\nexport const AUTHENTICATION_COMPLETED = 'AUTHENTICATION_COMPLETED';\nexport const AUTHENTICATION_FAILED = 'AUTHENTICATION_FAILED'; \nexport const REGISTRATION_STARTED = 'REGISTRATION_STARTED';\nexport const LOGOUT = 'LOGOUT';\n","import { combineReducers } from 'redux';\n\nimport * as types from '../types/auth';\n\nconst token = (state = null, action) => {\n  switch (action.type) {\n\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return action.payload.token;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return null;\n    }\n    case types.LOGOUT: {\n      return null;\n    }\n  }\n  return state;\n};\n\nconst login = (state = null, action) => {\n  switch(action.type){\n    \n    case types.AUTHENTICATION_STARTED: {\n      return true;\n    }\n    case types.REGISTRATION_STARTED:{\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return(action.payload.form===0)?\n        (false):\n        (null);\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state\n}\n\nconst signup = (state=null, action) => {\n  switch(action.type){\n    \n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED:{\n      return true;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return(action.payload.form===1)?\n        (false):\n        (null);\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state;\n\n}\n\n\n\nconst error = (state = null, action) => {\n  switch (action.type) {\n\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return action.payload.error;\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state;\n};\n\nconst isAuthenticating = combineReducers({\n  login,\n  signup,\n});\n\nconst auth = combineReducers({\n  token,\n  isAuthenticating,\n  error\n});\n\nexport default auth;\n\nexport const getAuthToken = state => state.token;\nexport const getIsAuthenticating = state => state.isAuthenticating;\nexport const getIsAuthenticatingError = state => state.error;\nexport const getError = state => state.error;\nexport const getIsLogging = state =>  state.isAuthenticating.login;\nexport const getIsSigning = state => state.isAuthenticating.signup;\n","import { combineReducers } from 'redux';\n\nimport auth, * as authSelectors from './auth';\n\nconst reducer = combineReducers({\n  auth\n});\n\nexport default reducer;\n\nexport const getAuthToken = state => authSelectors.getAuthToken(state.auth);\nexport const getIsAuthenticating = state => authSelectors.getIsAuthenticating(state.auth);\nexport const getIsAuthenticatingError = state => authSelectors.getIsAuthenticatingError(state.auth);\nexport const isAuthenticated = state => getAuthToken(state.auth) != null;\nexport const getError = state => authSelectors.getError(state.auth);\nexport const getIsLogging = state => authSelectors.getIsLogging(state.auth);\nexport const getIsSigning = state => authSelectors.getIsSigning(state.auth);\n\n\n//como se ve nuestro estado\n\n/* \n\nstate:{\n\n  auth: {\n    token: null,\n    isAuthenticating:{\n      login:null, \n      signin:false\n    },\n    error:null\n  },\n\n}\n\n*/ ","import * as types from '../types/auth';\n\nexport const startLogin = (username, password) => ({\n  type: types.AUTHENTICATION_STARTED,\n  payload: { email: username,  password},             \n});\n\nexport const startSignUp = (name, lastname, username, email, password, age, gender) => ({\n  type: types.REGISTRATION_STARTED,\n  payload: { \n    firstname: name, \n    lastname, \n    username, \n    email, \n    password, \n    age, \n    gender,\n    role:1},\n});\n\nexport const completeLogin = token => ({\n  type: types.AUTHENTICATION_COMPLETED,\n  payload: { token },\n});\n\nexport const failLogin = (error,form) => ({\n  type: types.AUTHENTICATION_FAILED,\n  payload: { error, form },\n});\n\nexport const logout = () => ({\n  type: types.LOGOUT,\n})","export function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/PulseLoader\";\nimport { View } from \"react-native\";\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst Spinner = () => (\n  <View className=\"skew-loader\">\n    <ClipLoader\n      css={override}\n      size={10}\n      color={\"#540A08\"}\n      loading={true}\n    />\n  </View>\n)\n\nexport default Spinner\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { View, TextInput, Button, Text } from \"react-native\";\nimport styles from './styles'\nimport { getError, getIsLogging, getIsSigning } from '../../reducers'\nimport * as actions from '../../actions/auth'\nimport { validateEmail } from  '../../modules/validate'\nimport  Spinner  from '../spinner';\n\nconst Login = ({Message ,onSubmit, loginSatus}) => {\n    const [email,changeEmail] = useState('')\n    const [password,changePassword] = useState('')\n    return (\n        <View style={styles.section}>\n            <View style={styles.login}>\n                <TextInput\n                style={styles.user}\n                className=\"user\"\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                value={email}\n                keyboardType={'email-address'}    \n                onChangeText={changeEmail}\n                onChange={e => changeEmail(e.target.value)}\n                />\n                <TextInput\n                    style={styles.password}\n                    className=\"password\"\n                    type=\"password\"\n                    secureTextEntry={true}\n                    placeholder=\"password\"\n                    value={password}\n                    onChangeText={changePassword}\n                    onChange={e=>changePassword(e.target.value)}\n                />\n                   { loginSatus ? <Spinner />:\n                    <View style={styles.button}>\n                        <Button className=\"login_button\" color='#540A08'  title={'LOGIN'} type=\"submit\" onPress={\n                            () => onSubmit(email,password)\n                        }/>\n                    </View>\n                }\n            </View>\n            <Text style={styles.errorText}>{Message}</Text>\n            <View style={styles.sectionText}>\n                <Text style={styles.text}>Scroll Down ↓</Text>\n            </View>\n        </View>\n    )\n}\n\nexport default connect(\n    state => ({\n        Message: (getIsLogging(state)!==null)?\n            ((getIsLogging(state))?\n                ('LOADING...'):\n                (getError(state))):\n            (undefined) ,\n        loginSatus: getIsLogging(state)\n    }),\n    dispatch => ({\n        onSubmit(email,password){\n            if(email && password){\n                if(validateEmail(email)){\n                    dispatch(actions.startLogin(email,password))\n                }\n                else{\n                    dispatch(actions.failLogin('WRITE A VALID EMAIL',0))\n                }\n                \n            }    \n            else if(!email){\n                dispatch(actions.failLogin('EMAIL FIELD MUST NOT BE EMPTY',0))\n            }\n            else if(!password){\n                dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',0))\n            }\n        }\n    })\n)(Login)\n\n","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;  // when its in phone, its bigger side will be de heigh\nlet height = Dimensions.get('window').height;  \n\nlet styles = StyleSheet.create({\n    container: {\n      alignItems: \"center\",\n      flexDirection: \"row\",\n      justifyContent: 'space-between',\n      paddingBottom: 15,\n      paddingLeft: 20,\n      paddingRight: 20,\n      paddingTop: 15,\n      width :width\n    },\n    container2: {\n      height: 4,\n      marginTop: 2    \n    },\n    logo: {\n      height: 85,\n      width: 85,\n      marginRight: 170\n    },\n    button:{\n      backgroundColor: '#540A08',\n      borderRadius: 50,\n      borderWidth: 6,\n      borderColor: '#540A08',\n      width: 150\n  },\n  });\n  if(typeof document === 'undefined' || width<900){\n      styles = StyleSheet.create({\n          container:{\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            backgroundColor: '#02121B',\n            borderColor: '#FFFFFF',\n            padding: 50,\n            width: width,\n          },\n          container2: {\n            backgroundColor: '#02121B',\n            height: 2,\n            marginTop: 1,\n            width: width,\n          },\n          logo: {\n            marginTop: 100,\n            height: 85,\n            width: 85,\n          },\n          button:{\n            backgroundColor: '#540A08',\n            borderColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            width: 150,\n            marginTop: 35,\n            marginBottom: 20\n        },\n        });\n  }\n  \n  export default styles","import React from \"react\";\nimport { View, Image, Button } from \"react-native\";\nimport Login from \"../Login\";\nimport styles from './styles';\nimport { connect } from 'react-redux';\nimport { getAuthToken } from '../../reducers';\nimport { logout } from '../../actions/auth';\n\nconst Header = ({isLogged, onSubmit}) => (\n    <View>\n        <View style={styles.container}>\n            <Image style={styles.logo} source={require('../../../public/logo/LOGO.png')} ></Image>\n            {\n                (isLogged)?(\n                    <View style={styles.button}>\n                        <Button className=\"login_button\" color='#540A08'  title={'LOG OUT'} type=\"submit\" onPress={\n                            () => onSubmit()\n                        }/>\n                    </View>\n                ):(\n                    <Login></Login>\n                )\n            }\n        </View>\n        <View style={styles.container2}></View>\n    </View>\n);\n\nexport default connect(\n    state => {\n      console.log(state)\n      return({\n        isLogged: getAuthToken(state)!=null\n      })\n    },\n    dispatch => ({\n        onSubmit(){\n            dispatch(logout())\n        }\n    })\n  )(Header)","import {StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;  // when its in phone, its bigger side will be de heigh\nconst height = Dimensions.get('window').height;  \n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: \"column\",\n      backgroundColor: \"black\",\n    },\n    container2: {\n      flex: 1,\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    image: {\n      alignItems: 'center',\n      flex: 1,\n    },\n    text: {\n      marginTop: 100,\n      color: \"white\",\n      fontSize: 100,\n      fontWeight: \"bold\",\n      marginLeft: 150\n    }\n  });\n  \n\nexport default styles","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    container: {\n      marginTop: 50,\n      alignItems: \"flex-start\",\n      alignSelf: 'stretch',\n      flexDirection: \"row\",\n      justifyContent: 'center',\n      paddingRight: 150,\n      paddingLeft: 150,\n      flexWrap: 'wrap',\n      width: width\n    },\n    text: {\n        color: \"white\",\n        fontSize: 110,\n        marginBottom: 150\n      },\n    textContainer:  {\n      marginTop: 90,  \n      width: 700\n    }\n  });\nif(typeof document === 'undefined' || width<900 ){\nstyles = StyleSheet.create({\n    container: {\n      alignItems: \"center\",\n      alignSelf: 'stretch',\n      flexDirection: \"column\",\n      justifyContent: 'center',\n      paddingLeft: 20,\n      paddingRight: 20,\n    },\n    text: {\n        color: \"white\",\n        fontSize: 55,\n        marginRight: 50\n      },\n    textContainer:  {\n        width: 300,\n        marginTop:80,\n        marginBottom: 80,\n        marginRight: 50\n    }\n  });\n}\n\nexport default styles","import { StyleSheet, Dimensions } from \"react-native\";\nconst width = Dimensions.get('window').width;\n\nlet styles = StyleSheet.create({\n    signUp: {\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        borderWidth: 3,\n        borderColor: '#FFFFFF',\n        padding: 60,\n        marginBottom: 120\n    },\n    inputShort: {\n        width: 70,\n        height: 30,\n        borderRadius: 20,\n        backgroundColor: '#FFFFFF',\n        fontSize: 9,\n        marginRight: 15,\n        marginLeft: 15,\n        padding: 10,\n    },\n    input: {\n        width: 200,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10\n    },\n    inputLarge: {\n        width: 420,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10\n    },\n    password:{\n        width: 200,\n        backgroundColor: '#FFFFFF',\n        borderRadius: 20,\n        fontSize: 12,\n        marginRight: 15,\n        marginTop: 12,\n        padding: 10,\n    },\n    button:{\n        backgroundColor: '#540A08',\n        borderRadius: 50,\n        borderWidth: 6,\n        borderColor: '#540A08',\n        width: 150,\n        marginTop: 50\n    },\n    text: {\n        color: \"white\",\n        fontSize: 40,\n        marginBottom: 60\n    },\n    subSection: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    subSection2: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: 'space-between',\n        padding: 5,\n        marginTop: 12,\n        flexWrap: 'wrap'\n    },\n    subSection3: {\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: 5,\n        flexWrap: 'wrap'\n    },\n    textSmall:{\n        color: \"white\",\n        fontSize: 15,\n    },\n    textVerySmall:{\n        color: \"white\",\n        fontSize: 11    ,\n    },\n    errorText:{\n        color: \"white\",\n        fontSize: 15,\n    },\n});\nif(typeof document === 'undefined' || width<900){\n    styles = StyleSheet.create({\n        signUp: {\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            borderWidth: 1,\n            borderColor: '#FFFFFF',\n            padding: 30,\n        },\n        inputShort: {\n            width: 70,\n            height: 30,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 9,\n            marginRight: 15,\n            marginLeft: 15,\n            padding: 10,\n        },\n        input: {\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15\n        },\n        inputLarge: {\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15\n        },\n        password:{\n            width: 270,\n            backgroundColor: '#FFFFFF',\n            borderRadius: 20,\n            fontSize: 12,\n            marginRight: 15,\n            marginTop: 7,\n            padding: 15,\n        },\n        button:{\n            backgroundColor: '#540A08',\n            borderRadius: 50,\n            borderWidth: 6,\n            borderColor: '#540A08',\n            width: 150,\n            marginBottom: 20,\n            marginTop: 50\n        },\n        text: {\n            color: \"white\",\n            fontSize: 35,\n            marginBottom: 60,\n            marginTop: 10\n        },\n        subSection: {\n            alignItems: \"baseline\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            flexWrap: 'wrap'\n        },\n        subSection2: {\n            alignItems: \"baseline\",\n            flexDirection: \"row\",\n            justifyContent: 'space-between',\n            padding: 5,\n            marginTop: 12,\n            flexWrap: 'wrap'\n        },\n        subSection3: {\n            alignItems: \"center\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            padding: 5,\n            flexWrap: 'wrap'\n        },\n        textSmall:{\n            color: \"white\",\n            fontSize: 10,\n        },\n        textVerySmall:{\n            color: \"white\",\n            fontSize: 7    ,\n        },\n        errorText:{\n            color: \"white\",\n            fontSize: 15,\n        },\n        container2: {\n            height: 2,\n            marginBottom: 1,\n        },\n        container3: {\n            height: 2,\n            marginTop: 1,\n            marginBottom: 20\n        },\n    });\n}\n\nexport default styles","import React, {useState, Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport { View, TextInput, Button, Text, Switch } from \"react-native\";\nimport styles from './styles'\nimport { getError, getIsSigning } from '../../reducers'\nimport * as actions from '../../actions/auth'\nimport { validateEmail } from  '../../modules/validate'\nimport { getIsLogging } from '../../reducers/auth';\nimport Spinner from '../spinner';\n\nconst SignUp = ({Message, onSubmit, signInStatus}) => {\n    const [user,changeUser] = useState('')\n    const [password,changePassword] = useState('')\n    const [passwordConfirm,changePasswordComfirm] = useState('')\n    const [email,changeEmail] = useState('')\n    const [name,changeName] = useState('')\n    const [lastname,changeLastname] = useState('')\n    const [age,changeAge] = useState('0')\n    const [sex,changesex] = useState(true)\n    const toggleSwitch = () => changesex(previousState => !previousState);\n    \n    return (\n        <Fragment>\n        <View>\n            <View style={styles.container2}></View>\n            <View style={styles.signUp}>\n                <Text style={styles.text}>START NOW </Text>\n                <TextInput\n                    style={styles.inputLarge}\n                    className=\"userSignUp\"\n                    type=\"text\"\n                    placeholder=\"username*\"\n                    value={user}\n                    onChangeText={changeUser}\n                    onChange={e => changeUser(e.target.value)}\n                />\n                <TextInput\n                    style={styles.inputLarge}\n                    className=\"email\"\n                    type=\"email\"\n                    placeholder=\"email*\"\n                    value={email}\n                    keyboardType={'email-address'}    \n                    onChangeText={changeEmail}    \n                    onChange={e=>changeEmail(e.target.value)}\n                />\n                <View style={styles.subSection}>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Name*\"\n                        value={name}\n                        onChangeText={changeName}\n                        onChange={e=>changeName(e.target.value)}\n                    />\n                    <TextInput\n                        style={styles.input}\n                        value={lastname}\n                        placeholder=\"Lastname*\"\n                        onChangeText={changeLastname}\n                        onChange={e=>changeLastname(e.target.value)}\n                    />\n                </View>\n                <View style={styles.subSection}>\n                    <TextInput\n                        style={styles.password}\n                        className=\"passwordSignUp\"\n                        type=\"password\"\n                        secureTextEntry={true}\n                        placeholder=\"password*\"\n                        value={password}\n                        onChangeText={changePassword}\n                        onChange={e=>changePassword(e.target.value)}\n                    />\n                    <TextInput\n                        style={styles.password}\n                        className=\"passwordConfirm\"\n                        type=\"password\"\n                        secureTextEntry={true}\n                        placeholder=\"password confirmation*\"\n                        value={passwordConfirm}\n                        onChangeText={changePasswordComfirm}\n                        onChange={e=>changePasswordComfirm(e.target.value)}\n                    />\n                </View>\n                <View style={styles.subSection2}>\n                    <View style={styles.subSection3}>\n                        <Text style={styles.textSmall}>AGE: </Text>\n                        <TextInput\n                            style={styles.inputShort}\n                            placeholder=\"AGE\"\n                            value={age}\n                            keyboardType={'numeric'}\n                            onChangeText={changeAge}\n                            onChange={e=>changeAge(e.target.value)}\n                        />\n                    </View>\n                    <View style={styles.subSection3}>\n                        <Text style={styles.textSmall}>SEX:  </Text>\n                        <View style={styles.subSection3}>\n                            <Text style={styles.textVerySmall}>M  </Text>\n                            <Switch\n                                onValueChange={toggleSwitch}\n                                value={sex}\n                            />\n                            <Text style={styles.textVerySmall}>   F</Text>\n                        </View>\n                    </View>\n                </View>\n                <Text style={styles.errorText}>{Message}</Text>\n                {\n                    signInStatus ? <Spinner/> :\n                    <View style={styles.button}>\n                        <Button type=\"submit\" color='#540A08' title='SIGN UP' \n                            style={styles.button} onPress={\n                            () => onSubmit(name,lastname,user,email,password,age,sex, passwordConfirm)\n                        }/>\n                    </View>\n                }\n            </View>\n            <View style={styles.container3}></View>\n        </View>\n        </Fragment>\n    )\n}\n\nexport default connect(\n    state => ({\n        Message: (getIsSigning(state)!==null)?\n            ((getIsSigning(state))?\n                ('LOADING...'):\n                (getError(state))):\n            (undefined) ,\n        signInStatus: getIsSigning(state)\n    }),\n    dispatch => ({\n        onSubmit(name,lastname,user,email,password,age,sex, passwordConfirm){\n            if(user && password && lastname && name && email && age){\n                if(password==passwordConfirm){\n                    if(age>0 || !age){\n                        if(validateEmail(email)){\n                            dispatch(actions.startSignUp(name,lastname,user,email,password,age,(sex)?0:1));\n                        }\n                        else{\n                            dispatch(actions.failLogin('WRITE A VALID EMAIL',1));\n                        }\n                    }\n                    else{\n                        dispatch(actions.failLogin('WRITE A VALID AGE',1));\n                    }\n                }\n                else{\n                    dispatch(actions.failLogin('PASSWORDS MUST MATCH',1));\n                }\n            }    \n            else if(!user){\n                dispatch(actions.failLogin('USER FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!password){\n                dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!name){\n                dispatch(actions.failLogin('NAME FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!lastname){\n                dispatch(actions.failLogin('LASTNAME FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!email){\n                dispatch(actions.failLogin('EMAIL FIELD MUST NOT BE EMPTY',1));\n            }\n            else if(!age){\n                dispatch(actions.failLogin('AGE FIELD MUST NOT BE EMPTY',1));\n            }\n        }\n    })\n)(SignUp)","import React from \"react\";\nimport { View, Image, Text } from \"react-native\";\nimport Login from \"../Login\";\nimport styles from './styles'\nimport SignUp from \"../SignUp\";\nimport { connect } from 'react-redux'\nimport { getAuthToken } from '../../reducers/index'\n\nconst BodyContent = ({isLogged}) => (\n    <View style={styles.container}>\n        {(isLogged)?(\n            <View style={styles.textContainer}>\n                <Text style={styles.text}>YOU ARE LOGGED</Text>    \n            </View>\n        ):(\n            <View style={styles.container}>\n                <View style={styles.textContainer}>\n                    <Text style={styles.text}>GET INDOORS LOCATION</Text>    \n                </View>\n                <SignUp></SignUp>\n            </View>\n        )\n        }\n        \n    </View>\n);\n\n\nexport default connect(\n    state => ({\n        isLogged: getAuthToken(state)!=null\n      }),\n    undefined\n  )(BodyContent)","import React from \"react\";\nimport { ImageBackground, ScrollView, View, Text } from \"react-native\";\nimport Header from \"../Header\";\nimport styles from './styles'\nimport BodyContent from \"../BodyContent\";\n\nconst MyApp = () => (\n    <ImageBackground source={require('../../../public/img/background.jpg')} style={styles.image} imageStyle={{opacity:0.45}}>\n      <View style={styles.container2}>\n            <Header></Header>\n            <BodyContent></BodyContent>\n      </View>\n    </ImageBackground>\n)\n\nconst AppState = ({isLogged}) => {\n  if (typeof document != 'undefined') {\n    // I'm on the web!\n    return (\n      <View style={styles.container} >\n        <MyApp isLogged={isLogged}></MyApp>\n      </View>\n    );\n  }\n  return (\n    <View style={{ flex: 1 }}>\n    <ScrollView style={styles.container} contentContainerStyle={{alignItems:\"center\", flexGrow: 1}}>\n      <MyApp ></MyApp>\n    </ScrollView>\n    </View>\n  )\n}; \n\nexport default AppState","export const bodyParser = (dic) => {\n    let formBody = [];\n    for (let property in dic) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(dic[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    return formBody\n}","import {\n  call,\n  takeEvery,\n  put,\n  // race,\n  // all,\n  delay,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/auth';\nimport * as types from '../types/auth';\nimport { bodyParser } from '../modules/parser';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* login(action) {\n\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signin/`,\n      {\n        method: 'POST',\n        body: bodyParser(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,0));   //0 because is in login form\n    }\n\n  } catch (error) {\n    yield put(actions.failLogin('CONNECTION FAILED',0));   //0 because is in login form\n  }\n}\n\n\nexport function* watchLoginStarted() {\n  yield takeEvery(\n    types.AUTHENTICATION_STARTED,\n    login,\n  );\n}\n\n\nfunction* signup(action) {\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signup/`,\n      {\n        method: 'POST',\n        body: JSON.stringify(action.payload),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n    if (response.status >= 200 && response.status <= 300) {\n        const { email, password } = action.payload;\n        yield put(actions.startLogin(email, password));\n    } else if (response.status >= 500 && response.status <= 600){\n        yield put(actions.failLogin('Email is already registered',1));\n    } else {\n      const data = yield response.json(); \n      yield put(actions.failLogin(data[0].msg,1));   //1 because is in signup form\n    }\n\n  } catch (error) {\n    console.log(error)\n    yield put(actions.failLogin('CONNECTION FAILED',1));   //1 because is in signup form\n  }\n  \n}\n\nexport function* watchSignUpStarted() {\n  yield takeEvery(\n    types.REGISTRATION_STARTED,\n    signup,\n  );\n}","export const CREATE_MAP_STARTED = 'CREATE_MAP_STARTED';\nexport const CREATE_MAP_COMPLETED = 'CREATE_MAP_COMPLETED';\nexport const CREATE_MAP_FAILED = 'CREATE_MAP_FAILED';\n","import * as types from '../types/map';\n\nexport const startCreatingMap = map => ({ //map es un diccionario con todo lo que se debe agregar para crear un nuevo mapa\n  type: types.CREATE_MAP_STARTED,\n  payload: map,\n});\n\nexport const completeCreatingMap = (oldId, map) => ({ //igual este map es un dict y contiene un verdadero mapa (no es fachada)\n  type: types.CREATE_MAP_COMPLETED,\n  payload: {\n    oldId,\n    map,\n  }\n});\n\nexport const failCreatingMap = (oldId, error) => ({\n  type: types.CREATE_MAP_FAILED,\n  payload: {\n    oldId,\n    error,\n  },\n});\n","import {\n  call,\n  takeEvery,\n  put,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/map';\nimport * as types from '../types/map';\nimport * as selectors from '../reducers';\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* createMap(action) {\n  const { map } = action.payload;\n  const oldId = map.id;\n  try {\n    const isAuth = yield select(selectors.isAuthenticated)\n\n    if(isAuth){\n\n      const token = yield select(selectors.getAuthToken);\n\n      const response = yield call(\n        fetch,\n        API_BASE_URL,\n        {\n          method: 'POST',\n          body: action.payload,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${token}`,\n          },\n        }\n      );\n\n      if(response.status === 200){\n        const { newMap } = yield response.json();\n        yield put(actions.completeCreatingMap(oldId, newMap));\n        console.log(\"Se creo un nuevo mapa exitosamente!\", newMap); \n      } else {\n        console.log(\"Error en la respuesta!\");\n      }\n\n    } else {\n      console.log('Error de autenticación');\n    }\n\n  } catch(error) {\n    console.log(error);\n    yield put(actions.failCreatingMap(error));\n  }\n}\n\nexport function* watchCreateMap() {\n  yield takeEvery(\n    types.CREATE_MAP_STARTED,\n    createMap,\n  );\n}","import { fork, all } from 'redux-saga/effects';\n\nimport { watchLoginStarted, watchSignUpStarted } from './auth';\nimport { watchCreateMap } from './map';\n\nfunction* mainSaga() {\n  yield all([\n    fork(watchLoginStarted),\n    fork(watchSignUpStarted),\n    fork(watchCreateMap),\n  ]);\n}\n\n\nexport default mainSaga;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom' \nimport { Platform } from 'react-native';\nimport AppState from './src/components/AppState'\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './src/reducers';\nimport { loadState, saveState } from './src/localStorage'\nimport throttle from 'lodash/throttle'\nimport createSagaMiddleware from 'redux-saga';\nimport mainSaga from './src/sagas';\nimport Favicon from 'react-favicon';\n \n//localStorage.clear();\nconst persistedState = loadState()\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer,persistedState,applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mainSaga);\nstore.subscribe(throttle(()=>{\n  saveState(store.getState());\n}),1000)\n\nconst instructions = Platform.select({\n  ios: `Press Cmd+R to reload,\\nCmd+D or shake for dev menu`,\n  android: `Double tap R on your keyboard to reload,\\nShake or press menu button for dev menu`,\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <Favicon url='../public/logo/favicon.ico' />\n    <AppState></AppState>\n  </Provider>\n);\n\n\nexport default App;","import {AsyncStorage} from 'react-native';\n\nexport const loadState = () => {\n  try{\n    const serializedState = localStorage.getItem('state');\n    if(serializedState===null){\n        return undefined\n    }\n    return JSON.parse(serializedState);\n  }\n  catch (err){\n      return undefined\n  }\n};\n\nexport const saveState = (state) => {\n  try{\n    const serializedState = JSON.stringify(state);\n    AsyncStorage.setItem('state',serializedState)\n  }\n  catch(err){\n      console.log(err)\n  }\n};","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}
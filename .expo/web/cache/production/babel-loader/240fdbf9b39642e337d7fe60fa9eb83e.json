{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Button from\"react-native-web/dist/exports/Button\";import Text from\"react-native-web/dist/exports/Text\";import styles from\"./styles\";import{getError,getIsLogging}from\"../../reducers\";import*as actions from\"../../actions/auth\";var Login=function Login(_ref){var Message=_ref.Message,onSubmit=_ref.onSubmit;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),user=_useState2[0],changeUser=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],changePassword=_useState4[1];return React.createElement(View,{style:styles.section},React.createElement(View,{style:styles.login},React.createElement(TextInput,{style:styles.user,className:\"user\",type:\"text\",placeholder:\"email\",value:user,onChangeText:changeUser,onChange:function onChange(e){return changeUser(e.target.value);}}),React.createElement(TextInput,{style:styles.password,className:\"password\",type:\"password\",secureTextEntry:true,placeholder:\"password\",value:password,onChangeText:changePassword,onChange:function onChange(e){return changePassword(e.target.value);}}),React.createElement(View,{style:styles.button},React.createElement(Button,{className:\"login_button\",color:\"#540A08\",title:'LOGIN',type:\"submit\",onPress:function onPress(){return onSubmit(user,password);}}))),React.createElement(Text,{style:styles.errorText},Message),React.createElement(View,{style:styles.sectionText},React.createElement(Text,{style:styles.text},\"Scroll Down \\u2193\")));};export default connect(function(state){return{Message:getIsLogging(state)!==null?getIsLogging(state)?'LOADING...':getError(state):undefined};},function(dispatch){return{onSubmit:function onSubmit(user,password){if(user&&password){dispatch(actions.startLogin(user,password));}else if(!user){dispatch(actions.failLogin('USER FIELD MUST NOT BE EMPTY',0));}else if(!password){dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',0));}}};})(Login);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/Login/index.js"],"names":["React","useState","connect","styles","getError","getIsLogging","actions","Login","Message","onSubmit","user","changeUser","password","changePassword","section","login","e","target","value","button","errorText","sectionText","text","state","undefined","dispatch","startLogin","failLogin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { View, TextInput, Button, Text } from \"react-native\";\nimport styles from './styles'\nimport { getError, getIsLogging } from '../../reducers'\nimport * as actions from '../../actions/auth'\n\nconst Login = ({Message ,onSubmit}) => {\n    const [user,changeUser] = useState('')\n    const [password,changePassword] = useState('')\n    return (\n        <View style={styles.section}>\n            <View style={styles.login}>\n                <TextInput\n                style={styles.user}\n                className=\"user\"\n                type=\"text\"\n                placeholder=\"email\"\n                value={user}\n                onChangeText={changeUser}\n                onChange={e => changeUser(e.target.value)}\n                />\n                <TextInput\n                    style={styles.password}\n                    className=\"password\"\n                    type=\"password\"\n                    secureTextEntry={true}\n                    placeholder=\"password\"\n                    value={password}\n                    onChangeText={changePassword}\n                    onChange={e=>changePassword(e.target.value)}\n                />\n                <View style={styles.button}>\n                    <Button className=\"login_button\" color='#540A08'  title={'LOGIN'} type=\"submit\" onPress={\n                        () => onSubmit(user,password)\n                    }/>\n                </View>\n                \n            </View>\n            <Text style={styles.errorText}>{Message}</Text>\n            <View style={styles.sectionText}>\n                <Text style={styles.text}>Scroll Down â†“</Text>\n            </View>\n        </View>\n    )\n}\n\nexport default connect(\n    state => ({\n        Message: (getIsLogging(state)!==null)?\n            ((getIsLogging(state))?\n                ('LOADING...'):\n                (getError(state))):\n            (undefined) \n    }),\n    dispatch => ({\n        onSubmit(user,password){\n            if(user && password){\n                dispatch(actions.startLogin(user,password))\n                \n            }    \n            else if(!user){\n                dispatch(actions.failLogin('USER FIELD MUST NOT BE EMPTY',0))\n            }\n            else if(!password){\n                dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',0))\n            }\n        }\n    })\n)(Login)\n\n"]},"metadata":{},"sourceType":"module"}
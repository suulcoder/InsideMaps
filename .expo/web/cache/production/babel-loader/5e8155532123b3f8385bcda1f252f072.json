{"ast":null,"code":"import React from\"react\";import ImageBackground from\"react-native-web/dist/exports/ImageBackground\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Header from\"../Header\";import styles from\"./styles\";import BodyContent from\"../BodyContent\";import{connect}from'react-redux';import{getAuthToken}from\"../../reducers/index\";var MyApp=function MyApp(_ref){var isLogged=_ref.isLogged;return React.createElement(ImageBackground,{source:require(\"../../../public/img/background.jpg\"),style:styles.image,imageStyle:{opacity:0.45}},isLogged?React.createElement(View,null,React.createElement(Header,null),React.createElement(Text,{style:styles.text},\" YOU ARE LOGGED \")):React.createElement(View,{style:styles.container2},React.createElement(Header,null),React.createElement(BodyContent,null)));};var AppState=function AppState(_ref2){var isLogged=_ref2.isLogged;if(typeof document!='undefined'){return React.createElement(View,{style:styles.container},React.createElement(MyApp,{isLogged:isLogged}));}return React.createElement(View,{style:{flex:1}},React.createElement(ScrollView,{style:styles.container,contentContainerStyle:{alignItems:\"center\",flexGrow:1}},React.createElement(MyApp,{isLogged:isLogged})));};export default connect(function(state){console.log(state);return{isLogged:getAuthToken(state)!=null};},undefined)(AppState);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/AppState/index.js"],"names":["React","Header","styles","BodyContent","connect","getAuthToken","MyApp","isLogged","require","image","opacity","text","container2","AppState","document","container","flex","alignItems","flexGrow","state","console","log","undefined"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,sPAEA,MAAOC,CAAAA,MAAP,iBACA,MAAOC,CAAAA,MAAP,gBACA,MAAOC,CAAAA,WAAP,sBACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,YAAT,4BAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,UAAEC,CAAAA,QAAF,MAAEA,QAAF,OACV,qBAAC,eAAD,EAAiB,MAAM,CAAEC,OAAO,sCAAhC,CAAwE,KAAK,CAAEN,MAAM,CAACO,KAAtF,CAA6F,UAAU,CAAE,CAACC,OAAO,CAAC,IAAT,CAAzG,EAEKH,QAAD,CACE,oBAAC,IAAD,MACE,oBAAC,MAAD,MADF,CAEE,oBAAC,IAAD,EAAM,KAAK,CAAEL,MAAM,CAACS,IAApB,qBAFF,CADF,CAME,oBAAC,IAAD,EAAM,KAAK,CAAET,MAAM,CAACU,UAApB,EACE,oBAAC,MAAD,MADF,CAEE,oBAAC,WAAD,MAFF,CARN,CADU,EAAd,CAmBA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,OAAgB,IAAdN,CAAAA,QAAc,OAAdA,QAAc,CAC/B,GAAI,MAAOO,CAAAA,QAAP,EAAmB,WAAvB,CAAoC,CAElC,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEZ,MAAM,CAACa,SAApB,EACE,oBAAC,KAAD,EAAO,QAAQ,CAAER,QAAjB,EADF,CADF,CAKD,CACD,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAAES,IAAI,CAAE,CAAR,CAAb,EACA,oBAAC,UAAD,EAAY,KAAK,CAAEd,MAAM,CAACa,SAA1B,CAAqC,qBAAqB,CAAE,CAACE,UAAU,CAAC,QAAZ,CAAsBC,QAAQ,CAAE,CAAhC,CAA5D,EACE,oBAAC,KAAD,EAAO,QAAQ,CAAEX,QAAjB,EADF,CADA,CADF,CAOD,CAhBD,CAkBA,cAAeH,CAAAA,OAAO,CACpB,SAAAe,KAAK,CAAI,CACPC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,MAAO,CACLZ,QAAQ,CAAEF,YAAY,CAACc,KAAD,CAAZ,EAAqB,IAD1B,CAAP,CAGD,CANmB,CAOpBG,SAPoB,CAAP,CAQbT,QARa,CAAf","sourcesContent":["import React from \"react\";\nimport { ImageBackground, ScrollView, View, Text } from \"react-native\";\nimport Header from \"../Header\";\nimport styles from './styles'\nimport BodyContent from \"../BodyContent\";\nimport { connect } from 'react-redux'\nimport { getAuthToken } from '../../reducers/index'\n\nconst MyApp = ({isLogged}) => (\n    <ImageBackground source={require('../../../public/img/background.jpg')} style={styles.image} imageStyle={{opacity:0.45}}>\n      {\n        (isLogged)?(\n          <View>\n            <Header></Header>\n            <Text style={styles.text}> YOU ARE LOGGED </Text>\n          </View>\n        ):(\n          <View style={styles.container2}>\n            <Header></Header>\n            <BodyContent></BodyContent>\n          </View>\n        )\n      }\n      \n    </ImageBackground>\n)\n\nconst AppState = ({isLogged}) => {\n  if (typeof document != 'undefined') {\n    // I'm on the web!\n    return (\n      <View style={styles.container} >\n        <MyApp isLogged={isLogged}></MyApp>\n      </View>\n    );\n  }\n  return (\n    <View style={{ flex: 1 }}>\n    <ScrollView style={styles.container} contentContainerStyle={{alignItems:\"center\", flexGrow: 1}}>\n      <MyApp isLogged={isLogged}></MyApp>\n    </ScrollView>\n    </View>\n  )\n}; \n\nexport default connect(\n  state => {\n    console.log(state)\n    return({\n      isLogged: getAuthToken(state)!=null\n    })\n  },\n  undefined\n)(AppState)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}import React from\"react\";import{css}from\"@emotion/core\";import ClipLoader from\"react-spinners/PulseLoader\";import View from\"react-native-web/dist/exports/View\";var override=process.env.NODE_ENV===\"production\"?{name:\"xb95h2\",styles:\"display:block;margin:0 auto;border-color:red;\"}:{name:\"xb95h2\",styles:\"display:block;margin:0 auto;border-color:red;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RoZWNvZGVyL0RvY3VtZW50b3MvVVZHL1NvZnR3YXJlL0luc2lkZU1hcHMvc3JjL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNb0IiLCJmaWxlIjoiL2hvbWUvdGhlY29kZXIvRG9jdW1lbnRvcy9VVkcvU29mdHdhcmUvSW5zaWRlTWFwcy9zcmMvY29tcG9uZW50cy9zcGlubmVyL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL2NvcmVcIjtcbmltcG9ydCBDbGlwTG9hZGVyIGZyb20gXCJyZWFjdC1zcGlubmVycy9QdWxzZUxvYWRlclwiO1xuaW1wb3J0IHsgVmlldyB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcbiBcbi8vIENhbiBiZSBhIHN0cmluZyBhcyB3ZWxsLiBOZWVkIHRvIGVuc3VyZSBlYWNoIGtleS12YWx1ZSBwYWlyIGVuZHMgd2l0aCA7XG5jb25zdCBvdmVycmlkZSA9IGNzc2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBib3JkZXItY29sb3I6IHJlZDtcbmA7XG5cbmNvbnN0IFNwaW5uZXIgPSAoKSA9PiAoXG4gIDxWaWV3IGNsYXNzTmFtZT1cInNrZXctbG9hZGVyXCI+XG4gICAgPENsaXBMb2FkZXJcbiAgICAgIGNzcz17b3ZlcnJpZGV9XG4gICAgICBzaXplPXsxMH1cbiAgICAgIGNvbG9yPXtcIiM1NDBBMDhcIn1cbiAgICAgIGxvYWRpbmc9e3RydWV9XG4gICAgLz5cbiAgPC9WaWV3PlxuKVxuXG5leHBvcnQgZGVmYXVsdCBTcGlubmVyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var Spinner=function Spinner(){return React.createElement(View,{className:\"skew-loader\"},React.createElement(ClipLoader,{css:override,size:10,color:\"#540A08\",loading:true}));};export default Spinner;","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/spinner/index.js"],"names":["React","css","ClipLoader","override","Spinner"],"mappings":"qRAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,C,qDAIA,GAAMC,CAAAA,QAAQ,k1CAAd,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,SACd,qBAAC,IAAD,EAAM,SAAS,CAAC,aAAhB,EACE,oBAAC,UAAD,EACE,GAAG,CAAED,QADP,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAE,SAHT,CAIE,OAAO,CAAE,IAJX,EADF,CADc,EAAhB,CAWA,cAAeC,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/PulseLoader\";\nimport { View } from \"react-native\";\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst Spinner = () => (\n  <View className=\"skew-loader\">\n    <ClipLoader\n      css={override}\n      size={10}\n      color={\"#540A08\"}\n      loading={true}\n    />\n  </View>\n)\n\nexport default Spinner\n"]},"metadata":{},"sourceType":"module"}
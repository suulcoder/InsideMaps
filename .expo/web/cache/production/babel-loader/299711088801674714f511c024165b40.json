{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";var _marked=_regeneratorRuntime.mark(login),_marked2=_regeneratorRuntime.mark(watchLoginStarted),_marked3=_regeneratorRuntime.mark(signin);import{call,takeEvery,put,delay,select}from'redux-saga/effects';import*as selectors from\"../reducers\";import*as actions from\"../actions/auth\";import*as types from\"../types/auth\";import axios from'axios';var API_BASE_URL='https://inside-maps-api.herokuapp.com/api/v1/auth';function login(action){var response,_yield$response$json,token,_yield$response$json2,message;return _regeneratorRuntime.wrap(function login$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log(\"esto le mandamos\",action.payload);_context.next=4;return call(fetch,API_BASE_URL+\"/signin/\",{method:'POST',body:JSON.stringify(action.payload),headers:{'Content-Type':'application/x-www-form-urlencoded'}});case 4:response=_context.sent;if(!(response.status===200)){_context.next=14;break;}_context.next=8;return response.json();case 8:_yield$response$json=_context.sent;token=_yield$response$json.token;_context.next=12;return put(actions.completeLogin(token));case 12:_context.next=20;break;case 14:_context.next=16;return response.json();case 16:_yield$response$json2=_context.sent;message=_yield$response$json2.message;_context.next=20;return put(actions.failLogin(message,0));case 20:_context.next=27;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](0);console.log(_context.t0);_context.next=27;return put(actions.failLogin('CONNECTION FAILED',0));case 27:case\"end\":return _context.stop();}}},_marked,null,[[0,22]]);}export function watchLoginStarted(){return _regeneratorRuntime.wrap(function watchLoginStarted$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(types.AUTHENTICATION_STARTED,login);case 2:case\"end\":return _context2.stop();}}},_marked2);}function signin(action){var response,_yield$response$json3,token,_yield$response$json4,message;return _regeneratorRuntime.wrap(function signin$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return call(axios,API_BASE_URL+\"/signup/\",{method:'POST',body:JSON.stringify(action.payload),headers:{'Content-Type':'application/x-www-form-urlencoded'}});case 3:response=_context3.sent;if(!(response.status===200)){_context3.next=13;break;}_context3.next=7;return response.json();case 7:_yield$response$json3=_context3.sent;token=_yield$response$json3.token;_context3.next=11;return put(actions.completeLogin(token));case 11:_context3.next=19;break;case 13:_context3.next=15;return response.json();case 15:_yield$response$json4=_context3.sent;message=_yield$response$json4.message;_context3.next=19;return put(actions.failLogin(message,1));case 19:_context3.next=25;break;case 21:_context3.prev=21;_context3.t0=_context3[\"catch\"](0);_context3.next=25;return put(actions.failLogin('CONNECTION FAILED',1));case 25:case\"end\":return _context3.stop();}}},_marked3,null,[[0,21]]);}","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/sagas/auth.js"],"names":["login","watchLoginStarted","signin","call","takeEvery","put","delay","select","selectors","actions","types","axios","API_BASE_URL","action","console","log","payload","fetch","method","body","JSON","stringify","headers","response","status","json","token","completeLogin","message","failLogin","AUTHENTICATION_STARTED"],"mappings":"iGAmBUA,K,oCA+BOC,iB,oCAQPC,M,EA1DV,OACEC,IADF,CAEEC,SAFF,CAGEC,GAHF,CAMEC,KANF,CAOEC,MAPF,KAQO,oBARP,CAUA,MAAO,GAAKC,CAAAA,SAAZ,mBACA,MAAO,GAAKC,CAAAA,OAAZ,uBACA,MAAO,GAAKC,CAAAA,KAAZ,qBACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA,GAAMC,CAAAA,YAAY,CAAG,mDAArB,CAGA,QAAUZ,CAAAA,KAAV,CAAgBa,MAAhB,sMAGIC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCF,MAAM,CAACG,OAAvC,EAHJ,gBAIqB,MAAMb,CAAAA,IAAI,CACzBc,KADyB,CAEtBL,YAFsB,YAGzB,CACEM,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACG,OAAtB,CAFR,CAGEM,OAAO,CAAE,CACP,eAAgB,mCADT,CAHX,CAHyB,CAAV,CAJrB,OAIUC,QAJV,oBAgBQA,QAAQ,CAACC,MAAT,GAAoB,GAhB5B,2CAiBwB,MAAMD,CAAAA,QAAQ,CAACE,IAAT,EAAN,CAjBxB,0CAiBcC,KAjBd,sBAiBcA,KAjBd,kBAkBM,MAAMrB,CAAAA,GAAG,CAACI,OAAO,CAACkB,aAAR,CAAsBD,KAAtB,CAAD,CAAT,CAlBN,wDAoB0B,MAAMH,CAAAA,QAAQ,CAACE,IAAT,EAAN,CApB1B,4CAoBcG,OApBd,uBAoBcA,OApBd,kBAqBM,MAAMvB,CAAAA,GAAG,CAACI,OAAO,CAACoB,SAAR,CAAkBD,OAAlB,CAA0B,CAA1B,CAAD,CAAT,CArBN,yFAyBId,OAAO,CAACC,GAAR,cAzBJ,iBA0BI,MAAMV,CAAAA,GAAG,CAACI,OAAO,CAACoB,SAAR,CAAkB,mBAAlB,CAAsC,CAAtC,CAAD,CAAT,CA1BJ,qEA+BA,MAAO,SAAU5B,CAAAA,iBAAV,iJACL,MAAMG,CAAAA,SAAS,CACbM,KAAK,CAACoB,sBADO,CAEb9B,KAFa,CAAf,CADK,wDAQP,QAAUE,CAAAA,MAAV,CAAiBW,MAAjB,6NAEqB,MAAMV,CAAAA,IAAI,CACzBQ,KADyB,CAEtBC,YAFsB,YAGzB,CACEM,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACG,OAAtB,CAFR,CAGEM,OAAO,CAAE,CACP,eAAgB,mCADT,CAHX,CAHyB,CAAV,CAFrB,OAEUC,QAFV,qBAcQA,QAAQ,CAACC,MAAT,GAAoB,GAd5B,6CAewB,MAAMD,CAAAA,QAAQ,CAACE,IAAT,EAAN,CAfxB,4CAecC,KAfd,uBAecA,KAfd,mBAgBM,MAAMrB,CAAAA,GAAG,CAACI,OAAO,CAACkB,aAAR,CAAsBD,KAAtB,CAAD,CAAT,CAhBN,0DAkB0B,MAAMH,CAAAA,QAAQ,CAACE,IAAT,EAAN,CAlB1B,6CAkBcG,OAlBd,uBAkBcA,OAlBd,mBAmBM,MAAMvB,CAAAA,GAAG,CAACI,OAAO,CAACoB,SAAR,CAAkBD,OAAlB,CAA0B,CAA1B,CAAD,CAAT,CAnBN,+GAuBI,MAAMvB,CAAAA,GAAG,CAACI,OAAO,CAACoB,SAAR,CAAkB,mBAAlB,CAAsC,CAAtC,CAAD,CAAT,CAvBJ","sourcesContent":["import {\n  call,\n  takeEvery,\n  put,\n  // race,\n  // all,\n  delay,\n  select,\n} from 'redux-saga/effects';\n\nimport * as selectors from '../reducers';\nimport * as actions from '../actions/auth';\nimport * as types from '../types/auth';\nimport axios from 'axios';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* login(action) {\n\n  try {\n    console.log(\"esto le mandamos\", action.payload)\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signin/`,\n      {\n        method: 'POST',\n        body: JSON.stringify(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,0));   //0 because is in login form\n    }\n\n  } catch (error) {\n    console.log(error)\n    yield put(actions.failLogin('CONNECTION FAILED',0));   //0 because is in login form\n  }\n}\n\n\nexport function* watchLoginStarted() {\n  yield takeEvery(\n    types.AUTHENTICATION_STARTED,\n    login,\n  );\n}\n\n\nfunction* signin(action) {\n  try {\n    const response = yield call(\n      axios,\n      `${API_BASE_URL}/signup/`,\n      {\n        method: 'POST',\n        body: JSON.stringify(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,1));                 //1 becuase is in sign up\n    }\n    \n  } catch (error) {\n    yield put(actions.failLogin('CONNECTION FAILED',1));      //1 because is in sign up\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import{combineReducers}from'redux';import*as types from\"../types/auth\";var token=function token(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.AUTHENTICATION_STARTED:{return null;}case types.REGISTRATION_STARTED:{return null;}case types.AUTHENTICATION_COMPLETED:{return action.payload.token;}case types.AUTHENTICATION_FAILED:{return null;}case types.LOGOUT:{return null;}}return state;};var login=function login(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.AUTHENTICATION_STARTED:{return true;}case types.REGISTRATION_STARTED:{return null;}case types.AUTHENTICATION_COMPLETED:{return null;}case types.AUTHENTICATION_FAILED:{if(action.payload.form===0){return false;}return null;}case types.LOGOUT:{return null;}}return state;};var signup=function signup(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.AUTHENTICATION_STARTED:{return null;}case types.REGISTRATION_STARTED:{return true;}case types.AUTHENTICATION_COMPLETED:{return null;}case types.AUTHENTICATION_FAILED:{if(action.payload.form===0){return null;}return false;}case types.LOGOUT:{return null;}}return state;};var error=function error(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.AUTHENTICATION_STARTED:{return null;}case types.REGISTRATION_STARTED:{return null;}case types.AUTHENTICATION_COMPLETED:{return null;}case types.AUTHENTICATION_FAILED:{return action.payload.error;}case types.LOGOUT:{return null;}}return state;};var isAuthenticating=combineReducers({login:login,signup:signup});var auth=combineReducers({token:token,isAuthenticating:isAuthenticating,error:error});export default auth;export var getAuthToken=function getAuthToken(state){return state.token;};export var getIsAuthenticating=function getIsAuthenticating(state){return state.isAuthenticating;};export var getIsAuthenticatingError=function getIsAuthenticatingError(state){return state.error;};export var getError=function getError(state){return state.error;};export var getIsLogging=function getIsLogging(state){return state.login;};export var getIsSigning=function getIsSigning(state){return state.signup;};","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/reducers/auth.js"],"names":["combineReducers","types","token","state","action","type","AUTHENTICATION_STARTED","REGISTRATION_STARTED","AUTHENTICATION_COMPLETED","payload","AUTHENTICATION_FAILED","LOGOUT","login","form","signup","error","isAuthenticating","auth","getAuthToken","getIsAuthenticating","getIsAuthenticatingError","getError","getIsLogging","getIsSigning"],"mappings":"AAAA,OAASA,eAAT,KAAgC,OAAhC,CAEA,MAAO,GAAKC,CAAAA,KAAZ,qBAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAA0B,IAAzBC,CAAAA,KAAyB,2DAAjB,IAAiB,IAAXC,CAAAA,MAAW,2CACtC,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKJ,CAAAA,KAAK,CAACK,sBAAX,CAAmC,CACjC,MAAO,KAAP,CACD,CACD,IAAKL,CAAAA,KAAK,CAACM,oBAAX,CAAiC,CAC/B,MAAO,KAAP,CACD,CACD,IAAKN,CAAAA,KAAK,CAACO,wBAAX,CAAqC,CACnC,MAAOJ,CAAAA,MAAM,CAACK,OAAP,CAAeP,KAAtB,CACD,CACD,IAAKD,CAAAA,KAAK,CAACS,qBAAX,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,IAAKT,CAAAA,KAAK,CAACU,MAAX,CAAmB,CACjB,MAAO,KAAP,CACD,CAhBH,CAkBA,MAAOR,CAAAA,KAAP,CACD,CApBD,CAsBA,GAAMS,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAA0B,IAAzBT,CAAAA,KAAyB,2DAAjB,IAAiB,IAAXC,CAAAA,MAAW,2CACtC,OAAOA,MAAM,CAACC,IAAd,EAEE,IAAKJ,CAAAA,KAAK,CAACK,sBAAX,CAAmC,CACjC,MAAO,KAAP,CACD,CACD,IAAKL,CAAAA,KAAK,CAACM,oBAAX,CAAgC,CAC9B,MAAO,KAAP,CACD,CACD,IAAKN,CAAAA,KAAK,CAACO,wBAAX,CAAqC,CACnC,MAAO,KAAP,CACD,CACD,IAAKP,CAAAA,KAAK,CAACS,qBAAX,CAAkC,CAChC,GAAGN,MAAM,CAACK,OAAP,CAAeI,IAAf,GAAsB,CAAzB,CAA2B,CACzB,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,CACD,IAAKZ,CAAAA,KAAK,CAACU,MAAX,CAAkB,CAChB,MAAO,KAAP,CACD,CAnBH,CAqBA,MAAOR,CAAAA,KAAP,CACD,CAvBD,CAyBA,GAAMW,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAwB,IAAvBX,CAAAA,KAAuB,2DAAjB,IAAiB,IAAXC,CAAAA,MAAW,2CACrC,OAAOA,MAAM,CAACC,IAAd,EAEE,IAAKJ,CAAAA,KAAK,CAACK,sBAAX,CAAmC,CACjC,MAAO,KAAP,CACD,CACD,IAAKL,CAAAA,KAAK,CAACM,oBAAX,CAAgC,CAC9B,MAAO,KAAP,CACD,CACD,IAAKN,CAAAA,KAAK,CAACO,wBAAX,CAAqC,CACnC,MAAO,KAAP,CACD,CACD,IAAKP,CAAAA,KAAK,CAACS,qBAAX,CAAkC,CAChC,GAAGN,MAAM,CAACK,OAAP,CAAeI,IAAf,GAAsB,CAAzB,CAA2B,CACzB,MAAO,KAAP,CACD,CACD,MAAO,MAAP,CACD,CACD,IAAKZ,CAAAA,KAAK,CAACU,MAAX,CAAkB,CAChB,MAAO,KAAP,CACD,CAnBH,CAqBA,MAAOR,CAAAA,KAAP,CAED,CAxBD,CA4BA,GAAMY,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAA0B,IAAzBZ,CAAAA,KAAyB,2DAAjB,IAAiB,IAAXC,CAAAA,MAAW,2CACtC,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKJ,CAAAA,KAAK,CAACK,sBAAX,CAAmC,CACjC,MAAO,KAAP,CACD,CACD,IAAKL,CAAAA,KAAK,CAACM,oBAAX,CAAiC,CAC/B,MAAO,KAAP,CACD,CACD,IAAKN,CAAAA,KAAK,CAACO,wBAAX,CAAqC,CACnC,MAAO,KAAP,CACD,CACD,IAAKP,CAAAA,KAAK,CAACS,qBAAX,CAAkC,CAChC,MAAON,CAAAA,MAAM,CAACK,OAAP,CAAeM,KAAtB,CACD,CACD,IAAKd,CAAAA,KAAK,CAACU,MAAX,CAAkB,CAChB,MAAO,KAAP,CACD,CAhBH,CAkBA,MAAOR,CAAAA,KAAP,CACD,CApBD,CAsBA,GAAMa,CAAAA,gBAAgB,CAAGhB,eAAe,CAAC,CACvCY,KAAK,CAALA,KADuC,CAEvCE,MAAM,CAANA,MAFuC,CAAD,CAAxC,CAKA,GAAMG,CAAAA,IAAI,CAAGjB,eAAe,CAAC,CAC3BE,KAAK,CAALA,KAD2B,CAE3Bc,gBAAgB,CAAhBA,gBAF2B,CAG3BD,KAAK,CAALA,KAH2B,CAAD,CAA5B,CAMA,cAAeE,CAAAA,IAAf,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAf,KAAK,QAAIA,CAAAA,KAAK,CAACD,KAAV,EAA1B,CACP,MAAO,IAAMiB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAhB,KAAK,QAAIA,CAAAA,KAAK,CAACa,gBAAV,EAAjC,CACP,MAAO,IAAMI,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAAjB,KAAK,QAAIA,CAAAA,KAAK,CAACY,KAAV,EAAtC,CACP,MAAO,IAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAlB,KAAK,QAAIA,CAAAA,KAAK,CAACY,KAAV,EAAtB,CACP,MAAO,IAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAnB,KAAK,QAAIA,CAAAA,KAAK,CAACS,KAAV,EAA1B,CACP,MAAO,IAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAApB,KAAK,QAAIA,CAAAA,KAAK,CAACW,MAAV,EAA1B","sourcesContent":["import { combineReducers } from 'redux';\n\nimport * as types from '../types/auth';\n\nconst token = (state = null, action) => {\n  switch (action.type) {\n\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return action.payload.token;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return null;\n    }\n    case types.LOGOUT: {\n      return null;\n    }\n  }\n  return state;\n};\n\nconst login = (state = null, action) => {\n  switch(action.type){\n    \n    case types.AUTHENTICATION_STARTED: {\n      return true;\n    }\n    case types.REGISTRATION_STARTED:{\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      if(action.payload.form===0){\n        return false;\n      }\n      return null;\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state\n}\n\nconst signup = (state=null, action) => {\n  switch(action.type){\n    \n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED:{\n      return true;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      if(action.payload.form===0){\n        return null;\n      }\n      return false;\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state;\n\n}\n\n\n\nconst error = (state = null, action) => {\n  switch (action.type) {\n\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return action.payload.error;\n    }\n    case types.LOGOUT:{\n      return null;\n    }\n  }\n  return state;\n};\n\nconst isAuthenticating = combineReducers({\n  login,\n  signup,\n});\n\nconst auth = combineReducers({\n  token,\n  isAuthenticating,\n  error\n});\n\nexport default auth;\n\nexport const getAuthToken = state => state.token;\nexport const getIsAuthenticating = state => state.isAuthenticating;\nexport const getIsAuthenticatingError = state => state.error;\nexport const getError = state => state.error;\nexport const getIsLogging = state => state.login;\nexport const getIsSigning = state => state.signup;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var byteToHex=[];for(var i=0;i<256;++i){byteToHex[i]=(i+0x100).toString(16).substr(1);}function bytesToUuid(buf,offset){var i=offset||0;var bth=byteToHex;return[bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]]].join('');}module.exports=bytesToUuid;","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/node_modules/expo/node_modules/uuid/lib/bytesToUuid.js"],"names":["byteToHex","i","toString","substr","bytesToUuid","buf","offset","bth","join","module","exports"],"mappings":"AAIA,GAAIA,CAAAA,SAAS,CAAG,EAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,GAApB,CAAyB,EAAEA,CAA3B,CAA8B,CAC5BD,SAAS,CAACC,CAAD,CAAT,CAAe,CAACA,CAAC,CAAG,KAAL,EAAYC,QAAZ,CAAqB,EAArB,EAAyBC,MAAzB,CAAgC,CAAhC,CAAf,CACD,CAED,QAASC,CAAAA,WAAT,CAAqBC,GAArB,CAA0BC,MAA1B,CAAkC,CAChC,GAAIL,CAAAA,CAAC,CAAGK,MAAM,EAAI,CAAlB,CACA,GAAIC,CAAAA,GAAG,CAAGP,SAAV,CAEA,MAAQ,CACNO,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CADG,CACSM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CADZ,CAENM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAFG,CAESM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAFZ,CAEwB,GAFxB,CAGNM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAHG,CAGSM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAHZ,CAGwB,GAHxB,CAINM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAJG,CAISM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAJZ,CAIwB,GAJxB,CAKNM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CALG,CAKSM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CALZ,CAKwB,GALxB,CAMNM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CANG,CAMSM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CANZ,CAONM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAPG,CAOSM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CAPZ,CAQNM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CARG,CAQSM,GAAG,CAACF,GAAG,CAACJ,CAAC,EAAF,CAAJ,CARZ,CAAD,CASJO,IATI,CASC,EATD,CAAP,CAUD,CAEDC,MAAM,CAACC,OAAP,CAAiBN,WAAjB","sourcesContent":["/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n"]},"metadata":{},"sourceType":"script"}
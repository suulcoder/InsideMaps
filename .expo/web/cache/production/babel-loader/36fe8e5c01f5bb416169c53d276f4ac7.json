{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{RCTDeviceEventEmitter,UnavailabilityError}from'@unimodules/core';import{EventEmitter}from'fbemitter';import ExponentUpdates from\"./ExponentUpdates\";export function reload(){return _reload.apply(this,arguments);}function _reload(){_reload=_asyncToGenerator(_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return ExponentUpdates.reload();case 2:case\"end\":return _context.stop();}}},_callee);}));return _reload.apply(this,arguments);}export function reloadFromCache(){return _reloadFromCache.apply(this,arguments);}function _reloadFromCache(){_reloadFromCache=_asyncToGenerator(_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return ExponentUpdates.reloadFromCache();case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _reloadFromCache.apply(this,arguments);}export function checkForUpdateAsync(){return _checkForUpdateAsync.apply(this,arguments);}function _checkForUpdateAsync(){_checkForUpdateAsync=_asyncToGenerator(_regeneratorRuntime.mark(function _callee3(){var result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(ExponentUpdates.checkForUpdateAsync){_context3.next=2;break;}throw new UnavailabilityError('Updates','checkForUpdateAsync');case 2:_context3.next=4;return ExponentUpdates.checkForUpdateAsync();case 4:result=_context3.sent;if(result){_context3.next=7;break;}return _context3.abrupt(\"return\",{isAvailable:false});case 7:return _context3.abrupt(\"return\",{isAvailable:true,manifest:typeof result==='string'?JSON.parse(result):result});case 8:case\"end\":return _context3.stop();}}},_callee3);}));return _checkForUpdateAsync.apply(this,arguments);}export function fetchUpdateAsync(){return _fetchUpdateAsync.apply(this,arguments);}function _fetchUpdateAsync(){_fetchUpdateAsync=_asyncToGenerator(_regeneratorRuntime.mark(function _callee4(){var _ref,eventListener,subscription,result,_args4=arguments;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_ref=_args4.length>0&&_args4[0]!==undefined?_args4[0]:{},eventListener=_ref.eventListener;if(ExponentUpdates.fetchUpdateAsync){_context4.next=3;break;}throw new UnavailabilityError('Updates','fetchUpdateAsync');case 3:if(eventListener&&typeof eventListener==='function'){subscription=addListener(eventListener);}_context4.prev=4;_context4.next=7;return ExponentUpdates.fetchUpdateAsync();case 7:result=_context4.sent;case 8:_context4.prev=8;subscription&&subscription.remove();return _context4.finish(8);case 11:if(result){_context4.next=13;break;}return _context4.abrupt(\"return\",{isNew:false});case 13:return _context4.abrupt(\"return\",{isNew:true,manifest:typeof result==='string'?JSON.parse(result):result});case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[4,,8,11]]);}));return _fetchUpdateAsync.apply(this,arguments);}export function clearUpdateCacheExperimentalAsync(_x){return _clearUpdateCacheExperimentalAsync.apply(this,arguments);}function _clearUpdateCacheExperimentalAsync(){_clearUpdateCacheExperimentalAsync=_asyncToGenerator(_regeneratorRuntime.mark(function _callee5(abiVersion){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(ExponentUpdates.clearUpdateCacheAsync){_context5.next=2;break;}throw new UnavailabilityError('Updates','clearUpdateCacheAsync');case 2:return _context5.abrupt(\"return\",ExponentUpdates.clearUpdateCacheAsync(abiVersion));case 3:case\"end\":return _context5.stop();}}},_callee5);}));return _clearUpdateCacheExperimentalAsync.apply(this,arguments);}var _emitter;function _getEmitter(){if(!_emitter){_emitter=new EventEmitter();RCTDeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent',_emitEvent);}return _emitter;}function _emitEvent(params){var newParams=params;if(typeof params==='string'){newParams=JSON.parse(params);}if(newParams.manifestString){newParams.manifest=JSON.parse(newParams.manifestString);delete newParams.manifestString;}if(!_emitter){throw new Error(\"EventEmitter must be initialized to use from its listener\");}_emitter.emit('Exponent.updatesEvent',newParams);}export function addListener(listener){var emitter=_getEmitter();return emitter.addListener('Exponent.updatesEvent',listener);}export var EventType={DOWNLOAD_STARTED:'downloadStart',DOWNLOAD_PROGRESS:'downloadProgress',DOWNLOAD_FINISHED:'downloadFinished',NO_UPDATE_AVAILABLE:'noUpdateAvailable',ERROR:'error'};","map":{"version":3,"sources":["../../src/Updates/Updates.ts"],"names":[],"mappings":"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","sourcesContent":["import { RCTDeviceEventEmitter, UnavailabilityError } from '@unimodules/core';\nimport Constants from 'expo-constants';\nimport { EventEmitter, EventSubscription } from 'fbemitter';\n\nimport ExponentUpdates from './ExponentUpdates';\n\ntype Manifest = typeof Constants.manifest;\n\ntype UpdateCheckResult = { isAvailable: false } | { isAvailable: true; manifest: Manifest };\n\ntype UpdateFetchResult = { isNew: false } | { isNew: true; manifest: Manifest };\n\ntype UpdateEvent =\n  | { type: 'downloadStart' | 'downloadProgress' | 'noUpdateAvailable' }\n  | { type: 'downloadFinished'; manifest: Manifest }\n  | { type: 'error'; message: string };\n\ntype UpdateEventListener = (event: UpdateEvent) => void;\n\nexport async function reload(): Promise<void> {\n  await ExponentUpdates.reload();\n}\n\nexport async function reloadFromCache(): Promise<void> {\n  await ExponentUpdates.reloadFromCache();\n}\n\nexport async function checkForUpdateAsync(): Promise<UpdateCheckResult> {\n  if (!ExponentUpdates.checkForUpdateAsync) {\n    throw new UnavailabilityError('Updates', 'checkForUpdateAsync');\n  }\n  const result = await ExponentUpdates.checkForUpdateAsync();\n  if (!result) {\n    return { isAvailable: false };\n  }\n\n  return {\n    isAvailable: true,\n    manifest: typeof result === 'string' ? JSON.parse(result) : result,\n  };\n}\n\nexport async function fetchUpdateAsync({\n  eventListener,\n}: { eventListener?: UpdateEventListener } = {}): Promise<UpdateFetchResult> {\n  if (!ExponentUpdates.fetchUpdateAsync) {\n    throw new UnavailabilityError('Updates', 'fetchUpdateAsync');\n  }\n  let subscription;\n  let result;\n  if (eventListener && typeof eventListener === 'function') {\n    subscription = addListener(eventListener);\n  }\n  try {\n    result = await ExponentUpdates.fetchUpdateAsync();\n  } finally {\n    subscription && subscription.remove();\n  }\n\n  if (!result) {\n    return { isNew: false };\n  }\n\n  return {\n    isNew: true,\n    manifest: typeof result === 'string' ? JSON.parse(result) : result,\n  };\n}\n\nexport async function clearUpdateCacheExperimentalAsync(abiVersion: string): Promise<void> {\n  if (!ExponentUpdates.clearUpdateCacheAsync) {\n    throw new UnavailabilityError('Updates', 'clearUpdateCacheAsync');\n  }\n  return ExponentUpdates.clearUpdateCacheAsync(abiVersion);\n}\n\nlet _emitter: EventEmitter | null;\n\nfunction _getEmitter(): EventEmitter {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    RCTDeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent', _emitEvent);\n  }\n  return _emitter;\n}\n\nfunction _emitEvent(params): void {\n  let newParams = params;\n  if (typeof params === 'string') {\n    newParams = JSON.parse(params);\n  }\n  if (newParams.manifestString) {\n    newParams.manifest = JSON.parse(newParams.manifestString);\n    delete newParams.manifestString;\n  }\n\n  if (!_emitter) {\n    throw new Error(`EventEmitter must be initialized to use from its listener`);\n  }\n  _emitter.emit('Exponent.updatesEvent', newParams);\n}\n\nexport function addListener(listener: Function): EventSubscription {\n  let emitter = _getEmitter();\n  return emitter.addListener('Exponent.updatesEvent', listener);\n}\n\nexport const EventType = {\n  DOWNLOAD_STARTED: 'downloadStart',\n  DOWNLOAD_PROGRESS: 'downloadProgress',\n  DOWNLOAD_FINISHED: 'downloadFinished',\n  NO_UPDATE_AVAILABLE: 'noUpdateAvailable',\n  ERROR: 'error',\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
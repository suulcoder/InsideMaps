{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}import React from\"react\";import{css}from\"@emotion/core\";import ClipLoader from\"react-spinners/PulseLoader\";var override=process.env.NODE_ENV===\"production\"?{name:\"xb95h2\",styles:\"display:block;margin:0 auto;border-color:red;\"}:{name:\"xb95h2\",styles:\"display:block;margin:0 auto;border-color:red;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RoZWNvZGVyL0RvY3VtZW50b3MvVVZHL1NvZnR3YXJlL0luc2lkZU1hcHMvc3JjL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLb0IiLCJmaWxlIjoiL2hvbWUvdGhlY29kZXIvRG9jdW1lbnRvcy9VVkcvU29mdHdhcmUvSW5zaWRlTWFwcy9zcmMvY29tcG9uZW50cy9zcGlubmVyL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL2NvcmVcIjtcbmltcG9ydCBDbGlwTG9hZGVyIGZyb20gXCJyZWFjdC1zcGlubmVycy9QdWxzZUxvYWRlclwiO1xuIFxuLy8gQ2FuIGJlIGEgc3RyaW5nIGFzIHdlbGwuIE5lZWQgdG8gZW5zdXJlIGVhY2gga2V5LXZhbHVlIHBhaXIgZW5kcyB3aXRoIDtcbmNvbnN0IG92ZXJyaWRlID0gY3NzYFxuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJvcmRlci1jb2xvcjogcmVkO1xuYDtcbiBcbmNsYXNzIFNwaW5uZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbG9hZGluZzogdHJ1ZVxuICAgIH07XG4gIH1cbiBcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInNrZXctbG9hZGVyXCI+XG4gICAgICAgIDxDbGlwTG9hZGVyXG4gICAgICAgICAgY3NzPXtvdmVycmlkZX1cbiAgICAgICAgICBzaXplPXsxMH1cbiAgICAgICAgICBjb2xvcj17XCIjNTQwQTA4XCJ9XG4gICAgICAgICAgbG9hZGluZz17dGhpcy5zdGF0ZS5sb2FkaW5nfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTcGlubmVyO1xuXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var Spinner=function(_React$Component){_inherits(Spinner,_React$Component);var _super=_createSuper(Spinner);function Spinner(props){var _this;_classCallCheck(this,Spinner);_this=_super.call(this,props);_this.state={loading:true};return _this;}_createClass(Spinner,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"skew-loader\"},React.createElement(ClipLoader,{css:override,size:10,color:\"#540A08\",loading:this.state.loading}));}}]);return Spinner;}(React.Component);export default Spinner;","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/spinner/index.js"],"names":["React","css","ClipLoader","override","Spinner","props","state","loading","Component"],"mappings":"wsCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CAGA,GAAMC,CAAAA,QAAQ,8iDAAd,C,GAMMC,CAAAA,O,iGACJ,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,OAAO,CAAE,IADE,CAAb,CAFiB,aAKlB,C,2DAEQ,CACP,MACE,4BAAK,SAAS,CAAC,aAAf,EACE,oBAAC,UAAD,EACE,GAAG,CAAEJ,QADP,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAE,SAHT,CAIE,OAAO,CAAE,KAAKG,KAAL,CAAWC,OAJtB,EADF,CADF,CAUD,C,qBAnBmBP,KAAK,CAACQ,S,EAsB5B,cAAeJ,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/PulseLoader\";\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n \nclass Spinner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n \n  render() {\n    return (\n      <div className=\"skew-loader\">\n        <ClipLoader\n          css={override}\n          size={10}\n          color={\"#540A08\"}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Spinner;\n\n"]},"metadata":{},"sourceType":"module"}
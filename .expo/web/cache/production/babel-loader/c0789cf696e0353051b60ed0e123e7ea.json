{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";var _marked=_regeneratorRuntime.mark(createMap),_marked2=_regeneratorRuntime.mark(watchCreateMap);import{call,takeEvery,put,select}from'redux-saga/effects';import*as actions from\"../actions/map\";import*as types from\"../types/map\";import*as selectors from\"../reducers\";var API_BASE_URL='https://inside-maps-api.herokuapp.com/api/v1/map';function createMap(action){var map,oldId,token,response,_yield$response$json,result,_map;return _regeneratorRuntime.wrap(function createMap$(_context){while(1){switch(_context.prev=_context.next){case 0:map=action.payload;oldId=map._id;console.log(\"llega el old id\",oldId);_context.prev=3;if(!true){_context.next=26;break;}_context.next=7;return select(selectors.getAuthToken);case 7:token=_context.sent;_context.next=10;return call(fetch,API_BASE_URL,{method:'POST',body:action.payload,headers:{'Content-Type':'application/json','Access-Control-Allow-Origin':'origin-list'}});case 10:response=_context.sent;if(!(response.status>=200&&response.status<=300)){_context.next=22;break;}_context.next=14;return response.json();case 14:_yield$response$json=_context.sent;result=_yield$response$json.result;_map=result;_context.next=19;return put(actions.completeCreatingMap(oldId,_map));case 19:console.log(\"Se creo un nuevo mapa exitosamente!\",_map);_context.next=24;break;case 22:console.log(\"Error en la respuesta!\");console.log(\"llega el estatus\",response);case 24:_context.next=27;break;case 26:console.log('Error de autenticaciÃ³n');case 27:_context.next=34;break;case 29:_context.prev=29;_context.t0=_context[\"catch\"](3);console.log(_context.t0);_context.next=34;return put(actions.failCreatingMap(oldId,_context.t0));case 34:case\"end\":return _context.stop();}}},_marked,null,[[3,29]]);}export function watchCreateMap(){return _regeneratorRuntime.wrap(function watchCreateMap$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(types.CREATE_MAP_STARTED,createMap);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/sagas/map.js"],"names":["createMap","watchCreateMap","call","takeEvery","put","select","actions","types","selectors","API_BASE_URL","action","map","payload","oldId","_id","console","log","getAuthToken","token","fetch","method","body","headers","response","status","json","result","completeCreatingMap","failCreatingMap","CREATE_MAP_STARTED"],"mappings":"iGAcUA,S,oCA8COC,c,EA5DjB,OACEC,IADF,CAEEC,SAFF,CAGEC,GAHF,CAIEC,MAJF,KAKO,oBALP,CAOA,MAAO,GAAKC,CAAAA,OAAZ,sBACA,MAAO,GAAKC,CAAAA,KAAZ,oBACA,MAAO,GAAKC,CAAAA,SAAZ,mBAEA,GAAMC,CAAAA,YAAY,CAAG,kDAArB,CAGA,QAAUT,CAAAA,SAAV,CAAoBU,MAApB,kLACQC,GADR,CACeD,MAAM,CAACE,OADtB,CAEQC,KAFR,CAEgBF,GAAG,CAACG,GAFpB,CAGEC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BH,KAA/B,EAHF,oBAOO,IAPP,0CASoB,MAAMR,CAAAA,MAAM,CAACG,SAAS,CAACS,YAAX,CAAZ,CATpB,OASYC,KATZ,gCAWuB,MAAMhB,CAAAA,IAAI,CACzBiB,KADyB,CAEzBV,YAFyB,CAGzB,CACEW,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEX,MAAM,CAACE,OAFf,CAGEU,OAAO,CAAE,CACP,eAAgB,kBADT,CAGP,8BAA+B,aAHxB,CAHX,CAHyB,CAAV,CAXvB,QAWYC,QAXZ,oBAyBSA,QAAQ,CAACC,MAAT,EAAmB,GAAnB,EAA0BD,QAAQ,CAACC,MAAT,EAAmB,GAzBtD,4CA0B2B,MAAMD,CAAAA,QAAQ,CAACE,IAAT,EAAN,CA1B3B,2CA0BgBC,MA1BhB,sBA0BgBA,MA1BhB,CA2Bcf,IA3Bd,CA2BoBe,MA3BpB,kBA4BQ,MAAMtB,CAAAA,GAAG,CAACE,OAAO,CAACqB,mBAAR,CAA4Bd,KAA5B,CAAmCF,IAAnC,CAAD,CAAT,CA5BR,QA6BQI,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAmDL,IAAnD,EA7BR,+BA+BQI,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACAD,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCO,QAAhC,EAhCR,uCAoCMR,OAAO,CAACC,GAAR,CAAY,wBAAZ,EApCN,yFAyCID,OAAO,CAACC,GAAR,cAzCJ,iBA0CI,MAAMZ,CAAAA,GAAG,CAACE,OAAO,CAACsB,eAAR,CAAwBf,KAAxB,aAAD,CAAT,CA1CJ,qEA8CA,MAAO,SAAUZ,CAAAA,cAAV,8IACL,MAAME,CAAAA,SAAS,CACbI,KAAK,CAACsB,kBADO,CAEb7B,SAFa,CAAf,CADK","sourcesContent":["import {\n  call,\n  takeEvery,\n  put,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/map';\nimport * as types from '../types/map';\nimport * as selectors from '../reducers';\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/map';\n\n\nfunction* createMap(action) {\n  const map  = action.payload;\n  const oldId = map._id;\n  console.log(\"llega el old id\", oldId)\n  try {\n    //const isAuth = yield select(selectors.isAuthenticated)\n\n    if(true){\n\n      const token = yield select(selectors.getAuthToken);\n\n      const response = yield call(\n        fetch,\n        API_BASE_URL,\n        {\n          method: 'POST',\n          body: action.payload,\n          headers: {\n            'Content-Type': 'application/json',\n            //'Authorization': `JWT ${token}`,\n            'Access-Control-Allow-Origin': 'origin-list',\n          },\n        }\n      );\n\n      if(response.status >= 200 && response.status <= 300){\n        const { result } = yield response.json();\n        const map = result;\n        yield put(actions.completeCreatingMap(oldId, map));\n        console.log(\"Se creo un nuevo mapa exitosamente!\", map); \n      } else {\n        console.log(\"Error en la respuesta!\");\n        console.log(\"llega el estatus\", response)\n      }\n\n    } else {\n      console.log('Error de autenticaciÃ³n');\n\n    }\n\n  } catch(error) {\n    console.log(error);\n    yield put(actions.failCreatingMap(oldId, error));\n  }\n}\n\nexport function* watchCreateMap() {\n  yield takeEvery(\n    types.CREATE_MAP_STARTED,\n    createMap,\n  );\n}"]},"metadata":{},"sourceType":"module"}
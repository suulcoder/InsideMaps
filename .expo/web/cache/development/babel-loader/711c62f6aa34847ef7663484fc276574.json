{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/components/spinner/index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nvar override = process.env.NODE_ENV === \"production\" ? {\n  name: \"1emvaom-override\",\n  styles: \"display:block;margin:0 auto;border-color:red;;label:override;\"\n} : {\n  name: \"1emvaom-override\",\n  styles: \"display:block;margin:0 auto;border-color:red;;label:override;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JvYmVydG8vRGVza3RvcC9VVkcgMjAyMC9JTkdFTklFUklBL0luc2lkZU1hcHMvc3JjL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLb0IiLCJmaWxlIjoiL2hvbWUvcm9iZXJ0by9EZXNrdG9wL1VWRyAyMDIwL0lOR0VOSUVSSUEvSW5zaWRlTWFwcy9zcmMvY29tcG9uZW50cy9zcGlubmVyL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL2NvcmVcIjtcbmltcG9ydCBDbGlwTG9hZGVyIGZyb20gXCJyZWFjdC1zcGlubmVycy9DbGlwTG9hZGVyXCI7XG4gXG4vLyBDYW4gYmUgYSBzdHJpbmcgYXMgd2VsbC4gTmVlZCB0byBlbnN1cmUgZWFjaCBrZXktdmFsdWUgcGFpciBlbmRzIHdpdGggO1xuY29uc3Qgb3ZlcnJpZGUgPSBjc3NgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbiAgYm9yZGVyLWNvbG9yOiByZWQ7XG5gO1xuIFxuY2xhc3MgU3Bpbm5lciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBsb2FkaW5nOiB0cnVlXG4gICAgfTtcbiAgfVxuIFxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2tldy1sb2FkZXJcIj5cbiAgICAgICAgPENsaXBMb2FkZXJcbiAgICAgICAgICBjc3M9e292ZXJyaWRlfVxuICAgICAgICAgIHNpemU9ezE1MH1cbiAgICAgICAgICBjb2xvcj17XCIjMTIzYWJjXCJ9XG4gICAgICAgICAgbG9hZGluZz17dGhpcy5zdGF0ZS5sb2FkaW5nfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTcGlubmVyOyJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar Spinner = function (_React$Component) {\n  _inherits(Spinner, _React$Component);\n\n  var _super = _createSuper(Spinner);\n\n  function Spinner(props) {\n    var _this;\n\n    _classCallCheck(this, Spinner);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Spinner, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"skew-loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, React.createElement(ClipLoader, {\n        css: override,\n        size: 150,\n        color: \"#123abc\",\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Spinner;\n}(React.Component);\n\nexport default Spinner;","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/components/spinner/index.js"],"names":["React","css","ClipLoader","override","Spinner","props","state","loading","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAGA,IAAMC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;IAMMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAEJ,QADP;AAEE,QAAA,IAAI,EAAE,GAFR;AAGE,QAAA,KAAK,EAAE,SAHT;AAIE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWC,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;;;EAnBmBP,KAAK,CAACQ,S;;AAsB5B,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n \nclass Spinner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n \n  render() {\n    return (\n      <div className=\"skew-loader\">\n        <ClipLoader\n          css={override}\n          size={150}\n          color={\"#123abc\"}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Spinner;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/components/AppState/index.js\";\nimport React from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Header from \"../Header\";\nimport styles from \"./styles\";\nimport BodyContent from \"../BodyContent\";\nimport { connect } from 'react-redux';\nimport { getAuthToken } from \"../../reducers/index\";\n\nvar MyApp = function MyApp(_ref) {\n  var isLogged = _ref.isLogged;\n  return React.createElement(View, {\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../../../public/img/background.jpg\"),\n    style: styles.image,\n    imageStyle: {\n      opacity: 0.45\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, isLogged ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \" YOU ARE LOGGED \")) : React.createElement(View, {\n    style: styles.container2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), React.createElement(BodyContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }))));\n};\n\nvar AppState = function AppState(_ref2) {\n  var isLogged = _ref2.isLogged;\n\n  if (typeof document != 'undefined') {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(MyApp, {\n      isLogged: isLogged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(MyApp, {\n    isLogged: isLogged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connect(function (state) {\n  console.log(state);\n  return {\n    isLogged: getAuthToken(state) != null\n  };\n}, undefined)(AppState);","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/components/AppState/index.js"],"names":["React","Header","styles","BodyContent","connect","getAuthToken","MyApp","isLogged","body","require","image","opacity","text","container2","AppState","document","container","alignItems","state","console","log","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,SACZ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEC,OAAO,sCAAhC;AAAwE,IAAA,KAAK,EAAEP,MAAM,CAACQ,KAAtF;AAA6F,IAAA,UAAU,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKJ,QAAD,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF,GAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARN,CADF,CADY;AAAA,CAAd;;AAqBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,QAAgB;AAAA,MAAdP,QAAc,SAAdA,QAAc;;AAC/B,MAAI,OAAOQ,QAAP,IAAmB,WAAvB,EAAoC;AAElC,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAET,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AACD,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEL,MAAM,CAACc,SAA1B;AAAqC,IAAA,qBAAqB,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEV,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAdD;;AAgBA,eAAeH,OAAO,CACpB,UAAAc,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLX,IAAAA,QAAQ,EAAEF,YAAY,CAACa,KAAD,CAAZ,IAAqB;AAD1B,GAAP;AAGD,CANmB,EAOpBG,SAPoB,CAAP,CAQbP,QARa,CAAf","sourcesContent":["import React from \"react\";\nimport { ImageBackground, ScrollView, View, Text } from \"react-native\";\nimport Header from \"../Header\";\nimport styles from './styles'\nimport BodyContent from \"../BodyContent\";\nimport { connect } from 'react-redux'\nimport { getAuthToken } from '../../reducers/index'\n\nconst MyApp = ({isLogged}) => (\n  <View style={styles.body}>\n    <ImageBackground source={require('../../../public/img/background.jpg')} style={styles.image} imageStyle={{opacity:0.45}}>\n      {\n        (isLogged)?(\n          <View>\n            <Header></Header>\n            <Text style={styles.text}> YOU ARE LOGGED </Text>\n          </View>\n        ):(\n          <View style={styles.container2}>\n            <Header></Header>\n            <BodyContent></BodyContent>\n          </View>\n        )\n      }\n      \n    </ImageBackground>\n  </View>\n)\n\nconst AppState = ({isLogged}) => {\n  if (typeof document != 'undefined') {\n    // I'm on the web!\n    return (\n      <View style={styles.container} >\n        <MyApp isLogged={isLogged}></MyApp>\n      </View>\n    );\n  }\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={{alignItems:\"center\"}}>\n      <MyApp isLogged={isLogged}></MyApp>\n    </ScrollView>\n  )\n}; \n\nexport default connect(\n  state => {\n    console.log(state)\n    return({\n      isLogged: getAuthToken(state)!=null\n    })\n  },\n  undefined\n)(AppState)"]},"metadata":{},"sourceType":"module"}
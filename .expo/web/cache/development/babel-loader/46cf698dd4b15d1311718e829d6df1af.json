{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(createMap),\n    _marked2 = _regeneratorRuntime.mark(watchCreateMap);\n\nimport { call, takeEvery, put, select } from 'redux-saga/effects';\nimport * as actions from \"../actions/map\";\nimport * as types from \"../types/map\";\nimport * as selectors from \"../reducers\";\nimport { bodyParser } from \"../modules/parser\";\nvar API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/map/';\n\nfunction createMap(action) {\n  var map, oldId, token, response, _yield$response$json, result, _map;\n\n  return _regeneratorRuntime.wrap(function createMap$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          map = action.payload;\n          oldId = map._id;\n          console.log(\"llega el old id\", oldId);\n          _context.prev = 3;\n\n          if (!true) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context.sent;\n          _context.next = 10;\n          return call(fetch, API_BASE_URL, {\n            method: 'POST',\n            body: JSON.stringify(action.payload),\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \".concat(token)\n            }\n          });\n\n        case 10:\n          response = _context.sent;\n\n          if (!(response.status >= 200 && response.status <= 300)) {\n            _context.next = 22;\n            break;\n          }\n\n          _context.next = 14;\n          return response.json();\n\n        case 14:\n          _yield$response$json = _context.sent;\n          result = _yield$response$json.result;\n          _map = result;\n          _context.next = 19;\n          return put(actions.completeCreatingMap(oldId, _map));\n\n        case 19:\n          console.log(\"Se creo un nuevo mapa exitosamente!\", _map);\n          _context.next = 24;\n          break;\n\n        case 22:\n          console.log(\"Error en la respuesta!\");\n          console.log(\"llega el estatus\", response);\n\n        case 24:\n          _context.next = 27;\n          break;\n\n        case 26:\n          console.log('Error de autenticaciÃ³n');\n\n        case 27:\n          _context.next = 34;\n          break;\n\n        case 29:\n          _context.prev = 29;\n          _context.t0 = _context[\"catch\"](3);\n          console.log(_context.t0);\n          _context.next = 34;\n          return put(actions.failCreatingMap(oldId, _context.t0));\n\n        case 34:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[3, 29]]);\n}\n\nexport function watchCreateMap() {\n  return _regeneratorRuntime.wrap(function watchCreateMap$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.CREATE_MAP_STARTED, createMap);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/sagas/map.js"],"names":["createMap","watchCreateMap","call","takeEvery","put","select","actions","types","selectors","bodyParser","API_BASE_URL","action","map","payload","oldId","_id","console","log","getAuthToken","token","fetch","method","body","JSON","stringify","headers","Accept","response","status","json","result","completeCreatingMap","failCreatingMap","CREATE_MAP_STARTED"],"mappings":";;uCAgBUA,S;wCA+COC,c;;AA/DjB,SACEC,IADF,EAEEC,SAFF,EAGEC,GAHF,EAIEC,MAJF,QAKO,oBALP;AAOA,OAAO,KAAKC,OAAZ;AACA,OAAO,KAAKC,KAAZ;AACA,OAAO,KAAKC,SAAZ;AACA,SAASC,UAAT;AAGA,IAAMC,YAAY,GAAG,mDAArB;;AAGA,SAAUV,SAAV,CAAoBW,MAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQC,UAAAA,GADR,GACeD,MAAM,CAACE,OADtB;AAEQC,UAAAA,KAFR,GAEgBF,GAAG,CAACG,GAFpB;AAGEC,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,KAA/B;AAHF;;AAAA,eAOO,IAPP;AAAA;AAAA;AAAA;;AAAA;AASoB,iBAAMT,MAAM,CAACG,SAAS,CAACU,YAAX,CAAZ;;AATpB;AASYC,UAAAA,KATZ;AAAA;AAWuB,iBAAMjB,IAAI,CACzBkB,KADyB,EAEzBV,YAFyB,EAGzB;AACEW,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,MAAM,CAACE,OAAtB,CAFR;AAGEY,YAAAA,OAAO,EAAE;AAEPC,cAAAA,MAAM,EAAE,kBAFD;AAGP,8BAAgB,kBAHT;AAIP,6CAAwBP,KAAxB;AAJO;AAHX,WAHyB,CAAV;;AAXvB;AAWYQ,UAAAA,QAXZ;;AAAA,gBA0BSA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,IAAmB,GA1BtD;AAAA;AAAA;AAAA;;AAAA;AA2B2B,iBAAMD,QAAQ,CAACE,IAAT,EAAN;;AA3B3B;AAAA;AA2BgBC,UAAAA,MA3BhB,wBA2BgBA,MA3BhB;AA4BclB,UAAAA,IA5Bd,GA4BoBkB,MA5BpB;AAAA;AA6BQ,iBAAM1B,GAAG,CAACE,OAAO,CAACyB,mBAAR,CAA4BjB,KAA5B,EAAmCF,IAAnC,CAAD,CAAT;;AA7BR;AA8BQI,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDL,IAAnD;AA9BR;AAAA;;AAAA;AAgCQI,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCU,QAAhC;;AAjCR;AAAA;AAAA;;AAAA;AAqCMX,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AArCN;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0CID,UAAAA,OAAO,CAACC,GAAR;AA1CJ;AA2CI,iBAAMb,GAAG,CAACE,OAAO,CAAC0B,eAAR,CAAwBlB,KAAxB,cAAD,CAAT;;AA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA+CA,OAAO,SAAUb,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CACbI,KAAK,CAAC0B,kBADO,EAEbjC,SAFa,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\n  call,\n  takeEvery,\n  put,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/map';\nimport * as types from '../types/map';\nimport * as selectors from '../reducers';\nimport { bodyParser } from '../modules/parser';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/map/';\n\n\nfunction* createMap(action) {\n  const map  = action.payload;\n  const oldId = map._id;\n  console.log(\"llega el old id\", oldId)\n  try {\n    //const isAuth = yield select(selectors.isAuthenticated)\n\n    if(true){\n\n      const token = yield select(selectors.getAuthToken);\n\n      const response = yield call(\n        fetch,\n        API_BASE_URL,\n        {\n          method: 'POST',\n          body: JSON.stringify(action.payload),\n          headers: {\n            //'Content-Type': 'application/x-www-form-urlencoded',\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${token}`,\n          },\n        }\n      );\n\n      if(response.status >= 200 && response.status <= 300){\n        const { result } = yield response.json();\n        const map = result;\n        yield put(actions.completeCreatingMap(oldId, map));\n        console.log(\"Se creo un nuevo mapa exitosamente!\", map); \n      } else {\n        console.log(\"Error en la respuesta!\");\n        console.log(\"llega el estatus\", response)\n      }\n\n    } else {\n      console.log('Error de autenticaciÃ³n');\n\n    }\n\n  } catch(error) {\n    console.log(error);\n    yield put(actions.failCreatingMap(oldId, error));\n  }\n}\n\nexport function* watchCreateMap() {\n  yield takeEvery(\n    types.CREATE_MAP_STARTED,\n    createMap,\n  );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport omit from 'lodash/omit';\nimport * as types from \"../types/map\";\n\nvar byId = function byId() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.types) {\n    case types.CREATE_MAP_STARTED:\n      {\n        console.log(\"SI entro mucha!!!!!!!!\");\n\n        var newState = _objectSpread({}, state);\n\n        newState[action.payload._id] = _objectSpread({}, action.payload, {\n          isConfirmed: false\n        });\n        return newState;\n      }\n\n    case types.CREATE_MAP_COMPLETED:\n      {\n        var _action$payload = action.payload,\n            oldId = _action$payload.oldId,\n            map = _action$payload.map;\n\n        var _newState = omit(state, oldId);\n\n        _newState[map._id] = _objectSpread({}, map, {\n          isConfirmed: true\n        });\n        return _newState;\n      }\n  }\n\n  return state;\n};\n\nvar order = function order() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.types) {\n    case types.CREATE_MAP_STARTED:\n      {\n        return [].concat(_toConsumableArray(state), [action.payload._id]);\n      }\n\n    case types.CREATE_MAP_COMPLETED:\n      {\n        var _action$payload2 = action.payload,\n            oldId = _action$payload2.oldId,\n            map = _action$payload2.map;\n        return state.map(function (id) {\n          return id === oldId ? map._id : id;\n        });\n      }\n  }\n\n  return state;\n};\n\nvar isFetching = function isFetching() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n};\n\nvar error = function error() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.CREATE_MAP_FAILED:\n      {\n        return action.payload.error;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default combineReducers({\n  byId: byId,\n  order: order,\n  isFetching: isFetching,\n  error: error\n});\nexport var getMap = function getMap(state, id) {\n  return state.byId[id];\n};\nexport var getMaps = function getMaps(state) {\n  return state.order.map(function (id) {\n    return getMap(state, id);\n  });\n};\nexport var getCreateError = function getCreateError(state) {\n  return state.error;\n};","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/reducers/map.js"],"names":["combineReducers","omit","types","byId","state","action","CREATE_MAP_STARTED","console","log","newState","payload","_id","isConfirmed","CREATE_MAP_COMPLETED","oldId","map","order","id","isFetching","error","type","CREATE_MAP_FAILED","getMap","getMaps","getCreateError"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport omit from 'lodash/omit';\n\nimport * as types from '../types/map';\n\n\nconst byId = (state = {}, action) => {\n  switch(action.types){\n    case types.CREATE_MAP_STARTED: {\n      console.log(\"SI entro mucha!!!!!!!!\")\n      const newState = {...state};\n      newState[action.payload._id] = {\n        ...action.payload,\n        isConfirmed: false,\n      }\n      return newState;\n    }\n    case types.CREATE_MAP_COMPLETED: {\n      const { oldId, map } = action.payload;\n      const newState = omit(state, oldId);\n      newState[map._id] = {\n        ...map, \n        isConfirmed: true,\n      }\n      return newState;\n    }\n\n  }\n  return state;\n};\n\nconst order = (state=[], action) => {\n  switch(action.types){\n    case types.CREATE_MAP_STARTED: {\n      return [...state, action.payload._id];\n    }\n    case types.CREATE_MAP_COMPLETED: {\n      const { oldId, map } = action.payload;\n      return state.map(id => id === oldId ? map._id : id);\n    }\n  }\n  return state;\n};\n\nconst isFetching = (state=false, action) => {\n  return state;\n  }\n\n\nconst error = (state=[], action) => {\n  switch(action.type){\n    case types.CREATE_MAP_FAILED: {\n      return action.payload.error;\n    }\n    default:{\n      return state;\n    }\n  }\n\n};\n\nexport default combineReducers({\n  byId,\n  order,\n  isFetching,\n  error,\n});\n\n\nexport const getMap = (state, id) => state.byId[id];\nexport const getMaps = state => state.order.map(id => getMap(state, id));\nexport const getCreateError = state => state.error;\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/spinner/index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AnimatedLoader from \"react-native-animated-loader\";\n\nvar Loader = function (_React$Component) {\n  _inherits(Loader, _React$Component);\n\n  var _super = _createSuper(Loader);\n\n  function Loader(props) {\n    var _this;\n\n    _classCallCheck(this, Loader);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(Loader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.setState({\n          visible: !_this2.state.visible\n        });\n      }, 30000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var visible = this.state.visible;\n      return React.createElement(AnimatedLoader, {\n        visible: visible,\n        overlayColor: \"rgba(255,255,255,0.75)\",\n        source: require(\"./loader.json\"),\n        animationStyle: styles.lottie,\n        speed: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Loader;\n}(React.Component);\n\nexport { Loader as default };\nvar styles = StyleSheet.create({\n  lottie: {\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/spinner/index.js"],"names":["React","AnimatedLoader","Loader","props","state","visible","setInterval","setState","require","styles","lottie","Component","StyleSheet","create","width","height"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;;IAEqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAFiB;AAGlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,WAAW,CAAC,YAAM;AAChB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZF,UAAAA,OAAO,EAAE,CAAC,MAAI,CAACD,KAAL,CAAWC;AADT,SAAd;AAGD,OAJU,EAIR,KAJQ,CAAX;AAKD;;;6BAEQ;AAAA,UACCA,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,aACE,oBAAC,cAAD;AACE,QAAA,OAAO,EAAEA,OADX;AAEE,QAAA,YAAY,EAAC,wBAFf;AAGE,QAAA,MAAM,EAAEG,OAAO,iBAHjB;AAIE,QAAA,cAAc,EAAEC,MAAM,CAACC,MAJzB;AAKE,QAAA,KAAK,EAAE,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EAzBiCV,KAAK,CAACW,S;;SAArBT,M;AA4BrB,IAAMO,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,MAAM,EAAE;AAFF;AADuB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport {StyleSheet } from \"react-native\"; \nimport AnimatedLoader from \"react-native-animated-loader\";\n\nexport default class Loader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { visible: false };\n  }\n \n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    }, 30000);\n  }\n \n  render() {\n    const { visible } = this.state;\n    return (\n      <AnimatedLoader\n        visible={visible}\n        overlayColor=\"rgba(255,255,255,0.75)\"\n        source={require(\"./loader.json\")}\n        animationStyle={styles.lottie}\n        speed={1}\n      />\n    );\n  }\n}\n \nconst styles = StyleSheet.create({\n  lottie: {\n    width: 100,\n    height: 100\n  }\n});"]},"metadata":{},"sourceType":"module"}
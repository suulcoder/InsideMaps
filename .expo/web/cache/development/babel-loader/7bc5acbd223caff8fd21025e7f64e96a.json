{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(login),\n    _marked2 = _regeneratorRuntime.mark(watchLoginStarted),\n    _marked3 = _regeneratorRuntime.mark(signup),\n    _marked4 = _regeneratorRuntime.mark(watchSignUpStarted);\n\nimport { call, takeEvery, put, delay, select } from 'redux-saga/effects';\nimport * as actions from \"../actions/auth\";\nimport * as types from \"../types/auth\";\nimport axios from 'axios';\nimport { bodyParser } from \"../modules/parser\";\nvar API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\nfunction login(action) {\n  var _response, _yield$_response$json, token, _yield$_response$json2, message;\n\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fetch, API_BASE_URL + \"/signin/\", {\n            method: 'POST',\n            body: bodyParser(action.payload),\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n\n        case 3:\n          _response = _context.sent;\n\n          if (!(_response.status === 200)) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 7;\n          return _response.json();\n\n        case 7:\n          _yield$_response$json = _context.sent;\n          token = _yield$_response$json.token;\n          _context.next = 11;\n          return put(actions.completeLogin(token));\n\n        case 11:\n          _context.next = 19;\n          break;\n\n        case 13:\n          _context.next = 15;\n          return _response.json();\n\n        case 15:\n          _yield$_response$json2 = _context.sent;\n          message = _yield$_response$json2.message;\n          _context.next = 19;\n          return put(actions.failLogin(message, 0));\n\n        case 19:\n          _context.next = 26;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 26;\n          return put(actions.failLogin('CONNECTION FAILED', 0));\n\n        case 26:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 21]]);\n}\n\nexport function watchLoginStarted() {\n  return _regeneratorRuntime.wrap(function watchLoginStarted$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.AUTHENTICATION_STARTED, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signup(action) {\n  var _response2, _yield$_response3$jso, result, _response3, _yield$_response3$jso2, token, _yield$_response3$jso3, message, _yield$_response2$jso, _message, _yield$response$json, _message2;\n\n  return _regeneratorRuntime.wrap(function signup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(fetch, API_BASE_URL + \"/signup/\", {\n            method: 'POST',\n            body: bodyParser(action.payload),\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n\n        case 3:\n          _response2 = _context3.sent;\n\n          if (!(_response2.status > 200 && _response2.status < 300)) {\n            _context3.next = 30;\n            break;\n          }\n\n          console.log(_response3);\n          _context3.next = 8;\n          return _response3.json();\n\n        case 8:\n          _yield$_response3$jso = _context3.sent;\n          result = _yield$_response3$jso.result;\n          _context3.next = 12;\n          return call(fetch, API_BASE_URL + \"/signin/\", {\n            method: 'POST',\n            body: bodyParser({\n              username: result.username,\n              password: result.password\n            }),\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n\n        case 12:\n          _response3 = _context3.sent;\n\n          if (!(_response3.status === 200)) {\n            _context3.next = 22;\n            break;\n          }\n\n          _context3.next = 16;\n          return _response3.json();\n\n        case 16:\n          _yield$_response3$jso2 = _context3.sent;\n          token = _yield$_response3$jso2.token;\n          _context3.next = 20;\n          return put(actions.completeLogin(token));\n\n        case 20:\n          _context3.next = 28;\n          break;\n\n        case 22:\n          _context3.next = 24;\n          return _response3.json();\n\n        case 24:\n          _yield$_response3$jso3 = _context3.sent;\n          message = _yield$_response3$jso3.message;\n          _context3.next = 28;\n          return put(actions.failLogin('Â¡User created, please login!', 1));\n\n        case 28:\n          _context3.next = 36;\n          break;\n\n        case 30:\n          _context3.next = 32;\n          return _response2.json();\n\n        case 32:\n          _yield$_response2$jso = _context3.sent;\n          _message = _yield$_response2$jso.message;\n          _context3.next = 36;\n          return put(actions.failLogin(_message, 1));\n\n        case 36:\n          _context3.next = 46;\n          break;\n\n        case 38:\n          _context3.prev = 38;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 42;\n          return response.json();\n\n        case 42:\n          _yield$response$json = _context3.sent;\n          _message2 = _yield$response$json.message;\n          _context3.next = 46;\n          return put(actions.failLogin(_message2, 1));\n\n        case 46:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 38]]);\n}\n\nexport function watchSignUpStarted() {\n  return _regeneratorRuntime.wrap(function watchSignUpStarted$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(types.REGISTRATION_STARTED, signup);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/sagas/auth.js"],"names":["login","watchLoginStarted","signup","watchSignUpStarted","call","takeEvery","put","delay","select","actions","types","axios","bodyParser","API_BASE_URL","action","fetch","method","body","payload","headers","response","status","json","token","completeLogin","message","failLogin","console","log","AUTHENTICATION_STARTED","result","username","password","REGISTRATION_STARTED"],"mappings":"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","sourcesContent":["import {\n  call,\n  takeEvery,\n  put,\n  // race,\n  // all,\n  delay,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/auth';\nimport * as types from '../types/auth';\nimport axios from 'axios';\nimport { bodyParser } from '../modules/parser';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* login(action) {\n\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signin/`,\n      {\n        method: 'POST',\n        body: bodyParser(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,0));   //0 because is in login form\n    }\n\n  } catch (error) {\n    console.log(error)\n    yield put(actions.failLogin('CONNECTION FAILED',0));   //0 because is in login form\n  }\n}\n\n\nexport function* watchLoginStarted() {\n  yield takeEvery(\n    types.AUTHENTICATION_STARTED,\n    login,\n  );\n}\n\n\nfunction* signup(action) {\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signup/`,\n      {\n        method: 'POST',\n        body: bodyParser(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n\n    if (response.status > 200 && response.status < 300) {\n      console.log(response)\n      const { result } = yield response.json();\n      const response = yield call(\n        fetch,  \n        `${API_BASE_URL}/signin/`,\n        {\n          method: 'POST',\n          body: bodyParser({username: result.username, password:result.password}),\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        },\n      );\n  \n      if (response.status === 200) {\n        const { token } = yield response.json();\n        yield put(actions.completeLogin(token));\n      } else {\n        const { message } = yield response.json();\n        yield put(actions.failLogin('Â¡User created, please login!',1));\n      }\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,1));   //1 because is in signup form\n    }\n\n  } catch (error) {\n    const { message } = yield response.json();\n    yield put(actions.failLogin(message,1));   //1 because is in signup form\n  }\n  \n}\n\nexport function* watchSignUpStarted() {\n  yield takeEvery(\n    types.REGISTRATION_STARTED,\n    signup,\n  );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport var loadState = function loadState() {\n  var serializedState;\n  return _regeneratorRuntime.async(function loadState$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('state'));\n\n        case 3:\n          serializedState = _context.sent;\n\n          if (!(serializedState === null)) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", undefined);\n\n        case 6:\n          return _context.abrupt(\"return\", JSON.parse(serializedState));\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", undefined);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\nexport var saveState = function saveState() {\n  var serializedState;\n  return _regeneratorRuntime.async(function saveState$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          serializedState = JSON.stringify(state);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('state', serializedState));\n\n        case 4:\n          _context2.next = 9;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/localStorage.js"],"names":["loadState","AsyncStorage","getItem","serializedState","undefined","JSON","parse","saveState","stringify","state","setItem","console","log"],"mappings":";;AAEA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAESC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFT;;AAAA;AAEfC,UAAAA,eAFe;;AAAA,gBAGlBA,eAAe,KAAG,IAHA;AAAA;AAAA;AAAA;;AAAA,2CAIVC,SAJU;;AAAA;AAAA,2CAMdC,IAAI,CAACC,KAAL,CAAWH,eAAX,CANc;;AAAA;AAAA;AAAA;AAAA,2CASZC,SATY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAaP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfJ,UAAAA,eAFe,GAEGE,IAAI,CAACG,SAAL,CAAeC,KAAf,CAFH;AAAA;AAAA,2CAGfR,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA6BP,eAA7B,CAHe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMnBQ,UAAAA,OAAO,CAACC,GAAR;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import {AsyncStorage} from 'react-native';\n\nexport const loadState = async () => {\n  try{\n    const serializedState = await AsyncStorage.getItem('state');\n    if(serializedState===null){\n        return undefined\n    }\n    return JSON.parse(serializedState);\n  }\n  catch (err){\n      return undefined\n  }\n};\n\nexport const saveState = async () => {\n  try{\n    const serializedState = JSON.stringify(state);\n    await AsyncStorage.setItem('state',serializedState)\n  }\n  catch(err){\n      console.log(err)\n  }\n};"]},"metadata":{},"sourceType":"module"}
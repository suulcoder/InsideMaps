{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(login),\n    _marked2 = _regeneratorRuntime.mark(watchLoginStarted),\n    _marked3 = _regeneratorRuntime.mark(signup),\n    _marked4 = _regeneratorRuntime.mark(watchSignUpStarted);\n\nimport { call, takeEvery, put, delay, select } from 'redux-saga/effects';\nimport * as actions from \"../actions/auth\";\nimport * as types from \"../types/auth\";\nimport axios from 'axios';\nimport { bodyParser } from \"../modules/parser\";\nvar API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\nfunction login(action) {\n  var response, _yield$response$json, token, _yield$response$json2, message;\n\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fetch, API_BASE_URL + \"/signin/\", {\n            method: 'POST',\n            body: bodyParser(action.payload),\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 7;\n          return response.json();\n\n        case 7:\n          _yield$response$json = _context.sent;\n          token = _yield$response$json.token;\n          _context.next = 11;\n          return put(actions.completeLogin(token));\n\n        case 11:\n          _context.next = 19;\n          break;\n\n        case 13:\n          _context.next = 15;\n          return response.json();\n\n        case 15:\n          _yield$response$json2 = _context.sent;\n          message = _yield$response$json2.message;\n          _context.next = 19;\n          return put(actions.failLogin(message, 0));\n\n        case 19:\n          _context.next = 25;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 25;\n          return put(actions.failLogin('CONNECTION FAILED', 0));\n\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 21]]);\n}\n\nexport function watchLoginStarted() {\n  return _regeneratorRuntime.wrap(function watchLoginStarted$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.AUTHENTICATION_STARTED, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signup(action) {\n  var response, _yield$response$json3, message;\n\n  return _regeneratorRuntime.wrap(function signup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(\"esto le mandamos bro\", action.payload);\n          _context3.next = 4;\n          return call(fetch, API_BASE_URL + \"/signup/\", {\n            method: 'POST',\n            body: JSON.stringify(action.payload),\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n\n        case 4:\n          response = _context3.sent;\n          console.log(\"esto nos mandan : \", response);\n\n          if (!(response.status > 200 && response.status < 300)) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 9;\n          return put(actions.failLogin('Â¡User created, please login!', 1));\n\n        case 9:\n          _context3.next = 17;\n          break;\n\n        case 11:\n          _context3.next = 13;\n          return response.json();\n\n        case 13:\n          _yield$response$json3 = _context3.sent;\n          message = _yield$response$json3.message;\n          _context3.next = 17;\n          return put(actions.failLogin(message, 1));\n\n        case 17:\n          _context3.next = 23;\n          break;\n\n        case 19:\n          _context3.prev = 19;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 23;\n          return put(actions.failLogin('CONNECTION FAILED', 1));\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 19]]);\n}\n\nexport function watchSignUpStarted() {\n  return _regeneratorRuntime.wrap(function watchSignUpStarted$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(types.REGISTRATION_STARTED, signup);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/sagas/auth.js"],"names":["login","watchLoginStarted","signup","watchSignUpStarted","call","takeEvery","put","delay","select","actions","types","axios","bodyParser","API_BASE_URL","action","fetch","method","body","payload","headers","response","status","json","token","completeLogin","message","failLogin","AUTHENTICATION_STARTED","console","log","JSON","stringify","REGISTRATION_STARTED"],"mappings":"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","sourcesContent":["import {\n  call,\n  takeEvery,\n  put,\n  // race,\n  // all,\n  delay,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/auth';\nimport * as types from '../types/auth';\nimport axios from 'axios';\nimport { bodyParser } from '../modules/parser';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* login(action) {\n\n  try {\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signin/`,\n      {\n        method: 'POST',\n        body: bodyParser(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,0));   //0 because is in login form\n    }\n\n  } catch (error) {\n    yield put(actions.failLogin('CONNECTION FAILED',0));   //0 because is in login form\n  }\n}\n\n\nexport function* watchLoginStarted() {\n  yield takeEvery(\n    types.AUTHENTICATION_STARTED,\n    login,\n  );\n}\n\n\nfunction* signup(action) {\n  try {\n    console.log(\"esto le mandamos bro\",action.payload);\n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signup/`,\n      {\n        method: 'POST',\n        body: JSON.stringify(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n    console.log(\"esto nos mandan : \",response);\n    \n    if (response.status > 200 && response.status < 300) {\n        yield put(actions.failLogin('Â¡User created, please login!',1));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,1));   //1 because is in signup form\n    }\n\n  } catch (error) {\n    yield put(actions.failLogin('CONNECTION FAILED',1));   //1 because is in signup form\n  }\n  \n}\n\nexport function* watchSignUpStarted() {\n  yield takeEvery(\n    types.REGISTRATION_STARTED,\n    signup,\n  );\n}"]},"metadata":{},"sourceType":"module"}
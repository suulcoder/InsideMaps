{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/AppState/index.js\";\nimport React from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"../Header\";\nimport styles from \"./styles\";\nimport BodyContent from \"../BodyContent\";\nimport { connect } from 'react-redux';\nimport { getAuthToken } from \"../../reducers/index\";\n\nvar MyApp = function MyApp(_ref) {\n  var isLogged = _ref.isLogged;\n  return React.createElement(ImageBackground, {\n    source: require(\"../../../public/img/image.png\"),\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }, isLogged ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }), React.createElement(BodyContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar AppState = function AppState(_ref2) {\n  var isLogged = _ref2.isLogged;\n\n  if (typeof document != 'undefined') {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, React.createElement(MyApp, {\n      isLogged: isLogged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(\"myApp\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connect(function (state) {\n  console.log(state);\n  return {\n    isLogged: getAuthToken(state) != null\n  };\n}, function (dispatch) {\n  return {\n    onSubmit: function onSubmit(user, password) {}\n  };\n})(AppState);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/AppState/index.js"],"names":["React","Header","styles","BodyContent","connect","getAuthToken","MyApp","isLogged","require","image","AppState","document","container","state","console","log","dispatch","onSubmit","user","password"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,SACZ,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEC,OAAO,iCAAhC;AAAmE,IAAA,KAAK,EAAEN,MAAM,CAACO,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMF,QAAD,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALN,CADY;AAAA,CAAd;;AAgBA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,QAAgB;AAAA,MAAdH,QAAc,SAAdA,QAAc;;AAC/B,MAAI,OAAOI,QAAP,IAAmB,WAAvB,EAAoC;AAElC,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AACD,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEL,MAAM,CAACU,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAdD;;AAgBA,eAAeR,OAAO,CACpB,UAAAS,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLN,IAAAA,QAAQ,EAAEF,YAAY,CAACQ,KAAD,CAAZ,IAAqB;AAD1B,GAAP;AAGD,CANmB,EAOpB,UAAAG,QAAQ;AAAA,SAAK;AACTC,IAAAA,QADS,oBACAC,IADA,EACKC,QADL,EACc,CAEtB;AAHQ,GAAL;AAAA,CAPY,CAAP,CAYbT,QAZa,CAAf","sourcesContent":["import React from \"react\";\nimport { ImageBackground, ScrollView, View } from \"react-native\";\nimport Header from \"../Header\";\nimport styles from './styles'\nimport BodyContent from \"../BodyContent\";\nimport { connect } from 'react-redux'\nimport { getAuthToken } from '../../reducers/index'\n\nconst MyApp = ({isLogged}) => (\n  <ImageBackground source={require('../../../public/img/image.png')} style={styles.image}>\n     {\n       (isLogged)?(\n        <View></View>\n       ):(\n        <View>\n          <Header></Header>\n          <BodyContent></BodyContent>\n        </View>\n       )\n     }\n    \n  </ImageBackground>\n)\n\nconst AppState = ({isLogged}) => {\n  if (typeof document != 'undefined') {\n    // I'm on the web!\n    return (\n      <View style={styles.container}>\n        <MyApp isLogged={isLogged}></MyApp>\n      </View>\n    );\n  }\n  return (\n    <ScrollView style={styles.container}>\n      <myApp></myApp>\n    </ScrollView>\n  )\n}; \n\nexport default connect(\n  state => {\n    console.log(state)\n    return({\n      isLogged: getAuthToken(state)!=null\n    })\n  },\n  dispatch => ({\n      onSubmit(user,password){\n          \n      }\n  })\n)(AppState)"]},"metadata":{},"sourceType":"module"}
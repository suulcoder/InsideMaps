{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/Login/index.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\nimport { getError, getIsLogging } from \"../../reducers\";\nimport * as actions from \"../../actions/auth\";\n\nvar Login = function Login(_ref) {\n  var Message = _ref.Message,\n      onSubmit = _ref.onSubmit;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      changeEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      changePassword = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.user,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"email\",\n    value: email,\n    onChangeText: changeEmail,\n    onChange: function onChange(e) {\n      return changeUser(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.password,\n    className: \"password\",\n    type: \"password\",\n    secureTextEntry: true,\n    placeholder: \"password\",\n    value: password,\n    onChangeText: changePassword,\n    onChange: function onChange(e) {\n      return changePassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    className: \"login_button\",\n    color: \"#540A08\",\n    title: 'LOGIN',\n    type: \"submit\",\n    onPress: function onPress() {\n      return onSubmit(email, password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }))), React.createElement(Text, {\n    style: styles.errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, Message), React.createElement(View, {\n    style: styles.sectionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Scroll Down \\u2193\")));\n};\n\nexport default connect(function (state) {\n  return {\n    Message: getIsLogging(state) !== null ? getIsLogging(state) ? 'LOADING...' : getError(state) : undefined\n  };\n}, function (dispatch) {\n  return {\n    onSubmit: function onSubmit(email, password) {\n      if (user && password) {\n        dispatch(actions.startLogin(email, password));\n      } else if (!user) {\n        dispatch(actions.failLogin('USER FIELD MUST NOT BE EMPTY', 0));\n      } else if (!password) {\n        dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY', 0));\n      }\n    }\n  };\n})(Login);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/components/Login/index.js"],"names":["React","useState","connect","styles","getError","getIsLogging","actions","Login","Message","onSubmit","email","changeEmail","password","changePassword","section","login","user","e","changeUser","target","value","button","errorText","sectionText","text","state","undefined","dispatch","startLogin","failLogin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { View, TextInput, Button, Text } from \"react-native\";\nimport styles from './styles'\nimport { getError, getIsLogging } from '../../reducers'\nimport * as actions from '../../actions/auth'\n\nconst Login = ({Message ,onSubmit}) => {\n    const [email,changeEmail] = useState('')\n    const [password,changePassword] = useState('')\n    return (\n        <View style={styles.section}>\n            <View style={styles.login}>\n                <TextInput\n                style={styles.user}\n                className=\"user\"\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                onChangeText={changeEmail}\n                onChange={e => changeUser(e.target.value)}\n                />\n                <TextInput\n                    style={styles.password}\n                    className=\"password\"\n                    type=\"password\"\n                    secureTextEntry={true}\n                    placeholder=\"password\"\n                    value={password}\n                    onChangeText={changePassword}\n                    onChange={e=>changePassword(e.target.value)}\n                />\n                <View style={styles.button}>\n                    <Button className=\"login_button\" color='#540A08'  title={'LOGIN'} type=\"submit\" onPress={\n                        () => onSubmit(email,password)\n                    }/>\n                </View>\n                \n            </View>\n            <Text style={styles.errorText}>{Message}</Text>\n            <View style={styles.sectionText}>\n                <Text style={styles.text}>Scroll Down â†“</Text>\n            </View>\n        </View>\n    )\n}\n\nexport default connect(\n    state => ({\n        Message: (getIsLogging(state)!==null)?\n            ((getIsLogging(state))?\n                ('LOADING...'):\n                (getError(state))):\n            (undefined) \n    }),\n    dispatch => ({\n        onSubmit(email,password){\n            if(user && password){\n                dispatch(actions.startLogin(email,password))\n                \n            }    \n            else if(!user){\n                dispatch(actions.failLogin('USER FIELD MUST NOT BE EMPTY',0))\n            }\n            else if(!password){\n                dispatch(actions.failLogin('PASSWORD FIELD MUST NOT BE EMPTY',0))\n            }\n        }\n    })\n)(Login)\n\n"]},"metadata":{},"sourceType":"module"}
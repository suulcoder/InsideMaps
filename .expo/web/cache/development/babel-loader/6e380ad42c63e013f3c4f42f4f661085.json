{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(createMap),\n    _marked2 = _regeneratorRuntime.mark(watchCreateMap);\n\nimport { call, takeEvery, put, select } from 'redux-saga/effects';\nimport * as actions from \"../actions/map\";\nimport * as types from \"../types/map\";\nimport * as selectors from \"../reducers\";\nvar API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/map';\n\nfunction createMap(action) {\n  var map, oldId, isAuth, token, response, _yield$response$json, result, _map;\n\n  return _regeneratorRuntime.wrap(function createMap$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          map = action.payload;\n          oldId = map._id;\n          console.log(\"llega el old id\", oldId);\n          _context.prev = 3;\n          _context.next = 6;\n          return select(selectors.isAuthenticated);\n\n        case 6:\n          isAuth = _context.sent;\n\n          if (!isAuth) {\n            _context.next = 28;\n            break;\n          }\n\n          _context.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context.sent;\n          _context.next = 13;\n          return call(fetch, API_BASE_URL, {\n            method: 'POST',\n            body: action.payload,\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \".concat(token)\n            }\n          });\n\n        case 13:\n          response = _context.sent;\n\n          if (!(response.status === 201)) {\n            _context.next = 25;\n            break;\n          }\n\n          _context.next = 17;\n          return response.json();\n\n        case 17:\n          _yield$response$json = _context.sent;\n          result = _yield$response$json.result;\n          _map = result;\n          _context.next = 22;\n          return put(actions.completeCreatingMap(oldId, _map));\n\n        case 22:\n          console.log(\"Se creo un nuevo mapa exitosamente!\", _map);\n          _context.next = 26;\n          break;\n\n        case 25:\n          console.log(\"Error en la respuesta!\");\n\n        case 26:\n          _context.next = 29;\n          break;\n\n        case 28:\n          console.log('Error de autenticación');\n\n        case 29:\n          _context.next = 34;\n          break;\n\n        case 31:\n          _context.prev = 31;\n          _context.t0 = _context[\"catch\"](3);\n          console.log(_context.t0);\n\n        case 34:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[3, 31]]);\n}\n\nexport function watchCreateMap() {\n  return _regeneratorRuntime.wrap(function watchCreateMap$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.CREATE_MAP_STARTED, createMap);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/sagas/map.js"],"names":["createMap","watchCreateMap","call","takeEvery","put","select","actions","types","selectors","API_BASE_URL","action","map","payload","oldId","_id","console","log","isAuthenticated","isAuth","getAuthToken","token","fetch","method","body","headers","response","status","json","result","completeCreatingMap","CREATE_MAP_STARTED"],"mappings":";;uCAcUA,S;wCA2COC,c;;AAzDjB,SACEC,IADF,EAEEC,SAFF,EAGEC,GAHF,EAIEC,MAJF,QAKO,oBALP;AAOA,OAAO,KAAKC,OAAZ;AACA,OAAO,KAAKC,KAAZ;AACA,OAAO,KAAKC,SAAZ;AAEA,IAAMC,YAAY,GAAG,kDAArB;;AAGA,SAAUT,SAAV,CAAoBU,MAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQC,UAAAA,GADR,GACeD,MAAM,CAACE,OADtB;AAEQC,UAAAA,KAFR,GAEgBF,GAAG,CAACG,GAFpB;AAGEC,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,KAA/B;AAHF;AAAA;AAKmB,iBAAMR,MAAM,CAACG,SAAS,CAACS,eAAX,CAAZ;;AALnB;AAKUC,UAAAA,MALV;;AAAA,eAOOA,MAPP;AAAA;AAAA;AAAA;;AAAA;AASoB,iBAAMb,MAAM,CAACG,SAAS,CAACW,YAAX,CAAZ;;AATpB;AASYC,UAAAA,KATZ;AAAA;AAWuB,iBAAMlB,IAAI,CACzBmB,KADyB,EAEzBZ,YAFyB,EAGzB;AACEa,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,IAAI,EAAEb,MAAM,CAACE,OAFf;AAGEY,YAAAA,OAAO,EAAE;AACP,8BAAgB,kBADT;AAEP,6CAAwBJ,KAAxB;AAFO;AAHX,WAHyB,CAAV;;AAXvB;AAWYK,UAAAA,QAXZ;;AAAA,gBAwBSA,QAAQ,CAACC,MAAT,KAAoB,GAxB7B;AAAA;AAAA;AAAA;;AAAA;AAyB2B,iBAAMD,QAAQ,CAACE,IAAT,EAAN;;AAzB3B;AAAA;AAyBgBC,UAAAA,MAzBhB,wBAyBgBA,MAzBhB;AA0BcjB,UAAAA,IA1Bd,GA0BoBiB,MA1BpB;AAAA;AA2BQ,iBAAMxB,GAAG,CAACE,OAAO,CAACuB,mBAAR,CAA4BhB,KAA5B,EAAmCF,IAAnC,CAAD,CAAT;;AA3BR;AA4BQI,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDL,IAAnD;AA5BR;AAAA;;AAAA;AA8BQI,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AA9BR;AAAA;AAAA;;AAAA;AAkCMD,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAlCN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsCID,UAAAA,OAAO,CAACC,GAAR;;AAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2CA,OAAO,SAAUf,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CACbI,KAAK,CAACuB,kBADO,EAEb9B,SAFa,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\n  call,\n  takeEvery,\n  put,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/map';\nimport * as types from '../types/map';\nimport * as selectors from '../reducers';\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/map';\n\n\nfunction* createMap(action) {\n  const map  = action.payload;\n  const oldId = map._id;\n  console.log(\"llega el old id\", oldId)\n  try {\n    const isAuth = yield select(selectors.isAuthenticated)\n\n    if(isAuth){\n\n      const token = yield select(selectors.getAuthToken);\n\n      const response = yield call(\n        fetch,\n        API_BASE_URL,\n        {\n          method: 'POST',\n          body: action.payload,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${token}`,\n          },\n        }\n      );\n\n      if(response.status === 201){\n        const { result } = yield response.json();\n        const map = result;\n        yield put(actions.completeCreatingMap(oldId, map));\n        console.log(\"Se creo un nuevo mapa exitosamente!\", map); \n      } else {\n        console.log(\"Error en la respuesta!\");\n      }\n\n    } else {\n      console.log('Error de autenticación');\n    }\n\n  } catch(error) {\n    console.log(error);\n    //yield put(actions.failCreatingMap(oldId, error));\n  }\n}\n\nexport function* watchCreateMap() {\n  yield takeEvery(\n    types.CREATE_MAP_STARTED,\n    createMap,\n  );\n}"]},"metadata":{},"sourceType":"module"}
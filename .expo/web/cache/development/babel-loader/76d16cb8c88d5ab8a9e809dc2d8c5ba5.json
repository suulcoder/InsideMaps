{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(login),\n    _marked2 = _regeneratorRuntime.mark(watchLoginStarted),\n    _marked3 = _regeneratorRuntime.mark(signin);\n\nimport { call, takeEvery, put, delay, select } from 'redux-saga/effects';\nimport * as selectors from \"../reducers\";\nimport * as actions from \"../actions/auth\";\nimport * as types from \"../types/auth\";\nimport axios from 'axios';\nvar API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\nfunction login(action) {\n  var formBody, property, encodedKey, encodedValue, response, _yield$response$json, token, _yield$response$json2, message;\n\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          formBody = [];\n\n          for (property in action.payload) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(action.payload[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          _context.next = 6;\n          return call(fetch, API_BASE_URL + \"/signin/\", {\n            method: 'POST',\n            body: formBody,\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n\n        case 6:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 16;\n            break;\n          }\n\n          _context.next = 10;\n          return response.json();\n\n        case 10:\n          _yield$response$json = _context.sent;\n          token = _yield$response$json.token;\n          _context.next = 14;\n          return put(actions.completeLogin(token));\n\n        case 14:\n          _context.next = 22;\n          break;\n\n        case 16:\n          _context.next = 18;\n          return response.json();\n\n        case 18:\n          _yield$response$json2 = _context.sent;\n          message = _yield$response$json2.message;\n          _context.next = 22;\n          return put(actions.failLogin(message, 0));\n\n        case 22:\n          _context.next = 29;\n          break;\n\n        case 24:\n          _context.prev = 24;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 29;\n          return put(actions.failLogin('CONNECTION FAILED', 0));\n\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 24]]);\n}\n\nexport function watchLoginStarted() {\n  return _regeneratorRuntime.wrap(function watchLoginStarted$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.AUTHENTICATION_STARTED, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signin(action) {\n  var response, _yield$response$json3, token, _yield$response$json4, message;\n\n  return _regeneratorRuntime.wrap(function signin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(axios, API_BASE_URL + \"/signup/\", {\n            method: 'POST',\n            body: JSON.stringify(action.payload),\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n\n        case 3:\n          response = _context3.sent;\n\n          if (!(response.status === 200)) {\n            _context3.next = 13;\n            break;\n          }\n\n          _context3.next = 7;\n          return response.json();\n\n        case 7:\n          _yield$response$json3 = _context3.sent;\n          token = _yield$response$json3.token;\n          _context3.next = 11;\n          return put(actions.completeLogin(token));\n\n        case 11:\n          _context3.next = 19;\n          break;\n\n        case 13:\n          _context3.next = 15;\n          return response.json();\n\n        case 15:\n          _yield$response$json4 = _context3.sent;\n          message = _yield$response$json4.message;\n          _context3.next = 19;\n          return put(actions.failLogin(message, 1));\n\n        case 19:\n          _context3.next = 25;\n          break;\n\n        case 21:\n          _context3.prev = 21;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 25;\n          return put(actions.failLogin('CONNECTION FAILED', 1));\n\n        case 25:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 21]]);\n}","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Software/InsideMaps/src/sagas/auth.js"],"names":["login","watchLoginStarted","signin","call","takeEvery","put","delay","select","selectors","actions","types","axios","API_BASE_URL","action","formBody","property","payload","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","headers","response","status","json","token","completeLogin","message","failLogin","console","log","AUTHENTICATION_STARTED","JSON","stringify"],"mappings":"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","sourcesContent":["import {\n  call,\n  takeEvery,\n  put,\n  // race,\n  // all,\n  delay,\n  select,\n} from 'redux-saga/effects';\n\nimport * as selectors from '../reducers';\nimport * as actions from '../actions/auth';\nimport * as types from '../types/auth';\nimport axios from 'axios';\n\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* login(action) {\n\n  try {\n\n    let formBody = [];\n    for (let property in action.payload) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(action.payload[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    \n    const response = yield call(\n      fetch,  \n      `${API_BASE_URL}/signin/`,\n      {\n        method: 'POST',\n        body: formBody,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,0));   //0 because is in login form\n    }\n\n  } catch (error) {\n    console.log(error)\n    yield put(actions.failLogin('CONNECTION FAILED',0));   //0 because is in login form\n  }\n}\n\n\nexport function* watchLoginStarted() {\n  yield takeEvery(\n    types.AUTHENTICATION_STARTED,\n    login,\n  );\n}\n\n\nfunction* signin(action) {\n  try {\n    const response = yield call(\n      axios,\n      `${API_BASE_URL}/signup/`,\n      {\n        method: 'POST',\n        body: JSON.stringify(action.payload),\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    );\n\n    if (response.status === 200) {\n      const { token } = yield response.json();\n      yield put(actions.completeLogin(token));\n    } else {\n      const { message } = yield response.json();\n      yield put(actions.failLogin(message,1));                 //1 becuase is in sign up\n    }\n    \n  } catch (error) {\n    yield put(actions.failLogin('CONNECTION FAILED',1));      //1 because is in sign up\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(createMap),\n    _marked2 = _regeneratorRuntime.mark(watchCreateMap);\n\nimport { call, takeEvery, put, select } from 'redux-saga/effects';\nimport * as actions from \"../actions/map\";\nimport * as types from \"../types/map\";\nimport * as selectors from \"../reducers\";\nvar API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\nfunction createMap(action) {\n  var map, oldId, isAuth, token, response, _yield$response$json, newMap;\n\n  return _regeneratorRuntime.wrap(function createMap$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          map = action.payload.map;\n          oldId = map.id;\n          _context.prev = 2;\n          _context.next = 5;\n          return select(selectors.isAuthenticated);\n\n        case 5:\n          isAuth = _context.sent;\n\n          if (!isAuth) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.next = 9;\n          return select(selectors.getAuthToken);\n\n        case 9:\n          token = _context.sent;\n          _context.next = 12;\n          return call(fetch, API_BASE_URLM, {\n            method: 'GET',\n            body: action.payload,\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \".concat(token)\n            }\n          });\n\n        case 12:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 23;\n            break;\n          }\n\n          _context.next = 16;\n          return response.json();\n\n        case 16:\n          _yield$response$json = _context.sent;\n          newMap = _yield$response$json.newMap;\n          _context.next = 20;\n          return put(actions.completeCreatingMap(oldId, newMap));\n\n        case 20:\n          console.log(\"Se creo un nuevo mapa exitosamente!\", newMap);\n          _context.next = 24;\n          break;\n\n        case 23:\n          console.log(\"Error en la respuesta!\");\n\n        case 24:\n          _context.next = 27;\n          break;\n\n        case 26:\n          console.log('Error de autenticación');\n\n        case 27:\n          _context.next = 34;\n          break;\n\n        case 29:\n          _context.prev = 29;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n          _context.next = 34;\n          return put(actions.failCreatingMap(_context.t0));\n\n        case 34:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 29]]);\n}\n\nexport function watchCreateMap() {\n  return _regeneratorRuntime.wrap(function watchCreateMap$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.CREATE_MAP_STARTED, createMap);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/sagas/map.js"],"names":["createMap","watchCreateMap","call","takeEvery","put","select","actions","types","selectors","API_BASE_URL","action","map","payload","oldId","id","isAuthenticated","isAuth","getAuthToken","token","fetch","API_BASE_URLM","method","body","headers","response","status","json","newMap","completeCreatingMap","console","log","failCreatingMap","CREATE_MAP_STARTED"],"mappings":";;uCAcUA,S;wCAyCOC,c;;AAvDjB,SACEC,IADF,EAEEC,SAFF,EAGEC,GAHF,EAIEC,MAJF,QAKO,oBALP;AAOA,OAAO,KAAKC,OAAZ;AACA,OAAO,KAAKC,KAAZ;AACA,OAAO,KAAKC,SAAZ;AAEA,IAAMC,YAAY,GAAG,mDAArB;;AAGA,SAAUT,SAAV,CAAoBU,MAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUC,UAAAA,GADV,GACkBD,MAAM,CAACE,OADzB,CACUD,GADV;AAEQE,UAAAA,KAFR,GAEgBF,GAAG,CAACG,EAFpB;AAAA;AAAA;AAImB,iBAAMT,MAAM,CAACG,SAAS,CAACO,eAAX,CAAZ;;AAJnB;AAIUC,UAAAA,MAJV;;AAAA,eAMOA,MANP;AAAA;AAAA;AAAA;;AAAA;AAQoB,iBAAMX,MAAM,CAACG,SAAS,CAACS,YAAX,CAAZ;;AARpB;AAQYC,UAAAA,KARZ;AAAA;AAUuB,iBAAMhB,IAAI,CACzBiB,KADyB,EAEzBC,aAFyB,EAGzB;AACEC,YAAAA,MAAM,EAAE,KADV;AAEEC,YAAAA,IAAI,EAAEZ,MAAM,CAACE,OAFf;AAGEW,YAAAA,OAAO,EAAE;AACP,8BAAgB,kBADT;AAEP,6CAAwBL,KAAxB;AAFO;AAHX,WAHyB,CAAV;;AAVvB;AAUYM,UAAAA,QAVZ;;AAAA,gBAuBSA,QAAQ,CAACC,MAAT,KAAoB,GAvB7B;AAAA;AAAA;AAAA;;AAAA;AAwB2B,iBAAMD,QAAQ,CAACE,IAAT,EAAN;;AAxB3B;AAAA;AAwBgBC,UAAAA,MAxBhB,wBAwBgBA,MAxBhB;AAAA;AAyBQ,iBAAMvB,GAAG,CAACE,OAAO,CAACsB,mBAAR,CAA4Bf,KAA5B,EAAmCc,MAAnC,CAAD,CAAT;;AAzBR;AA0BQE,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDH,MAAnD;AA1BR;AAAA;;AAAA;AA4BQE,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AA5BR;AAAA;AAAA;;AAAA;AAgCMD,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAhCN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoCID,UAAAA,OAAO,CAACC,GAAR;AApCJ;AAqCI,iBAAM1B,GAAG,CAACE,OAAO,CAACyB,eAAR,aAAD,CAAT;;AArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyCA,OAAO,SAAU9B,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CACbI,KAAK,CAACyB,kBADO,EAEbhC,SAFa,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\n  call,\n  takeEvery,\n  put,\n  select,\n} from 'redux-saga/effects';\n\nimport * as actions from '../actions/map';\nimport * as types from '../types/map';\nimport * as selectors from '../reducers';\n\nconst API_BASE_URL = 'https://inside-maps-api.herokuapp.com/api/v1/auth';\n\n\nfunction* createMap(action) {\n  const { map } = action.payload;\n  const oldId = map.id;\n  try {\n    const isAuth = yield select(selectors.isAuthenticated)\n\n    if(isAuth){\n\n      const token = yield select(selectors.getAuthToken);\n\n      const response = yield call(\n        fetch,\n        API_BASE_URLM,\n        {\n          method: 'GET',\n          body: action.payload,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${token}`,\n          },\n        }\n      );\n\n      if(response.status === 200){\n        const { newMap } = yield response.json();\n        yield put(actions.completeCreatingMap(oldId, newMap));\n        console.log(\"Se creo un nuevo mapa exitosamente!\", newMap); \n      } else {\n        console.log(\"Error en la respuesta!\");\n      }\n\n    } else {\n      console.log('Error de autenticación');\n    }\n\n  } catch(error) {\n    console.log(error);\n    yield put(actions.failCreatingMap(error));\n  }\n}\n\nexport function* watchCreateMap() {\n  yield takeEvery(\n    types.CREATE_MAP_STARTED,\n    createMap,\n  );\n}"]},"metadata":{},"sourceType":"module"}
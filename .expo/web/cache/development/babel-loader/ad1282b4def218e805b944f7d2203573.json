{"ast":null,"code":"import { combineReducers } from 'redux';\nimport auth, * as authSelectors from \"./auth\";\nvar reducer = combineReducers({\n  auth: auth\n});\nexport default reducer;\nexport var getAuthToken = function getAuthToken(state) {\n  return authSelectors.getAuthToken(state.auth);\n};\nexport var getIsAuthenticating = function getIsAuthenticating(state) {\n  return authSelectors.getIsAuthenticating(state.auth);\n};\nexport var getIsAuthenticatingError = function getIsAuthenticatingError(state) {\n  return authSelectors.getIsAuthenticatingError(state.auth);\n};\nexport var isAuthenticated = function isAuthenticated(state) {\n  return getAuthToken(state) != null;\n};","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/INGENIERIA/InsideMaps/src/reducers/index.js"],"names":["combineReducers","auth","authSelectors","reducer","getAuthToken","state","getIsAuthenticating","getIsAuthenticatingError","isAuthenticated"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,EAAa,KAAKC,aAAlB;AAEA,IAAMC,OAAO,GAAGH,eAAe,CAAC;AAC9BC,EAAAA,IAAI,EAAJA;AAD8B,CAAD,CAA/B;AAIA,eAAeE,OAAf;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,SAAIH,aAAa,CAACE,YAAd,CAA2BC,KAAK,CAACJ,IAAjC,CAAJ;AAAA,CAA1B;AACP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAD,KAAK;AAAA,SAAIH,aAAa,CAACI,mBAAd,CAAkCD,KAAK,CAACJ,IAAxC,CAAJ;AAAA,CAAjC;AACP,OAAO,IAAMM,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAF,KAAK;AAAA,SAAIH,aAAa,CAACK,wBAAd,CAAuCF,KAAK,CAACJ,IAA7C,CAAJ;AAAA,CAAtC;AACP,OAAO,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,KAAK;AAAA,SAAID,YAAY,CAACC,KAAD,CAAZ,IAAuB,IAA3B;AAAA,CAA7B","sourcesContent":["import { combineReducers } from 'redux';\n\nimport auth, * as authSelectors from './auth';\n\nconst reducer = combineReducers({\n  auth\n});\n\nexport default reducer;\n\nexport const getAuthToken = state => authSelectors.getAuthToken(state.auth);\nexport const getIsAuthenticating = state => authSelectors.getIsAuthenticating(state.auth);\nexport const getIsAuthenticatingError = state => authSelectors.getIsAuthenticatingError(state.auth);\nexport const isAuthenticated = state => getAuthToken(state) != null;\n"]},"metadata":{},"sourceType":"module"}